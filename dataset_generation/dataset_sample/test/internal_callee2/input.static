,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp ebx , eax jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov edx , eax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rdx call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , num jg hexvar cmp eax , num je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe cmp rdx , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rsi mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar neg eax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num mov edx , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pxor xmm0 , xmm0 mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cvtsi2sd xmm0 , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov ebx , num jmp hexvar mov ebx , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov ecx , num jmp hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , ebx mov esi , ecx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] movapd xmm2 , xmm0 divsd xmm2 , xmm1 mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] movapd xmm3 , xmm0 divsd xmm3 , xmm1 mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movapd xmm1 , xmm3 mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar neg eax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num mov edx , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rbx , [ rax + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rbx , [ rax + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar test eax , eax js hexvar cmp eax , num jg hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar test eax , eax js hexvar cmp eax , num jg hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rip + hexvar ] call hexvar mov ebx , eax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , r12 mov rdi , rax call hexvar mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] push num push num push - num push hexvar lea rdx , [ rip + hexvar ] push rdx push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , ebx lea rdx , [ rip + hexvar ] mov rsi , rax mov eax , num call hexvar add rsp , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov eax , dword ptr [ rbp - num ] or ah , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov word ptr [ rip + hexvar ] , num mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num call hexvar lea rdi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rbx mov rdi , rcx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , num mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx pop rbx mov rsi , rax xor eax , eax jmp hexvar
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rax + num ] , num jne hexvar mov qword ptr [ rax + hexvar ] , rsi mov eax , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 xor eax , eax mov r13d , edx mov rdx , rsi push r12 mov r12 , rsi lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar lea rdi , [ rbx + hexvar ] mov r8d , r13d mov rdx , r12 mov rsi , rbp xor ecx , ecx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rdx * num ] xor rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rdx * num ] , rcx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al mov rdx , qword ptr [ rbp - num ] add rdx , num movzx edx , byte ptr [ rdx ] movzx edx , dl shl rdx , num or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rdx , rax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rax , rdx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp ebx , eax jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov edx , eax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rdx call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , num jg hexvar cmp eax , num je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe cmp rdx , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] imul eax , eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rcx , rdx sub rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx cmp rcx , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rsi mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar neg eax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num mov edx , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pxor xmm0 , xmm0 mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cvtsi2sd xmm0 , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov ebx , num jmp hexvar mov ebx , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov ecx , num jmp hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , ebx mov esi , ecx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] movapd xmm2 , xmm0 divsd xmm2 , xmm1 mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] movapd xmm3 , xmm0 divsd xmm3 , xmm1 mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar movzx eax , word ptr [ rax ] movzx eax , ax cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movapd xmm1 , xmm3 mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar neg eax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num mov edx , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rbx , [ rax + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rbx , [ rax + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar test eax , eax js hexvar cmp eax , num jg hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar test eax , eax js hexvar cmp eax , num jg hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rip + hexvar ] call hexvar mov ebx , eax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , r12 mov rdi , rax call hexvar mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] push num push num push - num push hexvar lea rdx , [ rip + hexvar ] push rdx push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , ebx lea rdx , [ rip + hexvar ] mov rsi , rax mov eax , num call hexvar add rsp , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push num push num push hexvar lea r9 , [ rip + hexvar ] mov r8d , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar or dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar test eax , eax je hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov esi , ecx mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rbx mov rdi , rcx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , num mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , eax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov eax , dword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
mov qword ptr [ rsp - hexvar ] , rdi mov rax , qword ptr [ rsp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rsp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] shr eax , hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] xor dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] ror eax , num mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] mov dword ptr [ rsp - num ] , eax mov rax , qword ptr [ rsp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rsp - num ] add edx , eax mov rax , qword ptr [ rsp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor edx , eax mov rax , qword ptr [ rsp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] shr eax , hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] xor dword ptr [ rsp - num ] , eax mov rax , qword ptr [ rsp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov edx , eax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , eax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] cmp rsi , rcx jae hexvar mov ecx , num jmp hexvar mov ecx , num add rdx , rcx add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe cmp rdx , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] imul eax , eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rcx , rdx sub rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx cmp rcx , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax jg hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al test eax , eax je hexvar test eax , eax js hexvar cmp eax , num jg hexvar jmp hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movzx edx , byte ptr [ rbp - hexvar ] cdqe mov byte ptr [ rbp + rax - hexvar ] , dl jmp hexvar nop lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax jg hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movzx edx , byte ptr [ rbp - hexvar ] cdqe mov byte ptr [ rbp + rax - hexvar ] , dl mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe mov byte ptr [ rbp + rax - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , num jne hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] sub edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num nop pop rbp ret
push rbp mov rbp , rsp mov esi , num mov edi , num call hexvar pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jbe hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx cmp eax , num ja hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , num or rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or rcx , rax mov rdx , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov eax , num pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rsi , rax mov rax , rsi add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax setne al movzx eax , al leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + hexvar ] mov edx , num mov esi , num mov rdi , rcx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar cmp eax , num jg hexvar test eax , eax jmp hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] test edx , edx jne hexvar mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] test edx , edx je hexvar mov ecx , num jmp hexvar mov ecx , num mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , ecx mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] add rdx , num sub rdx , qword ptr [ rbp - hexvar ] sub eax , edx mov edx , eax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movsx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , num mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + hexvar ] mov edx , num mov esi , num mov rdi , rcx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov rax , rdx cmp rax , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al shl rax , num or rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , num add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] test edx , edx jne hexvar mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] test edx , edx je hexvar mov ecx , num jmp hexvar mov ecx , num mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , ecx mov rdi , rdx call rax jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num call rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar cmp eax , num jg hexvar test eax , eax jmp hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar nop add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop jmp hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rdx , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl eax , num sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov ecx , eax shr rsi , cl mov rax , rsi test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] add eax , num pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , num lea rdx , [ rax * num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdx mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx or rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] not rax mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rsi and rdx , rcx mov qword ptr [ rax ] , rdx jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rbp - num ] cdqe movzx ecx , byte ptr [ rdx + rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx edx , byte ptr [ rax ] xor edx , ecx mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] xor eax , ecx movzx eax , al or dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] shr eax , num pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov esi , eax mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov rdi , qword ptr [ rax + rdx * num ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movzx r8d , al mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx shl eax , num mov ecx , eax shl r8 , cl mov rax , r8 mov rcx , rdi or rcx , rax mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov qword ptr [ rax + rdx * num ] , rcx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] shl eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx shl eax , num mov ecx , eax shr rsi , cl mov rax , rsi movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] shl eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx shl eax , num mov ecx , eax shr rsi , cl mov rax , rsi movzx eax , al pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp byte ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx ebx , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov r13 , rax jmp hexvar mov r13d , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov r12 , rax jmp hexvar mov r12d , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rsi , rax jmp hexvar mov esi , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov r8d , ebx mov rcx , r13 mov rdx , r12 mov rdi , rax call hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rdx , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp byte ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] xor eax , ecx movzx eax , al or dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] shr eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rdx ] , rcx mov qword ptr [ rdx + num ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rdx + hexvar ] , eax nop pop rbx pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl eax , num sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov ecx , eax shr rsi , cl mov rax , rsi test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] add eax , num pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] shl eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx shl eax , num mov ecx , eax shr rsi , cl mov rax , rsi movzx eax , al pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] xor eax , ecx movzx eax , al or dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] shr eax , num pop rbp ret
,
,
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rdx ] , rcx mov qword ptr [ rdx + num ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rdx + hexvar ] , eax nop pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov dword ptr [ rax + rdx * num + num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov dword ptr [ rax + rdx * num + num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] xor eax , ecx movzx eax , al or dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] shr eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] xor eax , ecx movzx eax , al or dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] shr eax , num pop rbp ret
,
,
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rdx ] , rcx mov qword ptr [ rdx + num ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx mov rcx , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rbx nop pop rbx pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , num lea rdx , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call rbx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx add rax , num mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax lea rdi , [ rip - hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rsi , rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx add rax , rsi mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar or dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar test eax , eax je hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov esi , ecx mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov dword ptr [ rax + num ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rdi mov edi , esi push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rax , qword ptr [ rax + num ] mov rsi , rbx call qword ptr [ rax + hexvar ] mov rcx , rbp mov rdi , rbx mov edx , num mov esi , num call hexvar cmp rax , num setne al add rsp , hexvar movzx eax , al pop rbx pop rbp ret
,
,
push rbp mov rbp , rdi mov edi , esi push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rax , qword ptr [ rax + num ] mov rsi , rbx call qword ptr [ rax + hexvar ] mov rcx , rbp mov rdi , rbx mov edx , num mov esi , num call hexvar cmp rax , num setne al add rsp , hexvar movzx eax , al pop rbx pop rbp ret
push rbp mov rcx , rdi mov edx , num mov rbp , rsi push rbx mov esi , num sub rsp , hexvar lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov edx , num cmp rax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx mov rax , qword ptr [ rax + num ] call qword ptr [ rax + hexvar ] xor edx , edx mov dword ptr [ rbp ] , eax add rsp , hexvar mov eax , edx pop rbx pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + num ] cmp rbx , qword ptr [ rdi + hexvar ] jae hexvar mov rbp , rdi mov r12 , rsi mov r13 , rdx jmp hexvar nop add rbx , hexvar cmp qword ptr [ rbp + hexvar ] , rbx jbe hexvar mov rax , qword ptr [ r12 ] cmp rax , qword ptr [ rbx ] jb hexvar cmp rax , qword ptr [ rbx + num ] ja hexvar mov rsi , r13 mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
,
,
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test byte ptr [ rip + hexvar ] , num jne hexvar lea r12 , [ rip + hexvar ] cmp rbx , rbp jb hexvar jmp hexvar nop word ptr [ rax + rax ] add rbx , num cmp rbp , rbx jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx sub rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] add rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] call qword ptr [ rax + hexvar ] mov r14 , rax and eax , hexvar cmp eax , hexvar jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar shl r14 , hexvar sar r14 , hexvar add r14 , rbx mov edi , r14d call hexvar test eax , eax jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov rdi , r12 add rbx , num call hexvar cmp rbp , rbx ja hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rsi , r14 lea rdi , [ rip + hexvar ] call hexvar mov r15 , rax test rax , rax je hexvar mov rcx , qword ptr [ rax ] test byte ptr [ rip + hexvar ] , num jne hexvar cmp r14 , rcx jne hexvar xor edx , edx mov rsi , r15 mov rdi , r13 call hexvar jmp hexvar nop mov rsi , rbx lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov rsi , r14 xor eax , eax lea rdi , [ rip + hexvar ] call hexvar cmp qword ptr [ r15 ] , r14 jne hexvar jmp hexvar mov rsi , qword ptr [ rdi + hexvar ] mov rcx , rdx lea rdi , [ rip + hexvar ] xor eax , eax mov rdx , rbx call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rcx , rdi mov rdi , rsi mov esi , num mov rbx , rdx call hexvar cmp rax , rbx pop rbx setne al movzx eax , al ret
,
,
,
,
,
,
,
,
,
push rbx mov edx , dword ptr [ rdi ] test edx , edx je hexvar mov r10 , qword ptr [ rdi + num ] lea edi , [ rdx - num ] mov rdx , rdi test edi , edi je hexvar mov r11d , dword ptr [ rip + hexvar ] xor r9d , r9d xor r8d , r8d and r11d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ r10 + rcx + hexvar ] , rsi ja hexvar lea r8 , [ rax + num ] cmp r8 , rdi je hexvar lea rcx , [ r8 + rdi ] cmp r11d , num mov rax , rcx sbb r9d , - num shr rax , hexvar add rax , rcx sar rax , num imul rcx , rax , hexvar lea rbx , [ r10 + rcx ] cmp qword ptr [ rbx ] , rsi jbe hexvar mov rdi , rax cmp r8 , rdi jne hexvar add rax , num imul rax , rax , hexvar lea rbx , [ r10 + rax ] cmp qword ptr [ rbx ] , rsi ja hexvar cmp qword ptr [ rbx + num ] , rsi jb hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , rsi jae hexvar nop xor ebx , ebx mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] test r11d , r11d je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar mov rbx , r10 xor r9d , r9d jmp hexvar
push rbx mov edx , dword ptr [ rdi ] test edx , edx je hexvar mov r10 , qword ptr [ rdi + num ] lea edi , [ rdx - num ] mov rdx , rdi test edi , edi je hexvar mov r11d , dword ptr [ rip + hexvar ] xor r9d , r9d xor r8d , r8d and r11d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ r10 + rcx + hexvar ] , rsi ja hexvar lea r8 , [ rax + num ] cmp r8 , rdi je hexvar lea rcx , [ r8 + rdi ] cmp r11d , num mov rax , rcx sbb r9d , - num shr rax , hexvar add rax , rcx sar rax , num imul rcx , rax , hexvar lea rbx , [ r10 + rcx ] cmp qword ptr [ rbx ] , rsi jbe hexvar mov rdi , rax cmp r8 , rdi jne hexvar add rax , num imul rax , rax , hexvar lea rbx , [ r10 + rax ] cmp qword ptr [ rbx ] , rsi ja hexvar cmp qword ptr [ rbx + num ] , rsi jb hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , rsi jae hexvar nop xor ebx , ebx mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] test r11d , r11d je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar mov rbx , r10 xor r9d , r9d jmp hexvar
push rbx mov edx , dword ptr [ rdi ] test edx , edx je hexvar mov r10 , qword ptr [ rdi + num ] lea edi , [ rdx - num ] mov rdx , rdi test edi , edi je hexvar mov r11d , dword ptr [ rip + hexvar ] xor r9d , r9d xor r8d , r8d and r11d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ r10 + rcx + hexvar ] , rsi ja hexvar lea r8 , [ rax + num ] cmp r8 , rdi je hexvar lea rcx , [ r8 + rdi ] cmp r11d , num mov rax , rcx sbb r9d , - num shr rax , hexvar add rax , rcx sar rax , num imul rcx , rax , hexvar lea rbx , [ r10 + rcx ] cmp qword ptr [ rbx ] , rsi jbe hexvar mov rdi , rax cmp r8 , rdi jne hexvar add rax , num imul rax , rax , hexvar lea rbx , [ r10 + rax ] cmp qword ptr [ rbx ] , rsi ja hexvar cmp qword ptr [ rbx + num ] , rsi jb hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , rsi jae hexvar nop xor ebx , ebx mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] test r11d , r11d je hexvar mov esi , r9d lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar mov rbx , r10 xor r9d , r9d jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
push r15 push r14 mov r14 , rdi mov rdi , rdx push r13 mov r13d , num push r12 mov r12 , rdx push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx sub rsp , hexvar call hexvar lea rsi , [ rsp + hexvar ] mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp ] xor ebx , ebx lea r15 , [ rsp + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar je hexvar nop dword ptr [ rax ] cmp dl , hexvar je hexvar mov rdx , r15 mov rsi , rbp mov rdi , r14 call hexvar mov r13d , eax test eax , eax jne hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num nop dword ptr [ rax ] mov rax , qword ptr [ r12 + num ] cmp byte ptr [ rax - num ] , hexvar je hexvar mov rdi , r12 lea rsi , [ rip + hexvar ] call hexvar add rsp , hexvar mov eax , r13d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret add rax , num mov rdx , r12 mov rsi , rbp mov rdi , r14 mov qword ptr [ rbp ] , rax call hexvar mov r13d , eax test eax , eax je hexvar add ebx , num cmp dword ptr [ rsp + hexvar ] , ebx jle hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar mov rax , qword ptr [ rbp ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar add rax , num lea rsi , [ rip + hexvar ] mov rdi , r12 mov qword ptr [ rbp ] , rax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rsp + hexvar ] mov rdi , r12 mov rsi , r15 call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + num ] xor r13d , r13d cmp byte ptr [ rax - num ] , hexvar jne hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar jmp hexvar
,
,
,
sub rsp , hexvar lea rdx , [ rsp + num ] call hexvar add rsp , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
test rdx , rdx je hexvar mov eax , dword ptr [ rdx + num ] cmp eax , num jg hexvar mov ecx , dword ptr [ rdi + hexvar ] cmp ecx , hexvar jg hexvar push rbp add eax , num add ecx , num mov rbp , rdi push rbx mov rbx , rdx sub rsp , hexvar mov dword ptr [ rdx + num ] , eax mov rax , qword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , ecx mov qword ptr [ rsp + num ] , rax mov rax , rsp mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rbp + hexvar ] , rax sub dword ptr [ rbx + num ] , num sub dword ptr [ rbp + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov dword ptr [ rdi + hexvar ] , num ret
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar lea rdx , [ rax + num ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rdx movzx eax , byte ptr [ rax + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar call hexvar test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar je hexvar mov r9 , qword ptr [ rbx + hexvar ] mov esi , hexvar movzx ecx , byte ptr [ r9 ] cmp cl , hexvar jne hexvar lea rdx , [ r9 + num ] mov esi , hexvar mov qword ptr [ rbx + hexvar ] , rdx movzx ecx , byte ptr [ r9 + num ] mov r9 , rdx cmp cl , hexvar je hexvar test cl , cl je hexvar lea rcx , [ r9 + num ] jmp hexvar nop add rcx , num test dil , dil je hexvar mov qword ptr [ rbx + hexvar ] , rcx movzx edi , byte ptr [ rcx ] cmp dil , hexvar jne hexvar mov r8d , ecx sub r8d , r9d mov edx , dword ptr [ rbx + hexvar ] cmp edx , dword ptr [ rbx + hexvar ] jge hexvar movsxd rcx , edx add edx , num lea rdi , [ rcx + rcx * num ] mov rcx , qword ptr [ rbx + hexvar ] lea rcx , [ rcx + rdi * num ] mov dword ptr [ rcx + num ] , num mov dword ptr [ rbx + hexvar ] , edx test r8d , r8d je hexvar test r9 , r9 je hexvar mov qword ptr [ rcx ] , num mov qword ptr [ rcx + num ] , r9 mov dword ptr [ rcx + hexvar ] , r8d mov rdx , rax mov rdi , rbx call hexvar mov rdx , qword ptr [ rbx + hexvar ] cmp byte ptr [ rdx ] , hexvar je hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor esi , esi mov rdi , rbx call hexvar mov rdx , qword ptr [ rbx + hexvar ] cmp byte ptr [ rdx ] , hexvar jne hexvar add rdx , num mov qword ptr [ rbx + hexvar ] , rdx pop rbx ret nop dword ptr [ rax ] xor eax , eax ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ rdx + num ] sub dword ptr [ rbx + hexvar ] , edx jmp hexvar nop word ptr [ rax + rax ] xor ecx , ecx jmp hexvar xor r8d , r8d jmp hexvar
,
,
,
,
mov rcx , qword ptr [ rdi + hexvar ] mov rax , rsi movzx r8d , byte ptr [ rcx ] cmp r8b , hexvar je hexvar cmp r8b , hexvar je hexvar ret nop dword ptr [ rax + rax ] mov r9d , dword ptr [ rdi + hexvar ] mov esi , hexvar lea edx , [ r9 + num ] cmp r8b , hexvar jne hexvar lea edx , [ r9 + num ] mov esi , hexvar add rcx , num mov dword ptr [ rdi + hexvar ] , edx mov rdx , rax mov qword ptr [ rdi + hexvar ] , rcx xor ecx , ecx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi and eax , edx test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsi mov rcx , rdx mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar cmp rax , hexvar jle hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar cmp rax , hexvar jle hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx ecx , al mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rdx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov r11 , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov r9 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea r8 , [ rip + hexvar ] jmp hexvar lea r8 , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] jmp hexvar lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea r10 , [ rip + hexvar ] jmp hexvar lea r10 , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] movzx esi , byte ptr [ rsi + hexvar ] test sil , sil je hexvar mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] test rsi , rsi je hexvar mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] movzx esi , byte ptr [ rsi ] cmp sil , hexvar je hexvar lea rdi , [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] movzx esi , byte ptr [ rsi + hexvar ] test sil , sil je hexvar lea rsi , [ rip + hexvar ] jmp hexvar lea rsi , [ rip + hexvar ] push rdx push r11 push r9 push r8 mov r9 , rcx mov r8 , r10 mov rcx , rax mov rdx , rdi lea rdi , [ rip + hexvar ] mov eax , num call hexvar add rsp , hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num seta al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp byte ptr [ rbp - num ] , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov esi , hexvar mov edi , num call rax pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9d , hexvar mov r8d , num mov ecx , num mov rdx , - num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov ecx , dword ptr [ rbp - num ] movsxd rcx , ecx shl rcx , num add rdx , rcx mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe movzx eax , byte ptr [ rdx + rax + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar mov dword ptr [ rax ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rdx call rax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push rdx mov r9d , num mov r8d , num mov ecx , num mov rdx , - num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9d , hexvar mov r8 , rcx mov ecx , num mov esi , num mov rdi , rax call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9d , hexvar mov r8d , num mov ecx , num mov rdx , - num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov eax , num leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] and eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - num ] add rcx , hexvar mov rdx , qword ptr [ rdx + rcx * num + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] add rdx , hexvar mov qword ptr [ rax + rdx * num + hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] call rax mov byte ptr [ rip + hexvar ] , num nop pop rbp ret
,
,
push rbp mov rbp , rsp mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , num pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] and eax , hexvar pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax cmovl edx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , - num mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rdx test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , hexvar nop jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rcx , rdx mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] imul rax , rax , hexvar cmp qword ptr [ rbp - num ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , hexvar nop jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax sete dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax sete dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9d , hexvar mov r8d , num mov ecx , num mov rdx , - num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , - num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , - num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] jmp hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , edx and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al jne hexvar sub qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , num mov r8d , num mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov rdi , rcx mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] or eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9d , hexvar mov r8d , num mov ecx , num mov rdx , - num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , - num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , - num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax sete dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , edx and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar test eax , eax sete al movzx eax , al mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] add rax , rax lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov rbx , qword ptr [ rbp - hexvar ] lea rdx , [ rbx + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edi , eax call hexvar mov byte ptr [ rbx ] , al mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar call hexvar nop leave ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jle hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax jge hexvar movabs rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] imul rsi , rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx sub ecx , eax mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx cdqe add rax , rsi pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi and eax , edx test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi and eax , edx test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al jne hexvar sub qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp bl , al sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num ja hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add eax , hexvar movzx eax , ax mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov rax , qword ptr [ rbp - num ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , hexvar call rax mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] movzx eax , al mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movzx eax , al mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movzx eax , al mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al mov rdx , qword ptr [ rbp - num ] add rdx , num movzx edx , byte ptr [ rdx ] movzx edx , dl shl edx , num or edx , eax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl eax , hexvar or edx , eax mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl eax , hexvar or eax , edx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] and eax , hexvar pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov r9d , num mov r8d , num mov ecx , num mov edx , num mov esi , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , hexvar mov byte ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rbp - hexvar ] add rax , num mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rax mov rdi , rcx call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , r12d mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] cmp dword ptr [ rbp + hexvar ] , num jne hexvar lea edx , [ r12 - hexvar ] cmp edx , num jbe hexvar cmp r12d , hexvar je hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
,
,
sub rsp , num movsxd rsi , esi call hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
,
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar mov rdx , rax test rax , rax je hexvar lea rsi , [ rax + hexvar ] lea rdi , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num and rdi , hexvar mov rcx , rsi mov qword ptr [ rax + hexvar ] , num xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov dword ptr [ rdx + hexvar ] , num movabs rax , hexvar mov qword ptr [ rdx + hexvar ] , rax lea rax , [ rdx + hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , hexvar mov rcx , qword ptr [ rax + num ] mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rcx ] , rsi cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rax + num ] , rsi mov rax , qword ptr [ rip + hexvar ] je hexvar lea rcx , [ rax - hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rsi lea rax , [ rdx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov rax , rdx pop rbx ret nop dword ptr [ rax ] mov rdi , rbx mov esi , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax mov rdi , rax jne hexvar add rsp , hexvar xor eax , eax pop rbx ret
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ecx , ecx mov edx , num mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar cmp rbp , qword ptr [ rbx + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + num ] , rbp je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ r12 + hexvar ] , rbx and byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rbp lea rax , [ rip + hexvar ] cmp r13 , rax je hexvar test byte ptr [ r13 + hexvar ] , hexvar jne hexvar or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp mov rbp , rdi push rbx lea rbx , [ rip + hexvar ] sub rsp , num mov rdi , qword ptr [ rax + hexvar ] mov rsi , rbp add rbx , num call hexvar cmp qword ptr [ rbx ] , num je hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rax , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret nop ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r12 + num ] mov qword ptr [ rax ] , rbx mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r12 + num ] mov qword ptr [ rax ] , rbx mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
,
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num lea rax , [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax setne al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar and eax , hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test al , al setne al leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe add qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe add qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rdx call rax leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movzx ecx , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8d , num mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - num ] , num je hexvar movzx ecx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movzx ecx , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8d , num mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar call hexvar test eax , eax jne hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - num ] , num je hexvar movzx ecx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] mov byte ptr [ rbp - hexvar ] , al lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , num mov eax , edi mov word ptr [ rbp - num ] , ax cmp word ptr [ rbp - num ] , hexvar jle hexvar movsx rax , word ptr [ rbp - num ] mov rdi , rax call hexvar sub eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] lea rax , [ rip - hexvar ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp eax , num setg al movzx eax , al leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movzx eax , byte ptr [ rbp - hexvar ] or eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] or eax , hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov rcx , rdx mov edx , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar jmp hexvar nop cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , dl mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar movzx ecx , byte ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9d , num mov r8 , rdi mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] and eax , hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push - num mov r9 , rdi mov r8d , esi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax js hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] test al , al jns hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov byte ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar nop jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] test ax , ax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movsx rax , ax shl rax , num add rax , rdx movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov eax , dword ptr [ rax + rdx * num + num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num ja hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx ecx , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al sub ecx , eax mov eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num mov rax , qword ptr [ rax + rdx * num + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num mov qword ptr [ rax + rdx * num + num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] test ax , ax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax lea edx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , eax mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax + hexvar ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rax , rcx mov rax , qword ptr [ rax + hexvar ] or edx , num mov word ptr [ rax + hexvar ] , dx add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar and eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx add rax , num mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] cwde cmp dword ptr [ rbp - hexvar ] , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax je hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] cwde cmp dword ptr [ rbp - hexvar ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , - num mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , - num mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jbe hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar mov edx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] shl eax , num mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] movzx eax , al and eax , hexvar add eax , esi mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movzx eax , al and eax , hexvar cmp eax , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rcx , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov r8d , num mov ecx , num mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] and eax , hexvar cmp rax , num sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rsi , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx esi , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar movzx ecx , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar movzx esi , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov ecx , num mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rdx + hexvar ] movzx edx , dl mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar add dword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov edx , r9d mov byte ptr [ rbp - hexvar ] , al mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movsx esi , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push rsi mov r9 , rdi mov r8d , num mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi and eax , edx test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi or edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] and eax , hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov esi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , esi mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov edi , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , edi mov r8d , esi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov eax , dword ptr [ rax + rdx * num + num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp push r12 push rbx mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rbx , qword ptr [ rbp - hexvar ] mov r12 , qword ptr [ rbp - hexvar ] jmp hexvar add rbx , num add r12 , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jle hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx eax , byte ptr [ rbx ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx ecx , byte ptr [ rdx + rax ] movzx eax , byte ptr [ r12 ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp cl , al je hexvar cmp dword ptr [ rbp - hexvar ] , num js hexvar movzx eax , byte ptr [ rbx ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx ecx , al movzx eax , byte ptr [ r12 ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al sub ecx , eax mov eax , ecx jmp hexvar mov eax , num pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] sub eax , num movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num jbe hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar sub dword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar jmp hexvar nop jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] test al , al jns hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov byte ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar nop jmp hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rax + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov qword ptr [ rbp - hexvar ] , r9 mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov ecx , edx and ecx , num movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ecx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi or edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] or eax , edx mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] and eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax ] add eax , num mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , ecx mov ecx , num mov esi , hexvar mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] and eax , hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov word ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , dl mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar movzx ecx , byte ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9d , num mov r8 , rdi mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax je hexvar mov byte ptr [ rbp - num ] , hexvar jmp hexvar mov byte ptr [ rbp - num ] , hexvar movzx esi , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num sub rax , hexvar lea rdx , [ rcx + rax ] movzx eax , word ptr [ rbp - hexvar ] mov word ptr [ rdx + num ] , ax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov r9 , qword ptr [ rbp - num ] mov r8d , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp + hexvar ] push rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] lea rax , [ rip - hexvar ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] test al , al jns hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov byte ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - num ] , al jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar nop jmp hexvar nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar and eax , hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar and eax , hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num and eax , hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar or edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar or edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] or edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx add rax , num mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] or eax , edx mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx ecx , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al sub ecx , eax mov eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov eax , num leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rsi , [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov qword ptr [ rbp - hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] cvtsi2sd xmm0 , qword ptr [ rbp - num ] ucomisd xmm1 , xmm0 jp hexvar ucomisd xmm1 , xmm0 je hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax je hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ax , hexvar or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] cvtsi2sd xmm0 , qword ptr [ rbp - num ] ucomisd xmm1 , xmm0 jp hexvar ucomisd xmm1 , xmm0 je hexvar jmp hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax je hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ax , hexvar or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num sub rax , hexvar lea rdx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax nop pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov rax , rdx imul rax , rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , rdi mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx + hexvar ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , num call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , - num mov ecx , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al setne al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar and eax , hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi or edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi or edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov qword ptr [ rbp - hexvar ] , r9 mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar cmp qword ptr [ rbp - hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8d , ecx mov ecx , hexvar mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov eax , eax cmp rcx , rax jge hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] or eax , edx mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe sub rax , hexvar movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] movabs rax , hexvar and rdx , rax movabs rax , hexvar cmp rdx , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] movabs rax , hexvar and rax , rdx test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx ecx , al mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rsi , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , num add eax , eax movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8d , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cvtsi2sd xmm1 , rax movq rax , xmm1 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rdx mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , ecx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , num add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , num add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] or ah , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r9d , esi mov r8d , num mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] or al , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] or al , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx r9d , al mov rax , qword ptr [ rbp - hexvar ] mov r10 , qword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push r8 push rcx mov r8 , r10 mov rcx , rax call hexvar add rsp , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shr edx , num mov ecx , edx add rax , rcx movzx eax , byte ptr [ rax ] mov edi , eax mov eax , dword ptr [ rbp - hexvar ] and eax , num mov esi , num mov ecx , eax shl esi , cl mov eax , esi or edi , eax mov ecx , edi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , edx add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jb hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jle hexvar mov edi , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx ecx , al mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , ecx add rcx , hexvar mov word ptr [ rax + rcx * num + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx ecx , al mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , ecx add rcx , hexvar mov qword ptr [ rax + rcx * num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] movzx ecx , al mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , ecx mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jle hexvar mov edi , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx ecx , al mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , ecx add rcx , hexvar mov word ptr [ rax + rcx * num + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx ecx , al mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , ecx add rcx , hexvar mov qword ptr [ rax + rcx * num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] movzx ecx , al mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , ecx mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] movzx eax , al and eax , hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , dl mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] and al , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] and al , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edx , hexvar jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edx , hexvar jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] bswap eax mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] test ax , ax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] cmp dx , ax jbe hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al js hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx eax , al cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al js hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , hexvar mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movsx eax , al cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] add rdx , hexvar shl rdx , num sub rdx , num add rax , rdx mov eax , dword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] sub edx , num mov edx , edx sub rdx , hexvar and edx , hexvar shl rdx , num add rax , rdx mov eax , dword ptr [ rax ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] bswap eax mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rdx call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num shl eax , hexvar lea edx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setg al mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rdx call rax jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jb hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rax + hexvar ] sub edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] sub eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] test ax , ax jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , dx mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num jbe hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] movsxd rsi , eax mov rax , rcx cqo idiv rsi mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , edx mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] cwde pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] bswap eax mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] call rax nop pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] lea rax , [ rip + hexvar ] cmp rdx , rax sete al movzx eax , al pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] bswap eax mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] test ax , ax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rdx + hexvar ] mov edx , num div ecx mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax setl al movzx eax , al mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov rcx , rdx sub rcx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , hexvar lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] cmp qword ptr [ rbp - num ] , rax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , hexvar lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rcx + rax ] , rdx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov edi , edx call rax leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov esi , eax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , ecx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edi , edx call rax test eax , eax je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num mov edx , dword ptr [ rbp - hexvar ] mov ecx , edx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , hexvar call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] lea rcx , [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax je hexvar mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx ecx , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al sub ecx , eax mov eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar and dword ptr [ rbp - hexvar ] , hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edi , edx call rax jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jne hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jb hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub esi , eax mov eax , esi mov eax , eax add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] movzx eax , ax jmp hexvar mov eax , hexvar pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edi , edx call rax mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov eax , num mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edi , edx call rax mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , hexvar lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] cmp rdx , rax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , hexvar lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rcx + rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , num pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov edi , edx call rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp lea rax , [ rip + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov esi , eax mov edi , num call hexvar mov esi , num mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , edx and ecx , hexvar mov r8 , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , num test eax , eax je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax and eax , num test eax , eax je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , r12d mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] cmp dword ptr [ rbp + hexvar ] , num jne hexvar lea edx , [ r12 - hexvar ] cmp edx , num jbe hexvar cmp r12d , hexvar je hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
,
,
sub rsp , num movsxd rsi , esi call hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
,
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar mov rdx , rax test rax , rax je hexvar lea rsi , [ rax + hexvar ] lea rdi , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num and rdi , hexvar mov rcx , rsi mov qword ptr [ rax + hexvar ] , num xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov dword ptr [ rdx + hexvar ] , num movabs rax , hexvar mov qword ptr [ rdx + hexvar ] , rax lea rax , [ rdx + hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , hexvar mov rcx , qword ptr [ rax + num ] mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rcx ] , rsi cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rax + num ] , rsi mov rax , qword ptr [ rip + hexvar ] je hexvar lea rcx , [ rax - hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rsi lea rax , [ rdx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov rax , rdx pop rbx ret nop dword ptr [ rax ] mov rdi , rbx mov esi , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax mov rdi , rax jne hexvar add rsp , hexvar xor eax , eax pop rbx ret
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ecx , ecx mov edx , num mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar cmp rbp , qword ptr [ rbx + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + num ] , rbp je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ r12 + hexvar ] , rbx and byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rbp lea rax , [ rip + hexvar ] cmp r13 , rax je hexvar test byte ptr [ r13 + hexvar ] , hexvar jne hexvar or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp mov rbp , rdi push rbx lea rbx , [ rip + hexvar ] sub rsp , num mov rdi , qword ptr [ rax + hexvar ] mov rsi , rbp add rbx , num call hexvar cmp qword ptr [ rbx ] , num je hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rax , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret nop ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
mov rax , qword ptr [ rdi + hexvar ] ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov qword ptr [ rsp - num ] , rdi mov qword ptr [ rsp - hexvar ] , rsi mov qword ptr [ rsp - hexvar ] , rdx mov eax , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax je hexvar mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar test eax , eax je hexvar mov byte ptr [ rbp - num ] , num nop cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num leave ret
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rsp + hexvar ] movzx ecx , al mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rsp + hexvar ] , rdx movzx eax , byte ptr [ rax ] movzx eax , al xor eax , ecx mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rsp + hexvar ] shr edx , num xor eax , edx mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rsp + num ] lea rdx , [ rax - num ] mov qword ptr [ rsp + num ] , rdx test rax , rax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov edx , dword ptr [ rsp + hexvar ] mov dword ptr [ rax ] , edx nop add rsp , hexvar ret
,
,
,
