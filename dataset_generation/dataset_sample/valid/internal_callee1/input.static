,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop leave ret
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx mov edi , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar call hexvar
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movzx eax , word ptr [ rbp - num ] and ax , hexvar cmp ax , hexvar sete al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax jne hexvar call hexvar call hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] setnp al mov edx , num pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] cmovne eax , edx movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar pxor xmm0 , xmm0 comisd xmm0 , xmmword ptr [ rbp - hexvar ] seta al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq xmm1 , qword ptr [ rip + hexvar ] xorpd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
push rbp mov rbp , rsp mov edi , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num or rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - num ] shl eax , num add edx , eax mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rip + hexvar ] mov edx , edx movzx eax , byte ptr [ rax + rdx ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - num ] test rax , rax setne al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + num ] test rax , rax cmovs rax , rdx sar rax , num mov rdx , rax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov eax , eax add rax , rdx add rax , hexvar pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - num ] shl eax , num add edx , eax mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rip + hexvar ] mov edx , edx movzx eax , byte ptr [ rax + rdx ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov eax , eax mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov eax , eax mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - num ] , rax cmovge rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shr rax , num cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp mov edi , num call hexvar
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar movzx edx , byte ptr [ rbp - num ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9 , rcx mov r8 , rdx mov ecx , num mov edx , num mov edi , eax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar nop jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rdi lea r8 , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , - num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , - num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
,
,
,
,
sub rsp , num call hexvar mov edi , num call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
,
,
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rdi + num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rax mov dword ptr [ rdi + hexvar ] , num test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rdi , qword ptr [ rdx + rcx * num ] je hexvar ret nop dword ptr [ rax + rax ] mov edx , dword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rdi ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r15 push r14 mov r14d , edx push r13 push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi sub rsp , hexvar mov r13 , rsp mov rdx , r13 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r14d , r14d jne hexvar mov rdi , r12 call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] mov rsi , r13 mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r15 , rax call hexvar mov rdx , r15 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar test r14d , r14d je hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar jmp hexvar
,
,
,
test rsi , rsi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdi ret
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
,
,
,
sub rsp , num call hexvar mov edi , num call hexvar
,
sub rsp , num call hexvar mov edi , num call hexvar
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
,
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num lea rcx , [ rip + hexvar ] push rcx lea r9 , [ rip + hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , ebx and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , ebx and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , ebx and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num ja hexvar cmp dword ptr [ rbp - hexvar ] , num jae hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax nop cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe neg rax add qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rsi mov r8 , rcx mov rcx , rdx mov rdx , rdi mov esi , num mov edi , eax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] add rcx , num shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jg hexvar mov eax , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + num ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov eax , dword ptr [ rax + num ] shr eax , num and ax , hexvar movzx eax , ax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] movsxd rax , ecx add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num mov rdi , rax mov rax , rdi lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cqo shr rdx , hexvar add rax , rdx and eax , hexvar sub rax , rdx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdi lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx or rdx , rsi mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num mov rdi , rax mov rax , rdi lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cqo shr rdx , hexvar add rax , rdx and eax , hexvar sub rax , rdx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdi lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx or rdx , rsi mov qword ptr [ rax ] , rdx nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea r9 , [ rip - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] bswap rax pop rbp ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
,
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
,
,
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r15 mov r15 , r8 push r14 mov r14d , ecx push r13 mov r13 , rdx push r12 mov r12d , edi mov rdi , rsi push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , r9 call hexvar sub rsp , num mov r8 , r15 mov ecx , r14d mov rax , qword ptr [ rip + hexvar ] mov rsi , rbx mov edi , r12d mov rbp , qword ptr [ rax + hexvar ] lea rdx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , r13 push qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15 , r8 push r14 mov r14d , ecx push r13 mov r13 , rdx push r12 mov r12d , edi mov rdi , rsi push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , r9 call hexvar sub rsp , num mov r8 , r15 mov ecx , r14d mov rax , qword ptr [ rip + hexvar ] mov rsi , rbx mov edi , r12d mov rbp , qword ptr [ rax + hexvar ] lea rdx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , r13 push qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15 , r8 push r14 mov r14d , ecx push r13 mov r13 , rdx push r12 mov r12d , edi mov rdi , rsi push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , r9 call hexvar sub rsp , num mov r8 , r15 mov ecx , r14d mov rax , qword ptr [ rip + hexvar ] mov rsi , rbx mov edi , r12d mov rbp , qword ptr [ rax + hexvar ] lea rdx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , r13 push qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
,
push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movdqu xmm0 , xmmword ptr [ rip + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rbx + hexvar ] , edi lea rdi , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , ecx mov qword ptr [ rbx + hexvar ] , r8 mov qword ptr [ rbx + hexvar ] , r9 mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , esi movups xmmword ptr [ rbx + hexvar ] , xmm0 call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movdqu xmm0 , xmmword ptr [ rip + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rbx + hexvar ] , edi lea rdi , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , ecx mov qword ptr [ rbx + hexvar ] , r8 mov qword ptr [ rbx + hexvar ] , r9 mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , esi movups xmmword ptr [ rbx + hexvar ] , xmm0 call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop word ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
,
,
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov eax , dword ptr [ rip + hexvar ] ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
,
,
,
push r12 xor edx , edx push rbp push rbx mov rbx , rdi sub rsp , hexvar mov word ptr [ rdi + hexvar ] , dx mov dword ptr [ rsp + num ] , hexvar neg dword ptr [ rip + hexvar ] cmp esi , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp esi , num je hexvar mov edx , num mov rsi , rbx xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , eax neg edx mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] lea rsi , [ rsp + hexvar ] lea rdi , [ rsp + num ] xor edx , edx mov dword ptr [ rsp + hexvar ] , num mov r12 , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar mov edx , num mov rsi , rbx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movsxd rdx , dword ptr [ rsp + hexvar ] mov rdi , rbp sub rax , rbp add rax , rdx add rax , r12 mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rbx + hexvar ] lea edx , [ rax - num ] cmp dl , num jbe hexvar cmp al , num ja hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi movzx ebp , byte ptr [ rax ] mov byte ptr [ rax ] , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bpl jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov eax , dword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
,
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] push r12 push rbp mov ebp , esi push rbx mov rbx , rdi call hexvar lea rdi , [ rax + num ] call hexvar lea rcx , [ rbx + num ] mov r12 , rax movzx eax , byte ptr [ rbx ] mov rdx , r12 test al , al je hexvar lea rdi , [ rip + hexvar ] nop movzx eax , byte ptr [ rdi + rax ] add rdx , num add rcx , num mov byte ptr [ rdx - num ] , al movzx eax , byte ptr [ rcx - num ] test al , al jne hexvar mov byte ptr [ rdx ] , num mov esi , ebp mov rdi , r12 call hexvar mov rdi , r12 mov rbx , rax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rdx , [ rbx + rcx ] not rcx and rdx , rcx mov rcx , qword ptr [ rip + hexvar ] mov rdi , rdx mov qword ptr [ rip + hexvar ] , rdx mov rbx , rcx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdx , rcx mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov edx , esi sub rsp , num movsxd r9 , edi mov esi , num test edi , edi je hexvar mov eax , num mov ecx , edi shl eax , cl sub eax , num movsxd rsi , eax sub rsp , num mov ecx , edx xor r8d , r8d mov edx , num push num mov edi , num call hexvar mov byte ptr [ rax ] , hexvar add rsp , hexvar ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
push r13 mov rax , rdi push r12 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp byte ptr [ rdi ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rsi , rbx mov rdi , rax call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov rax , qword ptr [ rsp + num ] lea rdi , [ rsp + num ] mov r12 , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdi , qword ptr [ rsp + num ] mov r13d , eax call hexvar mov rbp , rax test rax , rax je hexvar mov rdi , rax call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , r13b mov qword ptr [ rip + hexvar ] , r12 add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbp call hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax js hexvar mov edx , dword ptr [ rip + hexvar ] cmp rax , rdx jae hexvar lea rdx , [ rax + rax * num ] lea rax , [ rip + hexvar ] lea rax , [ rax + rdx * num ] test byte ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rdx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
xor esi , esi jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov rdx , rsi xor eax , eax lea rsi , [ rip + hexvar ] jmp hexvar
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
xor edx , edx jmp hexvar
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rdx , rsi mov ebp , edi lea rsi , [ rip + hexvar ] push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num lea rsi , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rsi , rax mov rbx , rsp xor eax , eax mov rdi , rbx call hexvar mov rdx , rbx mov esi , ebp xor eax , eax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
,
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] bswap rax pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] bswap rax pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] shl eax , num mov ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or eax , ecx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] shl eax , num mov ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or eax , ecx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov edi , num call hexvar
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov word ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rcx + num ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar add dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov byte ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jge hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax add edx , edx add edx , eax mov eax , ecx sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rax , num mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax add edx , edx add edx , eax mov eax , ecx sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax add edx , edx add edx , eax mov eax , ecx sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov ecx , hexvar lea rdx , [ rip + hexvar ] mov edi , eax call hexvar test rax , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx mov edx , num div rcx mov rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx mov edx , num div rcx mov rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx mov edx , num div rcx mov rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx mov edx , num div rcx mov rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov eax , dword ptr [ rbp - num ] sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax add edx , edx add edx , eax mov eax , ecx sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , ebx add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov esi , hexvar mov edx , num div rsi imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num setne al leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar test eax , eax je hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar nop nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - num ] cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call rcx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rsi , - num lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rax ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax call hexvar mov dword ptr [ rax ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar call hexvar cmp dword ptr [ rbp - num ] , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov esi , num mov edi , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar call hexvar cmp dword ptr [ rbp - num ] , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov esi , num mov edi , num call hexvar nop leave ret
,
,
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar call hexvar nop leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] sub dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar test eax , eax jns hexvar mov eax , num jmp hexvar movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp movsd xmm0 , qword ptr [ rip + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar mov ebx , eax movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar cmp ebx , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar add dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - num ] cvttsd2si rax , xmm0 mov edi , eax call hexvar movsd xmm0 , qword ptr [ rbp - num ] cvttsd2si rax , xmm0 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rbp - num ] subsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si rax , xmm0 mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] sar al , num movsx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al movsx eax , byte ptr [ rbp - hexvar ] and eax , hexvar cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp add rsp , - hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8d , num lea rcx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , num jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov ecx , hexvar lea rdx , [ rip + hexvar ] mov edi , eax call hexvar test rax , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cdqe jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rax , xmm0 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar mov ebx , eax call hexvar xor eax , ebx mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx cqo idiv rcx mov rax , rdx add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num setne al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num setne al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax setne al leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rdi , rcx call rax test eax , eax jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax setne al leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rax ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax call hexvar mov dword ptr [ rax ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rax ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax call hexvar mov dword ptr [ rax ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test rax , rax jne hexvar call hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test rax , rax jne hexvar call hexvar lea rax , [ rip + hexvar ] leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar jmp hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
,
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
,
,
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
,
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi test al , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret nop xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , num shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop word ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
,
,
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov eax , dword ptr [ rip + hexvar ] ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] cmovne rax , rdx add rsp , num ret nop dword ptr [ rax ] call hexvar jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
,
,
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
,
,
,
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
,
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] push r12 push rbp mov ebp , esi push rbx mov rbx , rdi call hexvar lea rdi , [ rax + num ] call hexvar lea rcx , [ rbx + num ] mov r12 , rax movzx eax , byte ptr [ rbx ] mov rdx , r12 test al , al je hexvar lea rdi , [ rip + hexvar ] nop movzx eax , byte ptr [ rdi + rax ] add rdx , num add rcx , num mov byte ptr [ rdx - num ] , al movzx eax , byte ptr [ rcx - num ] test al , al jne hexvar mov byte ptr [ rdx ] , num mov esi , ebp mov rdi , r12 call hexvar mov rdi , r12 mov rbx , rax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rdx , [ rbx + rcx ] not rcx and rdx , rcx mov rcx , qword ptr [ rip + hexvar ] mov rdi , rdx mov qword ptr [ rip + hexvar ] , rdx mov rbx , rcx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdx , rcx mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rdi + hexvar ] shr eax , num and eax , num ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
test edx , edx jle hexvar lea ecx , [ rdx - num ] movsxd rdx , edx movsxd rax , ecx lea rdx , [ rdi + rdx - num ] mov ecx , ecx add rax , rdi sub rdx , rcx nop word ptr [ rax + rax ] mov byte ptr [ rax ] , sil sub rax , num shr rsi , num cmp rax , rdx jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
xor esi , esi jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
,
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
,
,
,
,
,
,
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
xor edx , edx jmp hexvar
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shr rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx or rax , rsi pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax setne al pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , hexvar mov rsi , rax mov edi , hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al mov rdx , qword ptr [ rbp - num ] rol rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + hexvar ] , num lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + num ] add rax , num mov esi , hexvar mov rdi , rax call hexvar mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + hexvar ] , num lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + num ] add rax , num mov esi , hexvar mov rdi , rax call hexvar mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num je hexvar cmp qword ptr [ rsp + num ] , num je hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] movzx eax , word ptr [ rax + hexvar ] test ax , ax jne hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rsp + num ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovbe rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov ebx , num call hexvar mov dword ptr [ rax ] , ebx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax jmp hexvar nop nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + num ] , rcx mov rax , qword ptr [ rsp + num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + num ] movabs rsi , hexvar mov qword ptr [ rax + hexvar ] , rsi mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + num ] movabs rdi , hexvar mov qword ptr [ rax + hexvar ] , rdi mov rax , qword ptr [ rsp + num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + num ] movabs rsi , hexvar mov qword ptr [ rax + hexvar ] , rsi mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov eax , num add rsp , hexvar ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] imul ecx , eax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov eax , edx shl eax , num add eax , edx shl eax , num add eax , edx lea edx , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul ecx , eax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov eax , edx shl eax , num add eax , edx shl eax , num add eax , edx lea edx , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num lea ecx , [ rax + rdx ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al add eax , ecx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num lea ecx , [ rax + rdx ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al add eax , ecx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num shl rax , num mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rax , rcx add rdx , rsi mov qword ptr [ rax + num ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num sub rdx , hexvar add rax , rdx mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num nop jmp hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] add rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdi , rax mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rsi lea rdx , [ rcx + rdi ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
push r15 mov r15 , rsi push r14 sub r15 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar cmp rsi , rdi jbe hexvar mov r12 , rdi mov qword ptr [ rsp ] , num lea r14 , [ rip + hexvar ] test r15 , r15 je hexvar nop dword ptr [ rax + rax ] cmp r15 , hexvar mov r13d , hexvar mov rsi , qword ptr [ rsp ] lea rdi , [ rip + hexvar ] cmovbe r13 , r15 xor eax , eax mov qword ptr [ rsp + num ] , r13 mov ebp , r13d xor r13d , r13d call hexvar jmp hexvar nop dword ptr [ rax ] movzx esi , byte ptr [ r12 + r13 ] lea rdi , [ rip + hexvar ] xor eax , eax and ebx , num call hexvar cmp ebx , num je hexvar add r13 , num cmp r13 , hexvar je hexvar mov ebx , r13d cmp ebp , r13d jg hexvar mov rdi , r14 xor eax , eax and ebx , num call hexvar cmp ebx , num jne hexvar mov edi , hexvar add r13 , num call hexvar cmp r13 , hexvar jne hexvar xor ebx , ebx nop dword ptr [ rax ] movzx edi , byte ptr [ r12 + rbx ] lea eax , [ rdi - hexvar ] cmp eax , hexvar jbe hexvar mov edi , hexvar call hexvar add rbx , num cmp ebp , ebx jg hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar movsxd r13 , dword ptr [ rsp + num ] add qword ptr [ rsp ] , r13 add r12 , r13 sub r15 , r13 jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , hexvar mov edi , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
mov r11 , rcx cmp rdi , rcx jae hexvar movzx r9d , byte ptr [ rdi ] lea r8 , [ rdi + num ] mov rax , r9 and eax , hexvar test r9b , r9b jns hexvar mov ecx , num mov r10d , num nop cmp r11 , r8 je hexvar add r8 , num movzx r9d , byte ptr [ r8 - num ] add r10d , num mov rdi , r9 and edi , hexvar shl rdi , cl add ecx , num or rax , rdi test r9b , r9b jns hexvar cmp r10d , hexvar jne hexvar test rsi , rsi je hexvar cmp ecx , hexvar setbe dil mov dword ptr [ rsi ] , r10d test edx , edx je hexvar test dil , dil je hexvar and r9d , hexvar je hexvar mov rdx , - num shl rdx , cl or rax , rdx ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov edi , num test rsi , rsi jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar setbe dil jmp hexvar mov edi , num xor r9d , r9d xor ecx , ecx xor r10d , r10d xor eax , eax jmp hexvar mov edi , num mov ecx , num mov r10d , num jmp hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
mov r11 , rcx cmp rdi , rcx jae hexvar movzx r9d , byte ptr [ rdi ] lea r8 , [ rdi + num ] mov rax , r9 and eax , hexvar test r9b , r9b jns hexvar mov ecx , num mov r10d , num nop cmp r11 , r8 je hexvar add r8 , num movzx r9d , byte ptr [ r8 - num ] add r10d , num mov rdi , r9 and edi , hexvar shl rdi , cl add ecx , num or rax , rdi test r9b , r9b jns hexvar cmp r10d , hexvar jne hexvar test rsi , rsi je hexvar cmp ecx , hexvar setbe dil mov dword ptr [ rsi ] , r10d test edx , edx je hexvar test dil , dil je hexvar and r9d , hexvar je hexvar mov rdx , - num shl rdx , cl or rax , rdx ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov edi , num test rsi , rsi jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar setbe dil jmp hexvar mov edi , num xor r9d , r9d xor ecx , ecx xor r10d , r10d xor eax , eax jmp hexvar mov edi , num mov ecx , num mov r10d , num jmp hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
xor eax , eax xor ecx , ecx mov r9d , hexvar jmp hexvar nop dword ptr [ rax ] lea ecx , [ rax + num ] add rdi , num mov eax , ecx mul r9d shr edx , num lea eax , [ rdx + hexvar ] mov byte ptr [ rdi - num ] , al lea eax , [ rdx + rdx * num ] add eax , eax sub ecx , eax mov eax , ecx mov ecx , num add eax , hexvar mov byte ptr [ rdi - num ] , al cmp r8d , hexvar je hexvar mov eax , r8d mov edx , esi lea r8d , [ rax + num ] shr esi , num and edx , num test edx , edx je hexvar test ecx , ecx je hexvar mov byte ptr [ rdi ] , hexvar add rdi , num mov byte ptr [ rdi ] , hexvar cmp eax , num ja hexvar lea eax , [ r8 + hexvar ] add rdi , num mov ecx , num mov byte ptr [ rdi - num ] , al jmp hexvar nop word ptr cs : [ rax + rax ] mov byte ptr [ rdi ] , num ret
test esi , esi je hexvar xor eax , eax xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] cmp eax , num jg hexvar test sil , num je hexvar mov rdx , rdi test ecx , ecx je hexvar mov byte ptr [ rdi ] , hexvar add rdx , num mov byte ptr [ rdx ] , hexvar lea ecx , [ rax + hexvar ] lea rdi , [ rdx + num ] mov byte ptr [ rdx + num ] , cl mov ecx , num add eax , num shr esi , num jne hexvar mov byte ptr [ rdi ] , num ret
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , rbp mov rbp , r12 call hexvar test r12 , r12 jne hexvar mov qword ptr [ rip + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , num pop rbp pop r12 ret
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
,
mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar ret nop dword ptr [ rax ] push rbx mov rsi , rdi mov rbx , rdi mov edi , hexvar mov dword ptr [ rip + hexvar ] , num call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num pop rbx ret nop xor esi , esi lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rsi push rbp mov ebp , edx lea rdx , [ rip + hexvar ] push rbx sub rsp , hexvar movsxd rbx , dword ptr [ rip + hexvar ] mov rax , rbx shl rbx , num add eax , num add rbx , rdx and eax , hexvar mov dword ptr [ rip + hexvar ] , eax test ebp , ebp jne hexvar mov rbp , rsp test rdi , rdi je hexvar mov rcx , rdi lea rdx , [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbp mov rdi , rbx mov esi , hexvar xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rcx , rsi mov rdi , rbx xor eax , eax mov esi , hexvar lea rdx , [ rip + hexvar ] call hexvar cmp ebp , num mov eax , num cmova ebp , eax add rsp , hexvar neg ebp lea eax , [ rbp + rbp + hexvar ] add rbx , rax mov rax , rbx pop rbx pop rbp pop r12 ret
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + num ] , num nop add rsp , hexvar ret
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rbx + num ] mov byte ptr [ rbx ] , al test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + rcx * num ] movsxd rax , dword ptr [ rip + hexvar ] add rax , qword ptr [ rcx + num ] cmp rbx , rax jae hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rbx + num ] movzx eax , byte ptr [ rbx ] mov byte ptr [ rbx ] , num mov byte ptr [ rip + hexvar ] , dl add rsp , hexvar pop rbx pop rbp ret nop mov qword ptr [ rip + hexvar ] , rdx mov rbp , qword ptr [ rip + hexvar ] call hexvar mov edx , eax xor eax , eax cmp edx , num je hexvar cmp edx , num je hexvar test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar nop sub rbx , rbp movsxd rbx , ebx add rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
,
,
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rdi + num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rax mov dword ptr [ rdi + hexvar ] , num test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rdi , qword ptr [ rdx + rcx * num ] je hexvar ret nop dword ptr [ rax + rax ] mov edx , dword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rdi ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rsi push rbx call hexvar mov dword ptr [ rax ] , r12d mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rsi push rbx call hexvar mov dword ptr [ rax ] , r12d mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
sub rsp , hexvar mov dword ptr [ rip + hexvar ] , edi xor ecx , ecx xor edx , edx mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea r8 , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num add dword ptr [ rip + hexvar ] , num call hexvar add rsp , hexvar ret
test rdi , rdi je hexvar push rbp lea rbp , [ rip - hexvar ] push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop xor edx , edx mov rsi , rbp mov rdi , rbx call hexvar jmp hexvar nop ret
,
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
add dword ptr [ rip + hexvar ] , num mov r9d , esi mov r8 , rdi xor ecx , ecx mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rdi , [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num ja hexvar push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi test rdi , rdi je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , rbp mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num mov rsi , rdx mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov ecx , dword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num je hexvar nop dword ptr [ rax + rax ] test edx , edx je hexvar cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num nop dword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar
test rdi , rdi je hexvar push r12 lea r12 , [ rip - hexvar ] push rbp mov rbp , rsi push rbx mov rbx , rdi jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret ret
push rbp xor eax , eax mov rbp , rdi mov edi , hexvar push rbx sub rsp , num or esi , dword ptr [ rip + hexvar ] setne al mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx call hexvar cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + num ] , rax je hexvar add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rdi , rbp mov rbx , rax call hexvar add rax , rbx movzx edx , byte ptr [ rax ] test dl , dl je hexvar nop dword ptr [ rax + rax ] add rax , num add rbx , num mov byte ptr [ rbx - num ] , dl movzx edx , byte ptr [ rax ] test dl , dl jne hexvar mov byte ptr [ rbx ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx ] lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test al , hexvar je hexvar mov rdi , qword ptr [ rbx + hexvar ] xor edx , edx xor esi , esi call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar add rsp , num xor esi , esi mov rdi , rax pop rbx pop rbp jmp hexvar
push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx ] lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test al , hexvar je hexvar mov rdi , qword ptr [ rbx + hexvar ] xor edx , edx xor esi , esi call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar add rsp , num xor esi , esi mov rdi , rax pop rbx pop rbp jmp hexvar
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
test rsi , rsi je hexvar push r12 mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi mov rdi , rbx call r12 cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar mov rdx , qword ptr [ rip + hexvar ] xor ecx , ecx mov esi , num mov rdi , rbp call hexvar mov rbx , rax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] xor esi , esi mov rdi , rbx call hexvar test eax , eax mov eax , num cmove rbx , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar mov r12 , rdi mov r13 , rsi mov r15 , rdx mov r14 , rcx nop word ptr [ rax + rax ] mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov rsi , qword ptr [ rbp ] call hexvar test eax , eax jne hexvar mov r9 , r14 mov r8 , r15 mov rcx , rbx mov rdx , rbp mov rsi , r13 mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rcx , qword ptr [ r12 + hexvar ] mov r9 , r14 mov r8 , r13 xor esi , esi mov rdi , r12 call r15 mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar mov r12 , rdi mov r13 , rsi mov r15 , rdx mov r14 , rcx nop word ptr [ rax + rax ] mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov rsi , qword ptr [ rbp ] call hexvar test eax , eax jne hexvar mov r9 , r14 mov r8 , r15 mov rcx , rbx mov rdx , rbp mov rsi , r13 mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rcx , qword ptr [ r12 + hexvar ] mov r9 , r14 mov r8 , r13 xor esi , esi mov rdi , r12 call r15 mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar jmp hexvar
,
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar mov r12 , rdi mov r13 , rsi mov r15 , rdx mov r14 , rcx nop word ptr [ rax + rax ] mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov rsi , qword ptr [ rbp ] call hexvar test eax , eax jne hexvar mov r9 , r14 mov r8 , r15 mov rcx , rbx mov rdx , rbp mov rsi , r13 mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rcx , qword ptr [ r12 + hexvar ] mov r9 , r14 mov r8 , r13 xor esi , esi mov rdi , r12 call r15 mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] test rsi , rsi je hexvar call hexvar mov rsi , qword ptr [ rbx ] lea rdi , [ rbp + hexvar ] mov rcx , r12 xor edx , edx call hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar mov rdx , r12 mov rdi , rbp call hexvar mov rdi , rbx pop rbx pop rbp pop r12 jmp hexvar
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
,
,
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
,
,
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
,
cmp byte ptr [ rdi ] , hexvar mov rax , rdi jne hexvar nop dword ptr [ rax + rax ] add rax , num cmp byte ptr [ rax ] , hexvar je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar movzx esi , byte ptr [ rax + num ] cmp byte ptr [ rax + num ] , sil jne hexvar movzx edx , byte ptr [ rax + num ] cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx ecx , byte ptr [ rax + hexvar ] lea rdx , [ rip + hexvar ] test byte ptr [ rdx + rcx * num ] , num je hexvar sub rsp , num lea rdi , [ rax + hexvar ] mov edx , hexvar xor esi , esi call hexvar add rsp , num ret mov eax , hexvar ret
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r13 , [ rip + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rip + hexvar ] , rbx call rax mov qword ptr [ rip + hexvar ] , num mov ebp , eax test eax , eax je hexvar mov r12 , qword ptr [ rbx + num ] mov rsi , r13 xor edi , edi mov edx , num call hexvar mov edx , ebp mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
push rbp xor eax , eax mov rbp , rdi mov edi , hexvar push rbx sub rsp , num or esi , dword ptr [ rip + hexvar ] setne al mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx call hexvar cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + num ] , rax je hexvar add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop word ptr [ rax + rax ] xor eax , eax ret
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r14 mov r14 , rdi mov rdi , rcx push r13 mov r13d , esi push r12 mov r12 , rdx push rbp mov rbp , r8 push rbx mov rbx , rcx sub rsp , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdx , rsp mov rdi , rbx lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r14 mov dword ptr [ rsp + hexvar ] , r13d mov qword ptr [ rsp + num ] , r12 mov qword ptr [ rsp + hexvar ] , rbp mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r14 mov r14 , rdi mov rdi , rcx push r13 mov r13d , esi push r12 mov r12 , rdx push rbp mov rbp , r8 push rbx mov rbx , rcx sub rsp , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdx , rsp mov rdi , rbx lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r14 mov dword ptr [ rsp + hexvar ] , r13d mov qword ptr [ rsp + num ] , r12 mov qword ptr [ rsp + hexvar ] , rbp mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] xor ecx , ecx mov qword ptr [ rsp + hexvar ] , rax lea rdx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
test esi , esi jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar push r12 mov r12d , esi push rbp push rbx mov rbx , rdi mov edi , hexvar call hexvar mov rbp , rax mov qword ptr [ rax ] , num mov dword ptr [ rax + hexvar ] , r12d mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rax ] , rbp cmp byte ptr [ rbx ] , hexvar je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov rdi , rbx call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rbx + num ] xor edx , edx call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rbx + num ] xor edx , edx xor eax , eax call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop xor r9d , r9d mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , r12 mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , r9d lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] ret
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
,
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] test ebp , ebp je hexvar mov dword ptr [ rip + hexvar ] , ebp add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar test edi , edi jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num mov r12d , hexvar lea ebp , [ rax - num ] test eax , eax je hexvar nop word ptr [ rax + rax ] mov eax , r12d jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , num mov edi , num mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar xor esi , esi mov rdi , rbx mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar sub ebp , num add dword ptr [ rip + hexvar ] , num cmp ebp , - num jne hexvar mov edi , num call hexvar call hexvar mov esi , num xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop xor r9d , r9d mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , r12 mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , r9d lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] ret
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
,
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] test ebp , ebp je hexvar mov dword ptr [ rip + hexvar ] , ebp add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar test edi , edi jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num mov r12d , hexvar lea ebp , [ rax - num ] test eax , eax je hexvar nop word ptr [ rax + rax ] mov eax , r12d jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , num mov edi , num mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar xor esi , esi mov rdi , rbx mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar sub ebp , num add dword ptr [ rip + hexvar ] , num cmp ebp , - num jne hexvar mov edi , num call hexvar call hexvar mov esi , num xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov dword ptr [ rdi + hexvar ] , num ret
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov dword ptr [ rdi + hexvar ] , num ret
,
,
,
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov eax , hexvar mov qword ptr [ rdi + hexvar ] , rax ret
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov eax , hexvar mov qword ptr [ rdi + hexvar ] , rax ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rcx , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rsi , rbx mov rdi , rcx mov eax , num call hexvar jmp hexvar mov ebx , dword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , ebx lea rsi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rcx , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rsi , rbx mov rdi , rcx mov eax , num call hexvar jmp hexvar mov ebx , dword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , ebx lea rsi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar mov r12 , rax lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - num ] , hexvar cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] add rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jg hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , - hexvar jge hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
,
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
,
,
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
,
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi test al , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , num shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
,
test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] or eax , hexvar mov dword ptr [ rdi + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] test byte ptr [ rax + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rdi + hexvar ] cmp eax , num je hexvar jbe hexvar cmp eax , num je hexvar ret nop test eax , eax je hexvar mov edi , num jmp hexvar nop cmp dword ptr [ rdi + hexvar ] , hexvar mov edx , num cmove eax , edx mov edi , eax jmp hexvar
test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] or eax , hexvar mov dword ptr [ rdi + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] test byte ptr [ rax + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rdi + hexvar ] cmp eax , num je hexvar jbe hexvar cmp eax , num je hexvar ret nop test eax , eax je hexvar mov edi , num jmp hexvar nop cmp dword ptr [ rdi + hexvar ] , hexvar mov edx , num cmove eax , edx mov edi , eax jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
,
,
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov eax , dword ptr [ rip + hexvar ] ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rax , rdx ret nop dword ptr [ rax ] test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rax , rdx ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
,
,
,
,
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
,
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
push r13 push r12 push rbp mov ebp , esi push rbx sub rsp , num call hexvar mov rdi , rax mov rbx , rax call hexvar mov r12 , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov esi , ebp mov rdi , r12 call hexvar mov rdi , rbx mov rbp , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , r12 call hexvar lea rdi , [ rax + num ] call hexvar movzx edx , byte ptr [ r12 ] lea rsi , [ r12 + num ] mov r13 , rax mov rcx , rax test dl , dl je hexvar lea rdi , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ rdi + rdx ] add rcx , num add rsi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rsi - num ] test dl , dl jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx mov r12 , r13 mov rbx , r13 call hexvar jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rdi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rsi , rcx sub rbx , rcx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rdi + hexvar ] shr eax , num and eax , num ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 push rbp mov ebp , esi push rbx mov rbx , rdi mov r12 , qword ptr [ rdi ] call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test byte ptr [ rdx ] , num jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp edx , ebp je hexvar mov ecx , ebp mov rdx , rax mov rsi , r12 mov rdi , rbx call hexvar cmp eax , - num je hexvar pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] pop rbx mov eax , dword ptr [ rax + num ] pop rbp pop r12 ret mov eax , hexvar jmp hexvar nop mov qword ptr [ rbx ] , r12 jmp hexvar
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] and byte ptr [ rip + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] lea esi , [ rcx + rbp ] cmp esi , edx jle hexvar add edx , num mov dword ptr [ rip + hexvar ] , edx movsxd rsi , edx test rax , rax je hexvar mov rdi , rax call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add ecx , num movsxd rdx , ecx mov byte ptr [ rax + rdx - num ] , bl shr rbx , num add rdx , num cmp ebp , num je hexvar mov byte ptr [ rax + rdx - num ] , bl mov ecx , edx mov dword ptr [ rip + hexvar ] , ecx add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rsi call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar cmp rdi , hexvar jle hexvar lea rax , [ rdi - hexvar ] sar rax , num je hexvar lea rcx , [ rsp + hexvar ] xor edx , edx mov edi , eax lea ebx , [ rdx + num ] and edi , hexvar shr rax , num jne hexvar mov byte ptr [ rsp + rdx + hexvar ] , dil movsxd rbx , ebx lea rbp , [ rsp + hexvar ] jmp hexvar nop word ptr [ rax + rax ] movzx edi , byte ptr [ rbp + rbx ] movsx rdi , dil mov esi , num sub rbx , num call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov esi , num mov edi , hexvar pop rbx pop rbp jmp hexvar or edi , hexvar add rcx , num movsxd rdx , ebx mov byte ptr [ rcx - num ] , dil jmp hexvar cmp rdi , hexvar jg hexvar test rdi , rdi jg hexvar jne hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov esi , num xor edi , edi call hexvar jmp hexvar nop lea rdi , [ rdi - num ] sar rdi , num add rsp , hexvar mov esi , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov esi , num mov edi , hexvar call hexvar lea rdi , [ rbx - hexvar ] add rsp , hexvar mov esi , num pop rbx sar rdi , num pop rbp jmp hexvar nop word ptr [ rax + rax ] mov rbp , rdi neg rbp cmp rdi , - hexvar jge hexvar nop mov esi , num mov edi , hexvar sub rbp , hexvar call hexvar cmp rbp , hexvar jg hexvar lea rdi , [ rbp - num ] sar rdi , num or rdi , hexvar jmp hexvar
,
,
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
,
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
,
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , edi je hexvar lea ecx , [ rdi - num ] push rbx mov ebx , edi cmp ecx , num jbe hexvar test eax , eax jne hexvar cmp edi , num jne hexvar pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi cmp edi , num mov rdi , rdx sete sil add esi , num call hexvar mov edi , ebx xor esi , esi pop rbx jmp hexvar nop ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
push r15 mov r15d , r8d push r14 mov r14d , edx push r13 mov r13d , esi push r12 mov r12 , rdi push rbp mov ebp , r9d push rbx mov rbx , rcx sub rsp , num cmp byte ptr [ rcx + hexvar ] , hexvar ja hexvar movzx eax , byte ptr [ rcx + hexvar ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop xor r8d , r8d xor ecx , ecx mov r9 , qword ptr [ rbx + hexvar ] sub rsp , num mov edx , r14d mov esi , r13d mov rdi , r12 push num push rbp push r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov r8 , qword ptr [ rcx + num ] mov rcx , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rcx ] mov r9 , qword ptr [ rcx + hexvar ] xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rcx call hexvar mov byte ptr [ rbx + hexvar ] , num xor r8d , r8d mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov r9 , qword ptr [ rbx + hexvar ] xor r8d , r8d mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar xor r9d , r9d xor r8d , r8d mov rcx , rax jmp hexvar nop word ptr cs : [ rax + rax ] xor r8d , r8d jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov r9d , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov r8d , dword ptr [ rip + hexvar ] mov r10d , r9d mov eax , ecx shl r9d , hexvar add ecx , ecx shl r10d , hexvar and eax , hexvar or rax , qword ptr [ rip + hexvar ] and ecx , hexvar and r10d , hexvar and r9d , hexvar or rax , r10 mov r10d , r8d shl r8d , num shl r10d , hexvar and r8d , hexvar and r10d , hexvar or rax , r10 or rax , r9 or rax , r8 or rax , rcx mov rcx , rax or rcx , hexvar test edi , edi cmovne rax , rcx mov rcx , rax or rcx , hexvar test esi , esi cmovne rax , rcx cmp edx , - num je hexvar bsf edx , edx mov ecx , hexvar cmove edx , ecx sub edx , num shl edx , hexvar or rax , rdx mov esi , dword ptr [ rip + hexvar ] mov ecx , eax mov edx , eax mov dword ptr [ rip + hexvar ] , num or ecx , hexvar test esi , esi je hexvar mov ecx , eax or ecx , hexvar test eax , hexvar cmovne edx , ecx or edx , hexvar mov ecx , edx mov eax , ecx mov qword ptr [ rip + hexvar ] , rax ret
,
,
,
,
,
,
,
,
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi + num ] , rax jne hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rdi + hexvar ] , rdx je hexvar call hexvar mov eax , num ret
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi + num ] , rax jne hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rdi + hexvar ] , rdx je hexvar call hexvar mov eax , num ret
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
,
,
,
,
,
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , edi je hexvar lea ecx , [ rdi - num ] push rbx mov ebx , edi cmp ecx , num jbe hexvar test eax , eax jne hexvar cmp edi , num jne hexvar pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi cmp edi , num mov rdi , rdx sete sil add esi , num call hexvar mov edi , ebx xor esi , esi pop rbx jmp hexvar nop ret
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
,
,
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
,
,
,
mov rax , rsi sub rsp , num xor r9d , r9d xor r8d , r8d mov rcx , rdx lea rsi , [ rdi + num ] mov rdx , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
,
mov rsi , qword ptr [ rdi ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num lea rcx , [ rip + hexvar ] test byte ptr [ rcx + rax * num ] , hexvar je hexvar lea rdx , [ rip + hexvar ] test byte ptr [ rdx + rax ] , num je hexvar push rbp push rbx mov rbx , rsi sub rsp , num nop dword ptr [ rax ] add rbx , num movzx edx , byte ptr [ rbx ] test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar cmp dl , hexvar je hexvar mov rbp , rdi mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] sub rdx , rsi call hexvar test rax , rax je hexvar mov qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret nop xor eax , eax ret
mov rax , rsi sub rsp , num xor r9d , r9d xor r8d , r8d mov rcx , rdx lea rsi , [ rdi + num ] mov rdx , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
,
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
xor edx , edx jmp hexvar
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rdi , rsp call hexvar cmp byte ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov esi , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rax + hexvar ] call hexvar call hexvar add rsp , hexvar ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] or ah , num mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar cmp dword ptr [ rbp - num ] , num setne al leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jge hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - num ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx mov edx , hexvar sub edx , eax mov eax , edx sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov r8d , num mov ecx , num lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov r8d , num mov ecx , num lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax call hexvar test eax , eax sete al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , al test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar movzx eax , byte ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar cmp eax , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx add rax , num mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num sub rax , rdx mov rdx , rax movzx eax , byte ptr [ rbp - num ] add rax , rdx mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shr rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx or rax , rsi pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax setne al pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num ja hexvar cmp dword ptr [ rbp - hexvar ] , num jae hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax nop cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe neg rax add qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rsi mov r8 , rcx mov rcx , rdx mov rdx , rdi mov esi , num mov edi , eax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - num ] , - hexvar je hexvar call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num movzx eax , al add eax , edx and eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num movzx eax , al add eax , edx and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , edx mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , ecx mov dword ptr [ rax + rcx * num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al sete al test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al sete al test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num sete dl cmp dword ptr [ rbp - num ] , num sete al xor eax , edx test al , al je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num and rax , qword ptr [ rbp - num ] test rax , rax sete al pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
,
,
,
,
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
,
,
,
,
,
push r15 lea r15 , [ rsi + hexvar ] push r14 push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi add rdi , hexvar lea rax , [ rbx + hexvar ] mov rsi , rax sub rsp , hexvar mov r8 , qword ptr [ rcx + hexvar ] mov rcx , rdx mov rdx , r15 mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ r13 + hexvar ] test rax , rax je hexvar mov r14 , qword ptr [ rax ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r14 , qword ptr [ r14 ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax jne hexvar nop dword ptr [ rax ] xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num je hexvar mov r14 , qword ptr [ r13 + hexvar ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax je hexvar mov r14 , qword ptr [ r14 ] test r14 , r14 jne hexvar mov r8 , qword ptr [ r13 + hexvar ] mov rsi , qword ptr [ rsp + num ] mov rcx , rbp mov rdx , r15 mov rdi , qword ptr [ rsp ] call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax setne al movzx eax , al jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num mov eax , num jne hexvar jmp hexvar
,
,
,
,
,
,
,
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
,
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , edx push rbp mov rbp , rsi push rbx mov ecx , dword ptr [ rdi + hexvar ] mov rbx , rdi mov esi , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] cmp ecx , esi jae hexvar mov eax , ecx add ecx , num shl rax , num add rax , rdi mov qword ptr [ rax ] , rbp mov dword ptr [ rax + num ] , r12d mov eax , num mov dword ptr [ rbx + hexvar ] , ecx pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] add esi , hexvar mov dword ptr [ rbx + hexvar ] , esi shl rsi , num call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov dword ptr [ rsi ] , num mov rbp , qword ptr [ rdi ] xor eax , eax cmp rbp , rdx jae hexvar cmp byte ptr [ rbp ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov r12 , rdi mov rbx , rsi call hexvar xor edx , edx mov rsi , r12 mov rdi , rbp mov dword ptr [ rax ] , num mov r13 , rax call hexvar cmp rax , - num jne hexvar mov edx , dword ptr [ r13 ] test edx , edx je hexvar test rbx , rbx je hexvar mov dword ptr [ rbx ] , num xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax call hexvar xor eax , eax jmp hexvar
test rsi , rsi je hexvar push rbp lea eax , [ rdx - num ] mov rbp , rdi push rbx mov rbx , rsi sub rsp , num cmp eax , num ja hexvar xor esi , esi mov edi , edx call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbx mov rdi , rbp mov rdx , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] xor eax , eax ret
,
,
,
push rbp mov edx , num mov rbp , rdi xor edi , edi push rbx mov rbx , rsi lea rsi , [ rip + hexvar ] sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp mov rdx , rbx mov rsi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
push r15 mov r15 , r8 push r14 mov r14 , rsi push r13 mov r13d , ecx push r12 mov r12 , rdi push rbp mov ebp , edx push rbx sub rsp , num mov rsi , qword ptr [ rdi + hexvar ] cmp rbp , rsi jb hexvar test rsi , rsi jne hexvar mov esi , hexvar cmp rbp , num ja hexvar mov esi , hexvar mov ebx , hexvar jmp hexvar nop dword ptr [ rax ] mov rsi , rbx lea rbx , [ rsi + rsi ] cmp rbp , rbx jae hexvar add rsi , rbx shl rsi , num mov rdi , qword ptr [ r12 + hexvar ] call hexvar mov rcx , qword ptr [ r12 + hexvar ] mov rdx , rbx xor esi , esi mov qword ptr [ r12 + hexvar ] , rax sub rdx , rcx lea rcx , [ rcx + rcx * num ] lea rdx , [ rdx + rdx * num ] lea rdi , [ rax + rcx * num ] shl rdx , num call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , qword ptr [ r12 + hexvar ] lea rdx , [ rbp + rbp * num ] lea rax , [ rax + rdx * num ] cmp qword ptr [ rax ] , num jne hexvar mov rdx , qword ptr [ r12 + hexvar ] mov qword ptr [ rax ] , rdx add rdx , num mov qword ptr [ r12 + hexvar ] , rdx mov qword ptr [ rax + num ] , r14 mov dword ptr [ rax + hexvar ] , r13d test r13d , r13d jne hexvar mov edx , dword ptr [ r15 ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 ] , edx jmp hexvar
,
,
,
,
,
,
push r15 mov r15 , r8 push r14 mov r14 , rsi push r13 mov r13d , ecx push r12 mov r12 , rdi push rbp mov ebp , edx push rbx sub rsp , num mov rsi , qword ptr [ rdi + hexvar ] cmp rbp , rsi jb hexvar test rsi , rsi jne hexvar mov esi , hexvar cmp rbp , num ja hexvar mov esi , hexvar mov ebx , hexvar jmp hexvar nop dword ptr [ rax ] mov rsi , rbx lea rbx , [ rsi + rsi ] cmp rbp , rbx jae hexvar add rsi , rbx shl rsi , num mov rdi , qword ptr [ r12 + hexvar ] call hexvar mov rcx , qword ptr [ r12 + hexvar ] mov rdx , rbx xor esi , esi mov qword ptr [ r12 + hexvar ] , rax sub rdx , rcx lea rcx , [ rcx + rcx * num ] lea rdx , [ rdx + rdx * num ] lea rdi , [ rax + rcx * num ] shl rdx , num call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , qword ptr [ r12 + hexvar ] lea rdx , [ rbp + rbp * num ] lea rax , [ rax + rdx * num ] cmp qword ptr [ rax ] , num jne hexvar mov rdx , qword ptr [ r12 + hexvar ] mov qword ptr [ rax ] , rdx add rdx , num mov qword ptr [ r12 + hexvar ] , rdx mov qword ptr [ rax + num ] , r14 mov dword ptr [ rax + hexvar ] , r13d test r13d , r13d jne hexvar mov edx , dword ptr [ r15 ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 ] , edx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
push r13 xor eax , eax mov r13d , edx mov rdx , rsi push r12 mov r12 , rsi lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar lea rdi , [ rbx + hexvar ] mov r8d , r13d mov rdx , r12 mov rsi , rbp xor ecx , ecx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
,
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
,
,
