push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov r12 , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
push r15 push r14 push r13 mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , rdx mov edx , num push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rbp , qword ptr [ rbx ] mov r14 , rax mov rdi , rbp call hexvar mov rdi , r12 mov r15 , rax call hexvar mov edx , dword ptr [ rbx + hexvar ] add rax , r15 lea r15 , [ rax + num ] test edx , edx je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r15 , qword ptr [ r13 ] lea rbx , [ rax + num ] test r15 , r15 je hexvar mov rdi , r15 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r15 mov r13 , rax test rax , rax je hexvar mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , rbx mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , r14 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r14 mov r13 , rax test rax , rax jne hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r13d , r13d call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp mov rbp , rdx xor edx , edx push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rbx + num ] lea rdi , [ rbx + hexvar ] mov edx , hexvar mov esi , num call hexvar cmp rax , hexvar jne hexvar cmp word ptr [ rbx + hexvar ] , hexvar jne hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbx mov ebx , edx cmp edx , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , edx movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop word ptr [ rax + rax ] mov eax , esi shr rsi , hexvar bswap eax mov dword ptr [ rdi + num ] , eax mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi ] , sil pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop word ptr [ rax + rax ] mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , num mov byte ptr [ rdi + num ] , al mov byte ptr [ rdi ] , sil ret push rbx lea rsi , [ rip + hexvar ] mov ebx , edx xor edi , edi mov edx , num call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 lea r12 , [ rip + hexvar ] push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop word ptr [ rax + rax ] mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
movzx ecx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] mov rdx , rcx test byte ptr [ rax + rcx * num ] , hexvar je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar mov rax , rdi test dl , dl jne hexvar jmp hexvar nop word ptr [ rax + rax ] movzx edx , byte ptr [ rdi ] test dl , dl je hexvar add rdi , num cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdi + num ] add rdi , num mov rax , rdi test dl , dl jne hexvar ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rbp , rsi test rsi , rsi je hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov ebp , num mov ebx , num jmp hexvar mov rdi , rbx imul rdi , rbp call hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdi je hexvar ret nop word ptr [ rax + rax ] sub rsp , num xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
mov eax , edi mov byte ptr [ rsp - num ] , al movzx eax , byte ptr [ rsp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip ] add rax , rdx jmp rax mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , num ret mov eax , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov r9d , num mov r8 , rdx lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov r9d , num mov r8 , rcx lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax mov edi , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rbp + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp + hexvar ] mov rdx , rax movabs rax , hexvar cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp + hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp + hexvar ] mov rdx , rax movabs rax , hexvar cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp + hexvar ] jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx neg rax mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , num pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , num mov esi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fcomip st ( num ) fstp st ( num ) jbe hexvar fld xword ptr [ rip + hexvar ] fld xword ptr [ rbp + hexvar ] fcomip st ( num ) fstp st ( num ) jae hexvar fld xword ptr [ rbp + hexvar ] fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] jmp hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fsubp st ( num ) fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] movabs rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar fild qword ptr [ rbp - num ] cmp qword ptr [ rbp - num ] , num jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fld xword ptr [ rbp + hexvar ] fucomip st ( num ) jp hexvar fld xword ptr [ rbp + hexvar ] fucomip st ( num ) fstp st ( num ) je hexvar jmp hexvar fstp st ( num ) mov eax , num jmp hexvar mov eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax fild qword ptr [ rbp - hexvar ] test rax , rax jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fstp xword ptr [ rbp + hexvar ] fld xword ptr [ rbp + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , num pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num movabs rcx , hexvar mov rdi , rax call hexvar and eax , num leave ret
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num or rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rdx , rax mov rax , qword ptr [ rbp - num ] and eax , num add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movzx eax , word ptr [ rbp - num ] and ax , hexvar cmp ax , hexvar sete al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax jne hexvar call hexvar call hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] setnp al mov edx , num pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] cmovne eax , edx movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar pxor xmm0 , xmm0 comisd xmm0 , xmmword ptr [ rbp - hexvar ] seta al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq xmm1 , qword ptr [ rip + hexvar ] xorpd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] add edx , num movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] add edx , num movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , rcx mov rdi , rdx call rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , hexvar mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + num ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call rbx nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movzx eax , word ptr [ rbp - hexvar ] and ax , hexvar cmp ax , hexvar sete al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar pxor xmm0 , xmm0 comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar call hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] jmp hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq xmm1 , qword ptr [ rip + hexvar ] xorpd xmm0 , xmm1 lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cdqe mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar sub qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num setg al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] bsr rax , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num sub rax , rdx mov rdx , rax mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , hexvar cmp qword ptr [ rbp - num ] , hexvar cmovae rax , qword ptr [ rbp - num ] add rax , hexvar shr rax , num mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] shl rax , num sub rax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num sub rax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar cmp rax , qword ptr [ rbp - num ] setae al movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar jmp hexvar mov eax , num jmp hexvar movabs rax , hexvar jmp hexvar movabs rax , hexvar cmp rax , qword ptr [ rbp - num ] setae al movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar cmp rax , qword ptr [ rbp - num ] setae al movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , hexvar cmp qword ptr [ rbp - num ] , rax setbe al movzx eax , al jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar setbe al movzx eax , al jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar and rax , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax movabs rax , hexvar and rax , rdx not rax pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jg hexvar cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] setle al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , - num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , - num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] imul rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] add rdx , rcx mov qword ptr [ rax + num ] , rdx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] sub rax , num bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sar eax , num mov edx , num mov ecx , eax shl rdx , cl mov eax , dword ptr [ rbp - hexvar ] sub eax , num sar eax , num mov esi , num mov ecx , eax shl rsi , cl mov rax , rsi add rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar shr rax , num add rax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num or rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rdx , rax mov rax , qword ptr [ rbp - num ] and eax , num add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov rdx , qword ptr [ rax + rdx * num ] mov eax , dword ptr [ rbp - num ] sub eax , num mov eax , eax lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] imul rdx , rax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] sub eax , num mov eax , eax lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] imul rdx , rax mov eax , dword ptr [ rbp - num ] shr eax , num lea ecx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov ecx , ecx movzx eax , byte ptr [ rax + rcx ] movzx ecx , al mov eax , dword ptr [ rbp - num ] shr eax , num lea esi , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov esi , esi movzx eax , byte ptr [ rax + rsi ] movzx eax , al sub ecx , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] shr eax , num lea esi , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov esi , esi movzx eax , byte ptr [ rax + rsi ] movzx eax , al sub ecx , eax mov eax , ecx mov ecx , eax shl rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , rdx shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , num imul rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] or rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num shr rax , num imul rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov edx , edx mov rax , qword ptr [ rax + rdx * num ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num setg al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar movzx eax , al sub edx , eax mov eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete dl mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setne al or eax , edx test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax sete al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num movabs rcx , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax sete al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num movabs rcx , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax sete al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar cmp qword ptr [ rbp - num ] , num sete al movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] sar rax , hexvar mov rcx , rax mov rax , rcx xor rax , qword ptr [ rbp - num ] sub rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + num ] mov rcx , rdx mov rdx , rsi mov rsi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax sete al movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] neg rdx and rdx , qword ptr [ rbp - hexvar ] sub rdx , num and rax , rdx test rax , rax je hexvar mov eax , num jmp hexvar bsf rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr qword ptr [ rbp - hexvar ] , cl mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax sete al movzx eax , al mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jg hexvar cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov ecx , eax shl rdx , cl mov rax , rdx sub rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] and rax , qword ptr [ rbp - num ] test rax , rax sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call rbx nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov edx , edx mov rax , qword ptr [ rax + rdx * num ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] sub rax , num bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sar eax , num mov edx , num mov ecx , eax shl rdx , cl mov eax , dword ptr [ rbp - hexvar ] sub eax , num sar eax , num mov esi , num mov ecx , eax shl rsi , cl mov rax , rsi add rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num or rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rdx , rax mov rax , qword ptr [ rbp - num ] and eax , num add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov edx , edx mov rax , qword ptr [ rax + rdx * num ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , hexvar setbe al movzx eax , al jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , hexvar cmp qword ptr [ rbp - num ] , rax setbe al movzx eax , al jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] not rax shr rax , hexvar movzx eax , al jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar movabs rax , hexvar cmp qword ptr [ rbp - num ] , rax setbe al movzx eax , al jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , hexvar setbe al movzx eax , al jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar cmp qword ptr [ rbp - num ] , hexvar setbe al movzx eax , al jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , hexvar cmp rax , rdx ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] cqo mov rax , rdx xor rax , qword ptr [ rbp - num ] sub rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] bsr rax , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] neg rax mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar and rax , rdx jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov rdx , rax movabs rax , hexvar and rax , rdx not rax jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov eax , num jmp hexvar mov eax , num test eax , eax setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] shl eax , num and eax , hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] and eax , num or edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] shl rdx , num sub rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax jg hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] not rax shr rax , hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jns hexvar mov rax , - num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num or rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rdx , rax mov rax , qword ptr [ rbp - num ] and eax , num add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] mov edx , edx mov rax , qword ptr [ rax + rdx * num ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cqo mov rax , rdx xor rax , qword ptr [ rbp - hexvar ] sub rax , rdx shl rax , num mov rbx , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rbx mov rcx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - num ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jg hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cqo mov rax , rdx xor rax , qword ptr [ rbp - hexvar ] sub rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar neg qword ptr [ rbp - hexvar ] jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shr rdx , cl mov rax , rdx and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdq xor eax , edx sub eax , edx cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] neg rax mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar neg eax mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov rsi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - num ] lea rdi , [ rcx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rsi mov rsi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar add rax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx edx , al mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] add rdx , num mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] sub rdx , num mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg rax mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] and rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar imul rax , rdx mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx movabs rcx , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] and eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx shr rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num sub rax , rdx shl rax , num sar rax , num add rax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx add rax , rax sub rax , hexvar add rax , rax add rax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rbp - num ] , rax jmp hexvar shr qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , edx shl rax , cl pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] shl rax , num sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov rbx , rdx sub rbx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rbx , rax mov rax , rbx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar movzx eax , al neg eax cdqe and rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] lea rbx , [ rdx + rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax cdqe and rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub qword ptr [ rax ] , rdx jae hexvar sub qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rax ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx add edx , edx mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov edx , dword ptr [ rax ] mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , ecx cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx add edx , num mov dword ptr [ rax ] , edx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num shl dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax - num ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar rdx , cl mov rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov eax , eax mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rax lea rdi , [ rax - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx add rax , hexvar shl rax , num cmp rax , hexvar setbe al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx add rax , hexvar shl rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx add rax , hexvar lea rdx , [ rax * num ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num lea rcx , [ rdx - num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rcx + rdx ] mov rcx , qword ptr [ rbp - num ] mov edx , hexvar mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] lea rsi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax seta al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al or rax , rcx mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al or rax , rcx mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax and qword ptr [ rbp - hexvar ] , hexvar lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or ah , num movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] bsr rax , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] sub eax , num and eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx add rax , hexvar mov rax , qword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rsi , edx mov edx , num div rsi mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx add rax , num mov rax , qword ptr [ rax ] add rax , num mul qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] not rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx and qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] not rax mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar bsf rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num sub rax , num shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx and qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar bsf rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num sub rax , num shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] and eax , num mov edx , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , ecx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - num ] shl eax , num add edx , eax mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rip + hexvar ] mov edx , edx movzx eax , byte ptr [ rax + rdx ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num add eax , eax mov edx , num sub edx , eax mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , hexvar jle hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , rdx add rax , rax add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov qword ptr [ rbp - hexvar ] , r9 mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] or rax , rdx test rax , rax sete al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax cmovge rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - num ] test rax , rax setne al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] test rax , rax jns hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] test rax , rax jns hexvar mov qword ptr [ rbp - num ] , num jmp hexvar shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax or qword ptr [ rbp - num ] , num shr qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov qword ptr [ rbp - num ] , num jmp hexvar shr qword ptr [ rbp - hexvar ] , num shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax or qword ptr [ rbp - num ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx sub rax , num cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx sub rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] lea rbx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + num ] test rax , rax cmovs rax , rdx sar rax , num mov rdx , rax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov eax , eax add rax , rdx add rax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] movabs rdx , hexvar mov rax , rcx imul rdx lea rax , [ rdx + rcx ] sar rax , num mov rdx , rax mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + num ] test rax , rax cmovs rax , rdx sar rax , num mov rdx , rax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov eax , eax add rax , rdx add rax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] test rax , rax jns hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] test rax , rax jns hexvar mov qword ptr [ rbp - num ] , num jmp hexvar shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax or qword ptr [ rbp - num ] , num shr qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov qword ptr [ rbp - num ] , num jmp hexvar shr qword ptr [ rbp - hexvar ] , num shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax or qword ptr [ rbp - num ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - num ] shl eax , num add edx , eax mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rip + hexvar ] mov edx , edx movzx eax , byte ptr [ rax + rdx ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] and eax , num mov esi , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + num ] mov edx , esi mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbx ] , eax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - num ] shl eax , num add edx , eax mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rip + hexvar ] mov edx , edx movzx eax , byte ptr [ rax + rdx ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , rax pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , rax pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar add rax , rbx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - num ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar add rax , rbx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - num ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - num ] , rax cmovge rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , num lea rcx , [ rax + rax ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num cmp rax , hexvar setbe al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov edi , hexvar mov edx , num div rdi imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax shr qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax shr qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , - num mov ecx , edx shl rsi , cl mov rdx , rsi not rdx and rax , rdx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax and qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , edx shr rax , cl mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx not rax and rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , - num mov ecx , edx shl rsi , cl mov rdx , rsi not rdx and rax , rdx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax and qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , edx shr rax , cl mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx not rax and rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , - num mov ecx , edx shl rsi , cl mov rdx , rsi not rdx and rax , rdx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax and qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , edx shr rax , cl mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx not rax and rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] shl rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] or qword ptr [ rbp - num ] , rax sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar cmp qword ptr [ rbp - num ] , num sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar shl rax , num cmp rax , hexvar setbe al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar shl rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rdx , [ rax * num ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] neg rax mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , num cmp rdx , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] lea rdi , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rcx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe cmp rdx , rax jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx neg rcx add rcx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rcx call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jbe hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe jmp hexvar mov eax , hexvar mov esi , dword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov byte ptr [ rax ] , num mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rax , num jbe hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] sub rdx , num cmp rax , rdx cmova rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rax , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , num cmp qword ptr [ rbp - hexvar ] , rax cmovbe rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov rsi , rcx mov edi , edx call rax sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , - num je hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - num ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx jmp hexvar nop nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shr rax , num cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , hexvar call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe shl rax , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov rdx , qword ptr [ rbp - num ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + rdx * num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] shl edx , num movsxd rcx , edx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] and rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] xor qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar shr qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov edx , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovbe rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov qword ptr [ rbp - hexvar ] , num bsr rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num and rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setb al movzx eax , al test rax , rax jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar mov byte ptr [ rbp - num ] , al mov edi , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar call hexvar call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe shl rax , num add rax , rcx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] test al , al setne al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar or al , byte ptr [ rbp - num ] movzx eax , al test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar movzx edx , byte ptr [ rbp - num ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx movzx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num ja hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num jbe hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , - num mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov edx , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - num ] cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 pop rbp ret
push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jge hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - num ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rdi lea r8 , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9 , rcx mov r8 , rdx mov ecx , num mov edx , num mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar nop jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax cmovae rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , - num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , num mov esi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rdx , qword ptr [ rsp + num ] mov rax , qword ptr [ rsp + hexvar ] mov esi , num mov rdi , rax call hexvar mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rsp + num ] add rdx , hexvar mov rcx , qword ptr [ rsp + num ] lea rsi , [ rcx + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] mov rdi , rcx call rax add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rsp + num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov r12 , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
push r15 push r14 push r13 mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , rdx mov edx , num push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rbp , qword ptr [ rbx ] mov r14 , rax mov rdi , rbp call hexvar mov rdi , r12 mov r15 , rax call hexvar mov edx , dword ptr [ rbx + hexvar ] add rax , r15 lea r15 , [ rax + num ] test edx , edx je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r15 , qword ptr [ r13 ] lea rbx , [ rax + num ] test r15 , r15 je hexvar mov rdi , r15 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r15 mov r13 , rax test rax , rax je hexvar mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , rbx mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , r14 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r14 mov r13 , rax test rax , rax jne hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r13d , r13d call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp mov rbp , rdx xor edx , edx push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rbx + num ] lea rdi , [ rbx + hexvar ] mov edx , hexvar mov esi , num call hexvar cmp rax , hexvar jne hexvar cmp word ptr [ rbx + hexvar ] , hexvar jne hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbx mov ebx , edx cmp edx , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , edx movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop word ptr [ rax + rax ] mov eax , esi shr rsi , hexvar bswap eax mov dword ptr [ rdi + num ] , eax mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi ] , sil pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop word ptr [ rax + rax ] mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , num mov byte ptr [ rdi + num ] , al mov byte ptr [ rdi ] , sil ret push rbx lea rsi , [ rip + hexvar ] mov ebx , edx xor edi , edi mov edx , num call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 lea r12 , [ rip + hexvar ] push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop word ptr [ rax + rax ] mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
movzx ecx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] mov rdx , rcx test byte ptr [ rax + rcx * num ] , hexvar je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar mov rax , rdi test dl , dl jne hexvar jmp hexvar nop word ptr [ rax + rax ] movzx edx , byte ptr [ rdi ] test dl , dl je hexvar add rdi , num cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdi + num ] add rdi , num mov rax , rdi test dl , dl jne hexvar ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rbp , rsi test rsi , rsi je hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov ebp , num mov ebx , num jmp hexvar mov rdi , rbx imul rdi , rbp call hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdi je hexvar ret nop word ptr [ rax + rax ] sub rsp , num xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
mov rsi , rdi mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] push r12 push rbp push rbx mov rbx , rdi test eax , eax je hexvar mov ebp , eax mov r12 , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] cmp ebp , num jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi ] mov rsi , r12 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] mov rdi , qword ptr [ rdx + hexvar ] lea rbx , [ rdx + hexvar ] test rdi , rdi jne hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov ebp , esi mov r12 , rdx mov rdi , qword ptr [ rbx ] cmp ebp , num jne hexvar test rdi , rdi jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax jne hexvar pop rbx lea rax , [ rdi + hexvar ] pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rax , rbx cmp ebp , num jne hexvar mov rbx , qword ptr [ rbx ] lea rax , [ rbx + hexvar ] pop rbx pop rbp pop r12 ret
push r14 push r13 push r12 push rbp mov rbp , rdi push rbx mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar lea rdi , [ rax + num ] call hexvar mov rsi , qword ptr [ rbp ] mov r13 , rax mov rdi , rax call hexvar mov rdi , r13 call hexvar test rax , rax je hexvar mov r12 , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp + num ] mov rdi , r12 mov rsi , qword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov esi , num mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov eax , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rbx + hexvar ] not eax and edx , hexvar shr eax , hexvar shl eax , num or eax , edx mov byte ptr [ rbx + hexvar ] , al mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar or dword ptr [ rbx + hexvar ] , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar or dword ptr [ rbx + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or byte ptr [ rbx + hexvar ] , num mov rsi , r14 mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , num mov rdi , rbp mov qword ptr [ rip + hexvar ] , num call hexvar xor edx , edx mov rsi , r13 mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar pop rbx mov rdi , r12 pop rbp pop r12 pop r13 pop r14 jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rbp + hexvar ] , num je hexvar jmp hexvar mov rdi , r13 call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov edi , num call hexvar
push r15 push r14 mov r14 , rdi mov edi , hexvar push r13 push r12 push rbp push rbx sub rsp , hexvar call hexvar mov rsi , rsp mov rdi , r14 mov r12 , rax mov rax , qword ptr [ r14 + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar xor edx , edx xor esi , esi mov rdi , r14 call hexvar mov r13 , qword ptr [ rsp + hexvar ] test r13 , r13 je hexvar xor ebp , ebp nop mov rbx , r13 mov eax , hexvar mov rdx , r14 mov rdi , r12 sub rbx , rbp cmp rbx , hexvar cmova rbx , rax mov rsi , rbx call hexvar mov r15 , rax cmp rax , rbx jne hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov rdi , r12 call hexvar cmp rax , r15 jne hexvar add rbp , rax cmp r13 , rbp ja hexvar add rsp , hexvar mov rdi , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ r14 ] lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rax , qword ptr [ r14 + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rbx , qword ptr [ rax ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rbx , qword ptr [ r14 ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
mov dword ptr [ rip + hexvar ] , edi ret
mov eax , dword ptr [ rip + hexvar ] ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov dword ptr [ rip + hexvar ] , edi ret
mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
push r12 push rbp movsxd rbp , esi push rbx lea r12d , [ rbp + num ] mov rbx , rdi movsxd r12 , r12d mov rdi , r12 call hexvar test rax , rax je hexvar lea edi , [ rbp - num ] xor edx , edx test ebp , ebp jg hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , rcx movzx ecx , byte ptr [ rbx + rdx ] mov byte ptr [ rax + rdx ] , cl lea rcx , [ rdx + num ] cmp rdi , rdx jne hexvar mov byte ptr [ rax + rbp + num ] , num mov rsi , r12 mov rdi , rax mov byte ptr [ rax + rbp ] , num call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rdi , rbx pop rbx mov esi , eax jmp hexvar
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
test rdi , rdi je hexvar push rbx mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rcx * num ] lea rax , [ rdx + rsi ] cmp qword ptr [ rax ] , num je hexvar mov rdi , qword ptr [ rip + hexvar ] movzx r8d , byte ptr [ rip + hexvar ] add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi ] , r8b mov rax , qword ptr [ rax ] mov qword ptr [ rax + hexvar ] , rdi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edi lea rax , [ rdx + rsi + num ] mov qword ptr [ rax ] , rbx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx pop rbx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret mov rax , qword ptr [ rip + hexvar ] shl rax , num jmp hexvar nop dword ptr [ rax ] ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rdi + num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rax mov dword ptr [ rdi + hexvar ] , num test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rdi , qword ptr [ rdx + rcx * num ] je hexvar ret nop dword ptr [ rax + rax ] mov edx , dword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rdi ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rax ] cmp rdx , rbx je hexvar test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rcx ] , dl mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov qword ptr [ rax ] , rbx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al pop rbx ret test rbx , rbx je hexvar mov rax , qword ptr [ rip + hexvar ] shl rax , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
mov r11 , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov qword ptr [ rsp - num ] , rbx cmp r11 , rbx jae hexvar mov r14d , dword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] xor r12d , r12d lea rbp , [ rip + hexvar ] lea r9 , [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea r15 , [ rip + hexvar ] lea r10 , [ rip + hexvar ] lea rbx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ r11 ] mov esi , num test dl , dl je hexvar lea rdi , [ rip + hexvar ] movzx esi , byte ptr [ rdi + rdx ] movsxd rcx , eax mov edi , num cmp word ptr [ rbp + rcx * num ] , num cmovne r13 , r11 cmovne r14d , eax cmovne r12d , edi jmp hexvar nop dword ptr [ rax ] movsx eax , word ptr [ r10 + rcx * num ] cmp eax , hexvar jle hexvar movsxd rsi , esi movzx esi , byte ptr [ rbx + rsi ] movsxd rcx , eax movsx edx , word ptr [ r9 + rcx * num ] add edx , esi movsxd rdx , edx movsx edi , word ptr [ r8 + rdx * num ] cmp edi , eax jne hexvar movsx eax , word ptr [ r15 + rdx * num ] add r11 , num cmp r11 , qword ptr [ rsp - num ] jne hexvar test r12b , r12b je hexvar mov dword ptr [ rip + hexvar ] , r14d mov qword ptr [ rip + hexvar ] , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] test rdi , rdi je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbp ] mov rdi , qword ptr [ rbx ] call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rbp , qword ptr [ rbp + num ] test rbp , rbp je hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp ] xor esi , esi call hexvar mov r13 , qword ptr [ rbp ] mov edx , num xor edi , edi mov rbx , qword ptr [ rip + hexvar ] mov rsi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , r13 mov rsi , rax mov rdx , rbx xor eax , eax call hexvar mov rbp , qword ptr [ rbp + num ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax mov rdx , rbx xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax ] add rsp , num jmp hexvar nop dword ptr [ rax + rax ] ret
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdx mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx xor ecx , ecx call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar pop rbx ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax mov rdx , rbx xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar or dword ptr [ rdi + hexvar ] , hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx xor edx , edx call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar pop rbx ret mov edi , num call hexvar
push r14 push r13 push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov r12 , rdi lea r13 , [ rip + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbp + hexvar ] xor r14d , r14d add rbp , hexvar test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] mov r14d , num mov qword ptr [ rbp ] , rax mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ r12 ] mov rdi , qword ptr [ rbx ] call hexvar test eax , eax je hexvar lea rbp , [ rbx + hexvar ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar test r14d , r14d je hexvar mov r12 , qword ptr [ r12 + num ] test r12 , r12 je hexvar mov rbp , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ r12 ] mov rbx , qword ptr [ rip + hexvar ] mov rsi , r13 xor edi , edi mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , num ret
push r13 push r12 push rbp push rbx sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar mov rbx , rdi lea rbp , [ rip + hexvar ] test rdi , rdi jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rax mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test rax , rax jne hexvar mov r13 , qword ptr [ rbx ] mov r12 , qword ptr [ rip + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , r13 mov rdx , r12 mov rsi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
cmp qword ptr [ rip + hexvar ] , num push rbx je hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar test rbx , rbx je hexvar mov rdx , rbx lea rsi , [ rip - hexvar ] mov rdi , rax pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax mov rdx , rbx xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + hexvar ] xor esi , esi call hexvar mov rdi , rcx test rcx , rcx jne hexvar pop rbx ret mov edi , num call hexvar
test rsi , rsi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdi ret
push r12 mov r12d , esi push rbp push rbx mov rbx , rdi call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdi , rbx mov rbp , rax call hexvar mov rcx , rbx mov rdi , rbp lea rsi , [ rip + hexvar ] mov rdx , rax mov r8 , rax xor eax , eax mov qword ptr [ rip + hexvar ] , rbx sub rdx , rbx call hexvar xor esi , esi mov rdi , rbp call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar test r12d , r12d jne hexvar xor esi , esi mov rdi , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rbp , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , rbx mov rdx , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor esi , esi mov rdi , rbp lea rbx , [ rax + hexvar ] call hexvar test rax , rax je hexvar nop dword ptr [ rax ] mov qword ptr [ rbx ] , rax mov rsi , rax mov rdi , rbp lea rbx , [ rax + hexvar ] call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , word ptr [ rdx + hexvar ] and ax , hexvar or al , hexvar mov word ptr [ rdx + hexvar ] , ax pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , rbp mov rdx , rbx jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , rbx mov rdx , rbp jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] sub rsp , num lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num jmp hexvar
push r12 mov r12 , rsi xor esi , esi push rbp push rbx mov rbx , rdx call hexvar mov rbp , rax test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar test r12 , r12 je hexvar mov rdx , r12 lea rsi , [ rip - hexvar ] mov rdi , rbp call hexvar mov rdi , rbp call hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax test r12 , r12 jne hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar nop mov r12 , qword ptr [ rdi + hexvar ] xor esi , esi call hexvar mov rdi , r12 test r12 , r12 jne hexvar mov rdi , rbp call hexvar test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx xor ebx , ebx mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r15 push r14 mov r14d , edx push r13 push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi sub rsp , hexvar mov r13 , rsp mov rdx , r13 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r14d , r14d jne hexvar mov rdi , r12 call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] mov rsi , r13 mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r15 , rax call hexvar mov rdx , r15 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar test r14d , r14d je hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
push r13 mov r13d , ecx push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdi mov rdi , r12 push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax test r13d , r13d jne hexvar mov rax , qword ptr [ rbp ] mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rsi , r12 lea rdi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar mov rdi , r12 call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
push r13 mov r13d , r8d push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , rdx mov rdi , rbx sub rsp , num call hexvar test rax , rax je hexvar add rsp , num mov ecx , r13d mov edx , r12d mov rdi , rbp pop rbx lea r8 , [ rip - hexvar ] pop rbp mov rsi , rax pop r12 pop r13 jmp hexvar mov rdi , rbx call hexvar
mov eax , num ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rbx pop rbx mov rsi , rax xor eax , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop ret
movzx edx , byte ptr [ rdi ] xor eax , eax cmp dl , hexvar je hexvar test dl , dl je hexvar nop cmp dl , hexvar je hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] test dl , dl je hexvar cmp dl , hexvar jne hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] cmp dl , hexvar je hexvar test dl , dl jne hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] movzx edx , byte ptr [ rdi + num ] cmp dl , hexvar je hexvar add rdi , num test dl , dl jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] lea rdx , [ rdi + num ] cmp al , hexvar je hexvar test al , al je hexvar mov rdi , rdx jmp hexvar ret xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp xor edx , edx mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] cmp byte ptr [ rdx ] , num jne hexvar add rsp , hexvar pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax xor eax , eax call hexvar
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar mov rbx , rax lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx je hexvar lea rbp , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num mov rsi , rbp xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar pop rbx ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rax call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
sub rsp , num call hexvar mov edi , num call hexvar
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar nop word ptr [ rax + rax ] mov ebx , dword ptr [ rbp + num ] sub ebx , num js hexvar movsxd rbx , ebx nop dword ptr [ rax + rax ] call qword ptr [ rbp + rbx * num + hexvar ] sub rbx , num test ebx , ebx jns hexvar mov rbp , qword ptr [ rbp ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov dword ptr [ rax ] , num call hexvar mov edi , eax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov edi , num call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rax ] , num jmp hexvar call hexvar mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete al movzx eax , al mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num jbe hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al lea edx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx ebx , al mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov r8d , ebx mov rcx , r12 mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jb hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , num mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax call hexvar cmp rax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax call hexvar cmp rax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] not rax cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx cmp rax , rdx jae hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov r8 , rcx lea rcx , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , num mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , num mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , num mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , ebx and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movsx eax , al shl eax , num mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , al or ebx , eax mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov dword ptr [ rax ] , num lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov esi , num mov edi , num mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] push num push rbx mov r9 , r12 mov r8 , rcx mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar nop add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num lea rcx , [ rip + hexvar ] push rcx lea r9 , [ rip + hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fcomip st ( num ) fstp st ( num ) jbe hexvar fld xword ptr [ rip + hexvar ] fld xword ptr [ rbp + hexvar ] fcomip st ( num ) fstp st ( num ) jae hexvar fld xword ptr [ rbp + hexvar ] fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] jmp hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fsubp st ( num ) fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] movabs rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar fild qword ptr [ rbp - num ] cmp qword ptr [ rbp - num ] , num jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fld xword ptr [ rbp + hexvar ] fucomip st ( num ) jp hexvar fld xword ptr [ rbp + hexvar ] fucomip st ( num ) fstp st ( num ) je hexvar jmp hexvar fstp st ( num ) mov eax , num jmp hexvar mov eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax fild qword ptr [ rbp - hexvar ] test rax , rax jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fstp xword ptr [ rbp + hexvar ] fld xword ptr [ rbp + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar cmp rax , num jbe hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] add rax , num mov edx , num mov esi , num mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rbp - num ] add rdx , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , - num mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al mov r8d , dword ptr [ rip + hexvar ] movsx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9d , r8d mov r8 , rdi mov edi , eax call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num ja hexvar cmp dword ptr [ rbp - hexvar ] , num jae hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax nop cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe neg rax add qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rsi mov r8 , rcx mov rcx , rdx mov rdx , rdi mov esi , num mov edi , eax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] or eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , hexvar mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rax add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] shl rax , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , - num cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov qword ptr [ rbp - num ] , hexvar mov rax , - num mov edx , num div qword ptr [ rbp - num ] test rax , rax js hexvar mov rax , - num mov edx , num div qword ptr [ rbp - num ] mov rdx , rax jmp hexvar movabs rdx , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax setb al movzx eax , al test rax , rax je hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] movzx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , - num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp rax , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] shl rcx , num add rax , rcx mov rax , qword ptr [ rax ] mov ecx , eax shr rdx , cl mov rax , rdx and eax , num test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rsi , ecx mov rcx , qword ptr [ rbp - hexvar ] add rcx , rsi shl rcx , num add rdx , rcx mov rdx , qword ptr [ rdx ] add rdx , num mov rsi , rax mov rdi , rdx call hexvar test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax sete al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov eax , num or dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] add rcx , num shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + num ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov eax , dword ptr [ rax + num ] shr eax , num and ax , hexvar movzx eax , ax mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , num mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push num mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8d , num mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , - num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , num sete al movzx eax , al test rax , rax je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar cmp byte ptr [ rbp - num ] , hexvar jbe hexvar cmp byte ptr [ rbp - num ] , hexvar ja hexvar cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , - num jne hexvar movzx eax , byte ptr [ rbp - num ] sub eax , hexvar cdqe jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx add rax , rax mov rdx , rax movzx eax , byte ptr [ rbp - num ] add rax , rdx mov edx , hexvar cmp rax , hexvar cmovg rax , rdx sub rax , hexvar jmp hexvar mov rax , - num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp rax , num setne al movzx eax , al test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - num ] , al cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar movzx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] movsxd rax , ecx add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jne hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov eax , dword ptr [ rax + num ] shr eax , num and ax , hexvar movzx eax , ax cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar cmp qword ptr [ rbp - num ] , num jg hexvar mov rax , - num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , - num sete al movzx eax , al test rax , rax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] shl rax , num add rdx , rax mov eax , ecx and ax , hexvar movzx eax , ax and eax , hexvar shl eax , num mov ecx , eax mov eax , dword ptr [ rdx + num ] and eax , hexvar or eax , ecx mov dword ptr [ rdx + num ] , eax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] setge al movzx eax , al test rax , rax je hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] lea rdx , [ rip + hexvar ] add rax , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] seta al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] and eax , hexvar test rax , rax setne dl mov rax , qword ptr [ rbp - hexvar ] and edx , num mov ecx , edx shl ecx , num movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ecx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , hexvar mov byte ptr [ rax + hexvar ] , dl mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] lea rdx , [ rip + hexvar ] add rax , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] add rdx , num cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num shl rdx , num lea rcx , [ rax + rdx ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rcx ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jl hexvar jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jg hexvar mov eax , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] shl rcx , num add rax , rcx mov rax , qword ptr [ rax ] cmp rdx , rax je hexvar mov eax , num jmp hexvar sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jns hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx shl rax , num lea rdx , [ rsi + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax cmovle rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax cmovle rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov qword ptr [ rbp - hexvar ] , r9 mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] shr al , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] shr al , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx shl rdx , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rsi and rdx , rcx mov qword ptr [ rax ] , rdx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rsi or rdx , rcx mov qword ptr [ rax ] , rdx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx not rdx mov qword ptr [ rax ] , rdx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cqo shr rdx , hexvar add rax , rdx and eax , hexvar sub rax , rdx mov ecx , eax shr rsi , cl mov rax , rsi and eax , num test rax , rax setne al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num mov rdi , rax mov rax , rdi lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cqo shr rdx , hexvar add rax , rdx and eax , hexvar sub rax , rdx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdx not rax mov rdx , rax mov rax , rdi lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx and rdx , rsi mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , num mov rdi , rax mov rax , rdi lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cqo shr rdx , hexvar add rax , rdx and eax , hexvar sub rax , rdx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdi lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx or rdx , rsi mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] movzx eax , al neg rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shr al , num movzx eax , al cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] movzx eax , byte ptr [ rbp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax sete al movzx eax , al jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , r8 mov qword ptr [ rsp ] , r9 cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov edi , hexvar call hexvar mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rcx , qword ptr [ rsp ] mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar nop jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num nop mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov ebx , dword ptr [ rax ] jmp hexvar mov ebx , hexvar call hexvar mov dword ptr [ rax ] , ebx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea r9 , [ rip - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp dword ptr [ rbp - num ] , - hexvar je hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
mov dword ptr [ rsp - num ] , edi cmp dword ptr [ rsp - num ] , num js hexvar cmp dword ptr [ rsp - num ] , hexvar jg hexvar mov eax , dword ptr [ rsp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , hexvar ret mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] neg eax mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar test eax , eax jns hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rcx mov edx , r8d mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , num mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , hexvar mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , num mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , hexvar and edx , hexvar mov byte ptr [ rax ] , dl mov eax , num leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] bswap rax pop rbp ret
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop word ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov esi , hexvar lea rdx , [ rip + hexvar ] mov word ptr [ rip + hexvar ] , ax lea rcx , [ rip + hexvar ] mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] movzx eax , sil movzx esi , byte ptr [ rdx + num ] mov byte ptr [ rcx + rax ] , num add rdx , num test sil , sil jne hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + hexvar ] nop dword ptr [ rax + rax ] mov byte ptr [ rax ] , num add rax , num cmp rdx , rax jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop word ptr cs : [ rax + rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar ret mov byte ptr [ rip + hexvar ] , num ret
push r14 push r13 mov r13 , rdi mov rdi , rdx push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar add rbx , qword ptr [ rbp ] xor edx , edx xor edi , edi mov r14 , qword ptr [ rip + hexvar ] mov rsi , rsp mov qword ptr [ rip + hexvar ] , rbx call hexvar mov rbx , qword ptr [ rip + hexvar ] sub rbx , qword ptr [ rbp ] cmp byte ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , r14 je hexvar mov rsi , r13 lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , rax add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rsi ] mov dword ptr [ rdi + num ] , num mov esi , num mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + hexvar ] , eax call hexvar mov edx , dword ptr [ rbp ] sub edx , dword ptr [ rbx + hexvar ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx cmp eax , num je hexvar cmp dword ptr [ rbx + hexvar ] , num sbb eax , eax add rsp , num and eax , num pop rbx pop rbp sub eax , num pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
push r14 mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx mov rax , qword ptr [ rsi ] xor esi , esi mov rbx , rdi mov qword ptr [ rdi ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + num ] , eax mov rax , qword ptr [ rcx ] mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ r8 ] mov dword ptr [ rdi + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbx ] mov eax , dword ptr [ rbp ] sub eax , dword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov eax , hexvar jmp hexvar
push rbx mov ecx , hexvar mov esi , hexvar lea rbx , [ rip + hexvar ] mov rdi , rbx lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , rbx pop rbx ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax + hexvar ] , edi jl hexvar push rbx mov edx , num lea rsi , [ rip + hexvar ] test edi , edi jns hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar pop rbx ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , rax pop rbx xor eax , eax jmp hexvar
push rbx pxor xmm0 , xmm0 mov rbx , rdi add rdi , num mov qword ptr [ rdi + hexvar ] , num movaps xmmword ptr [ rdi - num ] , xmm0 movaps xmmword ptr [ rdi + num ] , xmm0 movaps xmmword ptr [ rdi + hexvar ] , xmm0 call hexvar xor edx , edx mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov eax , dword ptr [ rax + hexvar ] xor edx , edx test eax , eax setne dl mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , edx mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbx mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar movzx eax , byte ptr [ rbx ] and eax , hexvar cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] xor eax , eax test rdx , rdx je hexvar mov edx , dword ptr [ rdx + hexvar ] xor eax , eax test edx , edx setne al pop rbx ret nop word ptr [ rax + rax ] cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rsi + hexvar ] test ecx , ecx je hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test edx , edx jne hexvar mov edi , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rsi + hexvar ] nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop word ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar add rsp , num jmp hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar movsx ecx , dl cmp edi , ecx je hexvar lea r9 , [ rip + hexvar ] movzx edx , dl lea rcx , [ rax + num ] cmp byte ptr [ r9 + rdx ] , num je hexvar jmp hexvar nop dword ptr [ rax ] movzx r8d , r10b add rcx , num cmp byte ptr [ r9 + r8 ] , num jne hexvar mov qword ptr [ rip + hexvar ] , rcx movsx r10d , byte ptr [ rcx ] mov rdx , rcx cmp r10d , edi jne hexvar cmp rdx , rax ja hexvar jmp hexvar nop dword ptr [ rax ] sub rdx , num cmp rdx , rax je hexvar movzx ecx , byte ptr [ rdx - num ] cmp cl , hexvar je hexvar cmp cl , num je hexvar sub edx , eax mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] xor edx , edx mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] lea rdx , [ rax + num ] lea r9 , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov rcx , rdx nop dword ptr [ rax ] movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 jne hexvar lea rdi , [ rcx + num ] add rdx , num mov qword ptr [ rip + hexvar ] , rdi movzx ecx , byte ptr [ rcx ] cmp cl , hexvar mov byte ptr [ rdx - num ] , cl mov rcx , qword ptr [ rip + hexvar ] jne hexvar movzx edi , byte ptr [ rcx ] cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 je hexvar sub edx , eax cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov dword ptr [ rsi ] , edx ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 push rbp mov rbp , rsi push rbx mov ebx , edi call hexvar movsxd rdi , eax mov r12 , rdi call hexvar mov ecx , r12d mov rsi , rbp mov edi , ebx mov rdx , rax pop rbx pop rbp pop r12 jmp hexvar
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
sub rsp , num call hexvar cmp rax , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov dword ptr [ rip + hexvar ] , edi ret
mov ecx , dword ptr [ rsi ] test ecx , ecx je hexvar mov edx , dword ptr [ rsi + num ] test edx , edx je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi add rsp , - hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , ecx test eax , eax je hexvar mov r12 , rsp lea rsi , [ rip + hexvar ] xor eax , eax mov rdi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , r12 mov rdx , rbp mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx call hexvar sub rsp , - hexvar pop rbx pop rbp pop r12 ret nop cmp edx , dword ptr [ rip + hexvar ] jne hexvar cmp ecx , dword ptr [ rip + hexvar ] jne hexvar ret nop dword ptr [ rax ] mov rsi , rdi mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax jmp hexvar
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
push rbp mov edx , num lea rsi , [ rip + hexvar ] push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] call hexvar cmp rax , hexvar je hexvar movzx ebx , al cmp rbx , rax jne hexvar test bl , hexvar jne hexvar mov rax , rbx and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar mov byte ptr [ rbp + hexvar ] , bl lea rsi , [ rbp + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ rbp + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] call hexvar mov byte ptr [ rbp + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret mov rax , rbx and eax , hexvar cmp rax , hexvar je hexvar mov byte ptr [ rbp + hexvar ] , bl add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov r12 , qword ptr [ rax ] call hexvar mov rbx , rax cmp rax , hexvar je hexvar movzx ebp , al cmp rbp , rax jne hexvar test bpl , hexvar jne hexvar mov rax , rbp and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar lea rsi , [ r12 + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ r12 + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ r12 + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop call hexvar mov byte ptr [ r12 + hexvar ] , hexvar pop rbx pop rbp pop r12 ret and ebp , hexvar cmp rbp , hexvar je hexvar mov byte ptr [ r12 + hexvar ] , bl pop rbx pop rbp pop r12 jmp hexvar
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar ret
sub rsp , num call hexvar mov edi , hexvar mov dword ptr [ rax + num ] , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + num ] , rcx mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax ] , rcx mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push r12 mov r12 , rdi push rbp push rbx call hexvar mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] add ebx , num mov rbp , rax mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rcx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , rcx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbp mov esi , hexvar mov edi , num push rbx sub rsp , num call hexvar mov esi , hexvar mov edi , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , rbx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rax ] , rbx lea rax , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , eax mov eax , hexvar mov word ptr [ rbx + hexvar ] , ax add rsp , num mov rax , rbx pop rbx pop rbp ret
push r13 push r12 mov r12d , edx push rbp mov rbp , rdi movzx edi , sil push rbx mov ebx , esi sub rsp , hexvar call hexvar cmp ebx , hexvar je hexvar mov r13d , eax test r12d , r12d jne hexvar and ebx , hexvar cmp ebx , hexvar je hexvar mov esi , r13d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] movdqu xmm0 , xmmword ptr [ rbp ] movdqu xmm1 , xmmword ptr [ rbp + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov byte ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , rsp mov esi , r13d mov qword ptr [ rsp + num ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edi , ebx call hexvar jmp hexvar
push rbx mov esi , num mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx mov edx , num pop rbx mov rdi , rax jmp hexvar
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push r12 push rbp push rbx mov rbx , rdi mov r12 , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov edi , ecx shr edi , num je hexvar movsxd rdi , edi cqo and ecx , num idiv rdi cmp ecx , num je hexvar test ecx , ecx je hexvar cmp ecx , num jne hexvar cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num mov rsi , rax call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] and ecx , num add rcx , rdx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num jmp hexvar nop dword ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp or eax , hexvar mov byte ptr [ r12 + rbp + hexvar ] , al mov rdx , qword ptr [ rbx + hexvar ] jmp hexvar nop word ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] mov byte ptr [ rbx + rdx + hexvar ] , al jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] and ebx , num call hexvar sub eax , ebx pop rbx ret
sub rsp , hexvar mov esi , num mov rdi , rsp call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov word ptr [ rip + hexvar ] , ax ret
lea eax , [ rdi - hexvar ] cmp eax , hexvar ja hexvar mov edi , edi lea rax , [ rip + hexvar ] mov byte ptr [ rax + rdi ] , sil ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
movzx ecx , byte ptr [ rdi + hexvar ] cmp cl , num ja hexvar mov eax , num shl rax , cl test eax , hexvar jne hexvar test al , hexvar jne hexvar test al , num je hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num ret
push rbp lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi lea rdi , [ rip + hexvar ] sub rsp , num call hexvar test eax , eax je hexvar mov ebp , eax mov edx , num cmp eax , num je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rax , [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rax mov qword ptr [ rsp + hexvar ] , num mov rdi , rsp call hexvar xor esi , esi mov rdi , rax call hexvar add rsp , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax jmp hexvar
sub rsp , hexvar movzx eax , word ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsp and ax , hexvar or ax , hexvar mov word ptr [ rsp + hexvar ] , ax call hexvar add rsp , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rdi , qword ptr [ rax + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rdi je hexvar mov rax , qword ptr [ rax ] test rax , rax jne hexvar ret nop word ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov qword ptr [ rsi ] , rcx mov dword ptr [ rdx ] , eax mov eax , num ret xor eax , eax ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
movzx eax , byte ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsi ] mov byte ptr [ rsi + hexvar ] , al mov rax , qword ptr [ rdi + hexvar ] mov r8 , qword ptr [ rdi ] cmp rax , r8 jae hexvar sub rcx , num mov qword ptr [ rsi + hexvar ] , rcx ret nop push r12 sub rax , r8 mov r12 , rsi push rbp sar rax , num mov rbp , rdi push rbx mov rdx , qword ptr [ rsi + num ] mov rbx , rax sub rdx , rcx sar rdx , num cmp eax , edx ja hexvar jb hexvar lea edx , [ rbx + num ] mov rsi , r8 mov rdi , rcx add rdx , rdx call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov rax , qword ptr [ rbp + hexvar ] sub rax , qword ptr [ rbp ] add rax , qword ptr [ r12 ] mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] sub ebx , edx add edx , num mov rdi , rcx movsxd rbx , ebx add rdx , rdx lea rsi , [ r8 + rbx * num ] call hexvar mov rax , qword ptr [ r12 + num ] add rbx , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rbx mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] sub edx , eax mov eax , eax xor esi , esi lea rdi , [ rcx + rax * num + num ] call hexvar mov r8 , qword ptr [ rbp ] mov rcx , qword ptr [ r12 ] jmp hexvar
mov r9 , qword ptr [ rdi ] sub r9 , qword ptr [ rsi ] mov rax , rdi mov r8 , r9 cmp rdi , rsi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] imul rcx , qword ptr [ rax + hexvar ] add rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add r8 , rcx test rax , rax je hexvar cmp rsi , rax je hexvar cmp dword ptr [ rax + hexvar ] , num je hexvar cmp dword ptr [ rsi + hexvar ] , num jne hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] imul rax , qword ptr [ rsi + hexvar ] add rax , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub r9 , rax test rsi , rsi je hexvar cmp rdi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , num je hexvar xor eax , eax ret nop mov qword ptr [ rdx ] , r9 mov eax , num ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , r8 mov eax , num ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
mov edx , esi sub rsp , num movsxd r9 , edi mov esi , num test edi , edi je hexvar mov eax , num mov ecx , edi shl eax , cl sub eax , num movsxd rsi , eax sub rsp , num mov ecx , edx xor r8d , r8d mov edx , num push num mov edi , num call hexvar mov byte ptr [ rax ] , hexvar add rsp , hexvar ret
push rbp movsxd r9 , edi mov rbp , rsi mov edi , num push rbx mov rsi , rdx xor r8d , r8d mov rbx , rdx sub rsp , hexvar push num call hexvar add rsp , hexvar mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar push rbx mov ecx , edx mov ebx , esi movsxd r9 , edi mov edx , num xor r8d , r8d mov esi , num mov edi , num sub rsp , num push num call hexvar mov byte ptr [ rax ] , bl pop rax pop rdx pop rbx ret nop dword ptr [ rax + rax ] mov ecx , edi mov rax , - num mov rsi , qword ptr [ rip + hexvar ] shl rax , cl mov rcx , rax lea rax , [ rsi - num ] sub rax , rcx and rax , rcx test edx , edx je hexvar mov rcx , rax movsxd rdx , edx sub rcx , rsi cmp rcx , rdx ja hexvar mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] ret
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] sub rax , qword ptr [ rdx + hexvar ] ret
push rbx mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + hexvar ] sub rsp , num push qword ptr [ rsp + hexvar ] call hexvar pop rax mov rax , rbx pop rdx pop rbx ret
push r15 mov r15 , r8 push r14 mov r14d , ecx push r13 mov r13 , rdx push r12 mov r12d , edi mov rdi , rsi push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , r9 call hexvar sub rsp , num mov r8 , r15 mov ecx , r14d mov rax , qword ptr [ rip + hexvar ] mov rsi , rbx mov edi , r12d mov rbp , qword ptr [ rax + hexvar ] lea rdx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , r13 push qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movdqu xmm0 , xmmword ptr [ rip + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rbx + hexvar ] , edi lea rdi , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , ecx mov qword ptr [ rbx + hexvar ] , r8 mov qword ptr [ rbx + hexvar ] , r9 mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , esi movups xmmword ptr [ rbx + hexvar ] , xmm0 call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 sub rax , - hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax sub rax , - hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num sub ecx , - hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num ret
mov dword ptr [ rip + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rdi + num ] test eax , eax je hexvar push r13 mov r13 , rdi push r12 xor r12d , r12d push rbp mov rbp , rsi push rbx sub rsp , num nop word ptr [ rax + rax ] mov rdx , qword ptr [ r13 ] mov eax , r12d mov rbx , qword ptr [ rdx + rax * num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] call rbp mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add r12d , num cmp dword ptr [ r13 + num ] , r12d ja hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret ret
push r12 mov r12d , edx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar xor r9d , r9d lea rsi , [ rbx + num ] mov rdx , rbp lea r8 , [ rsp + hexvar ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rsp + hexvar ] cmp qword ptr [ rdx ] , rax jne hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx ] , rcx test r12d , r12d je hexvar cmp qword ptr [ rbx + hexvar ] , rax jae hexvar cmp qword ptr [ rbx + hexvar ] , rax jbe hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rsi , rax lea rdi , [ rbx + hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , rsi sub rsp , num xor r9d , r9d xor r8d , r8d mov rcx , rdx lea rsi , [ rdi + num ] mov rdx , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , rax mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push r13 push r12 push rbp mov rbp , rdi mov edi , hexvar push rbx lea r12 , [ rbp * num ] sub rsp , num call hexvar mov rcx , qword ptr [ rip + hexvar ] movsxd rsi , dword ptr [ rip + hexvar ] xor edx , edx lea r13 , [ rax + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov rbx , rax mov rdi , r13 call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rax , rdx sub rax , rcx cmp r12 , rax ja hexvar mov rdi , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r9 , rdx lea rax , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r9 , rcx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rcx cmp rsi , r9 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdx mov rax , rdx mov rdx , r12 xor esi , esi mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rdi call hexvar mov dword ptr [ rbx + num ] , ebp add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r13 mov rsi , r12 call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov esi , hexvar call hexvar test rax , rax je hexvar add rsp , num add rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , rdi mov edx , hexvar lea rdi , [ rip - hexvar ] call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
xor edx , edx jmp hexvar
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
xor eax , eax cmp qword ptr [ rip + hexvar ] , num setne al ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbx xor esi , esi cmp byte ptr [ rip + hexvar ] , num mov rbx , rdi sete sil call hexvar cmp byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov dword ptr [ rip + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , num add rax , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rbx , rax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rax pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov ebx , edi mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , ebx call hexvar xor edi , edi pop rbx jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , num mov r12 , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ r12 ] cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx xor ebp , ebp cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov ebp , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx mov rdx , r12 lea rdi , [ rip + hexvar ] test al , al jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar sete cl test cl , cl jne hexvar cmp al , hexvar je hexvar add rdx , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rdx ] test al , al je hexvar test ebp , ebp jne hexvar movzx ecx , al cmp byte ptr [ rdi + rcx ] , num setne cl test cl , cl je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test ebp , ebp je hexvar add qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov ebx , edx sub ebx , r12d lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , r12 mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar xor edx , edx test r13d , r13d mov rcx , qword ptr [ rip + hexvar ] sete dl add edx , num mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rcx + hexvar ] , edx jmp hexvar
mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num test edi , edi jne hexvar call hexvar cmp eax , hexvar ja hexvar mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret
mov qword ptr [ rip + hexvar ] , rdi ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdx , rax mov rax , qword ptr [ rdx + hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rax + hexvar ] jne hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rdi call hexvar xor edi , edi add rsp , num jmp hexvar nop ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax lea rdi , [ rax + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov rax , rbx mov qword ptr [ rbx ] , num mov dword ptr [ rbx + hexvar ] , num pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
mov dword ptr [ rip + hexvar ] , edi ret
push r13 mov r13d , edi push r12 mov r12d , esi push rbp mov ebp , edx push rbx mov rbx , rcx sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , r13d mov dword ptr [ rip + hexvar ] , r12d mov dword ptr [ rip + hexvar ] , ebp mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
mov rdx , rsi xor eax , eax lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
push rbx xor esi , esi mov ebx , edi call hexvar mov edi , ebx call hexvar xor esi , esi xor edi , edi mov rdx , rax call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea r12 , [ rsp + hexvar ] mov ebp , esi mov rbx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdi , r12 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , r12 mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp push rbx mov rbx , rdi sub rsp , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num test eax , eax je hexvar add rsp , num pop rbx pop rbp ret nop call hexvar jmp hexvar nop word ptr [ rax + rax ] ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax call hexvar mov rdx , rbp mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar call hexvar mov rbx , rsp mov r12 , rax mov rsi , rax mov rdi , rbx call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 ret
mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov ecx , dword ptr [ rip + hexvar ] mov ebx , num mov ebp , eax shl ebx , cl cmp ebx , eax jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , ebx mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
mov esi , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi test esi , esi jne hexvar mov edi , hexvar call hexvar lea rcx , [ rip + hexvar ] mov edx , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax ] , rcx mov qword ptr [ rax + rdx ] , rbx mov rdi , rbx call hexvar cmp dword ptr [ rip + hexvar ] , eax jge hexvar mov dword ptr [ rip + hexvar ] , eax pop rbx ret nop dword ptr [ rax ] add esi , num mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , esi movsxd rsi , esi shl rsi , num call hexvar movsxd rdx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rdx * num - num ] jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp push rbx sub rsp , num mov rdx , qword ptr [ rip + hexvar ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , num jne hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movzx edx , byte ptr [ rax ] mov rbx , rax add rax , num cmp dl , hexvar je hexvar cmp dl , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar movzx eax , byte ptr [ rbx ] lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num jmp hexvar nop dword ptr [ rax ] xor ebp , ebp xor ebx , ebx test esi , esi mov eax , esi sete dl movzx edx , dl cmovns eax , edx mov esi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] test esi , esi jns hexvar cmp al , hexvar jne hexvar lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] call hexvar add rsp , num movsx esi , bpl mov rdi , rbx pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov rdi , rsp call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] add rsp , hexvar pop rbx ret
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push r12 push rbp mov ebp , edi push rbx mov ebx , esi test edi , edi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , hexvar je hexvar jle hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar pop rbx pop rbp pop r12 ret nop cmp ebx , num jne hexvar pop rbx mov edi , ebp pop rbp pop r12 jmp hexvar mov edi , ebp call hexvar cmp ebx , hexvar je hexvar jg hexvar cmp ebx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov r12 , qword ptr [ rdx ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar
push r13 mov r13d , r8d push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8d , r13d mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
mov esi , num jmp hexvar
xor esi , esi jmp hexvar
push r15 push r14 push r13 mov r13d , esi push r12 push rbp push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] test ecx , ecx je hexvar lea rcx , [ rip + hexvar ] movzx esi , dl cmp byte ptr [ rcx + rsi ] , num jne hexvar nop add rax , num movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num mov r14 , rdx je hexvar mov byte ptr [ rax ] , num mov rsi , qword ptr [ rip + hexvar ] mov r15 , rax movzx edx , byte ptr [ rsi ] mov rax , rsi cmp dl , hexvar je hexvar cmp byte ptr [ rcx + rdx ] , num jne hexvar test ebx , ebx je hexvar xor ebp , ebp mov r12 , rsp nop mov esi , ebx mov rdi , r12 call hexvar test r13d , r13d je hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov byte ptr [ rsp + hexvar ] , num mov edx , eax mov esi , ebx mov rdi , r12 add ebp , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , num je hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor r14d , r14d xor r15d , r15d lea rcx , [ rip + hexvar ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] jmp hexvar nop word ptr [ rax + rax ] movsx esi , r14b mov rdi , r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar and ebp , num je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov r14d , edx jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbx mov rbx , rdi call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , hexvar mov rdi , rsp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , hexvar ret
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx xor edi , edi mov edx , num sub rsp , hexvar mov rbx , rsp mov rsi , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar call hexvar add rsp , hexvar pop rbx ret nop word ptr cs : [ rax + rax ] add rax , num xor edi , edi lea rsi , [ rsp + hexvar ] mov edx , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar sub rsp , num xor r9d , r9d xor ecx , ecx push num mov r8 , rax mov edx , num mov esi , num mov edi , num call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl pop rax pop rdx call hexvar add rsp , hexvar pop rbx ret cmp qword ptr [ rsp + hexvar ] , num jns hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
push rbp lea rax , [ rip + hexvar ] lea rbp , [ rip + hexvar ] mov edx , num push rbx lea rsi , [ rip + hexvar ] sub rsp , num test edi , edi cmove rbp , rax cmp edi , num sbb ebx , ebx xor edi , edi call hexvar and ebx , hexvar mov rdx , rbp add ebx , hexvar mov rdi , rax xor eax , eax mov esi , ebx call hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
sub rsp , num lea rdi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
push r13 push r12 mov r12d , edx push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rdi , rbp je hexvar cmp rax , rdi je hexvar cmp qword ptr [ rip + hexvar ] , rdi je hexvar mov r13 , qword ptr [ rdi ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rbp je hexvar mov r8 , qword ptr [ rbx ] mov r9 , qword ptr [ rbx + hexvar ] test r12d , r12d je hexvar mov edx , dword ptr [ rax + hexvar ] and edx , hexvar cmp edx , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] sub eax , num cmp al , num ja hexvar sub rsp , num mov edx , num xor ecx , ecx mov esi , num push num mov edi , num call hexvar mov byte ptr [ rax ] , r12b pop rax pop rdx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbx call hexvar xor r9d , r9d mov r8 , rax jmp hexvar nop dword ptr [ rax + rax ] test r12d , r12d jne hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rax ] mov edx , num xor edi , edi mov qword ptr [ rsp + num ] , r9 lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r8 call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov r9 , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
sub rsp , num mov esi , num call hexvar add rsp , num cdqe ret
sub rsp , num xor esi , esi call hexvar add rsp , num cdqe ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp push rbx sub rsp , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] add rax , num mov rsi , rsp xor edx , edx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] cmp byte ptr [ rsp + hexvar ] , num lea rsi , [ rdx + hexvar ] je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar
add edi , edi lea rsi , [ rip - hexvar ] jmp hexvar
lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov r12 , rax cmp rax , hexvar jle hexvar call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx mov edx , num mov ebx , edi sub rsp , hexvar test edi , edi je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rcx ] cmp dl , hexvar jne hexvar lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rcx + num ] movzx ecx , dl lea rdi , [ rip + hexvar ] cmp byte ptr [ rdi + rcx ] , num jne hexvar cmp dl , hexvar je hexvar test ebx , ebx lea rax , [ rip + hexvar ] lea rbx , [ rip + hexvar ] mov edx , num cmove rbx , rax lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax test ebx , ebx jne hexvar call hexvar call hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] call hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov edx , num mov esi , hexvar mov rdi , rax mov rbx , rax call hexvar test eax , eax jne hexvar test ebp , ebp jne hexvar call hexvar mov rdi , rbx call hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar add rsp , hexvar pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar cmp byte ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov esi , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rax + hexvar ] call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
xor esi , esi jmp hexvar
mov esi , num jmp hexvar
xor edi , edi sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] cmp rax , rdi je hexvar cmp dword ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov ebp , r12d nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp rbx , rax je hexvar test rbx , rbx je hexvar add ebp , dword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] add ebp , eax mov rax , qword ptr [ rip + hexvar ] cmp rbx , rax jne hexvar call hexvar add ebp , eax cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp ebp , r12d jb hexvar mov eax , ebp pop rbx pop rbp sub eax , r12d pop r12 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add ebp , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov ebp , edi mov rdi , rsi push rbx sub rsp , hexvar lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rsp mov rsi , rbx call hexvar test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsp ] test rsi , rsi je hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , num mov byte ptr [ rax ] , bpl mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov eax , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] sub rbx , rbp cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push r12 mov esi , hexvar mov r12 , rdi push rbp push rbx call hexvar test rax , rax je hexvar mov edi , hexvar mov rbx , rax call hexvar mov rdi , r12 mov rbp , rax call hexvar mov rdx , rbx add rbx , num sub rdx , r12 mov rdi , rbx mov qword ptr [ rbp ] , rax mov byte ptr [ rax + rdx ] , num mov qword ptr [ rbp + hexvar ] , rdx call hexvar mov rdi , rbx mov qword ptr [ rbp + num ] , rax call hexvar pop rbx mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rbp + hexvar ] , rax pop rbp pop r12 ret lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar
mov rcx , qword ptr [ rsi + num ] cmp rcx , rdi jbe hexvar mov rsi , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rcx , rdi je hexvar movzx eax , byte ptr [ rsi + rdi ] cmp al , hexvar je hexvar cmp al , num je hexvar cmp al , hexvar jne hexvar lea rax , [ rdi + num ] cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rdi + num ] cmp dl , num je hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rax , num cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rax ] cmp dl , hexvar je hexvar cmp dl , num je hexvar ret mov rax , rdi ret nop dword ptr [ rax ] mov rax , rcx ret
mov rax , qword ptr [ rsi + num ] cmp rdi , rax jae hexvar mov rcx , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rdi , rax je hexvar movzx edx , byte ptr [ rcx + rdi ] cmp dl , hexvar je hexvar cmp dl , num je hexvar mov rax , rdi ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx mov rbp , rax mov rsi , rax call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
mov qword ptr [ rdi + num ] , num ret
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + num ] mov rdx , rbp sub rdx , qword ptr [ rax ] sub rbx , rdx cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rsp + num ] call hexvar mov eax , dword ptr [ rsp + num ] mov r9 , rbx mov rdx , rbp lea rdi , [ rsp + num ] mov ecx , hexvar lea rsi , [ rip + hexvar ] lea r8d , [ rax + num ] xor eax , eax call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rbx , rax test rsi , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rip + hexvar ] je hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar lea rbp , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax jne hexvar mov edi , hexvar call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov edx , hexvar mov rbx , rax mov rdi , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , rbp call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r9 , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov rbx , rax mov rdi , rax xor eax , eax mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar mov rbp , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax test rbp , rbp je hexvar mov rsi , rbx mov rdi , rbp call hexvar test eax , eax je hexvar mov rdi , rbx xor edx , edx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13 , rax test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , r13 mov rdx , r13 mov rsi , rbx mov edi , r12d call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13 , qword ptr [ rip + hexvar ] mov rbx , rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rax , qword ptr [ rdx ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdx + num ] sub rax , - hexvar cmp qword ptr [ rdx + hexvar ] , rax jne hexvar mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx jne hexvar xor eax , eax ret
mov eax , dword ptr [ rdi + hexvar ] shr eax , num and eax , num ret
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num movsxd rsi , dword ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] xor edx , edx mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx lea rsi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , rbx xor eax , eax mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar lea rdx , [ rip + hexvar ] or byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rax + num ] , rdx mov byte ptr [ rip + hexvar ] , num add rsp , num ret call hexvar mov edi , eax call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar lea rdx , [ rip + hexvar ] mov ecx , hexvar pxor xmm0 , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rdi , rdx xor eax , eax rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 add rsp , num ret
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rdi + hexvar ] , rax pop rbx ret mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num sete al ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rsi , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rsi je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num jne hexvar movzx edx , byte ptr [ rdi ] test dl , num jne hexvar and edx , num mov rax , qword ptr [ rdi + num ] je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx sete al movzx eax , al ret nop cmp qword ptr [ rdi + hexvar ] , num mov eax , num je hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop mov rax , qword ptr [ rdi + hexvar ] lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , num cmp rdx , rcx jne hexvar ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
movzx eax , byte ptr [ rdi ] test al , num je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar or eax , num mov byte ptr [ rdi ] , al ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num jne hexvar and byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar and byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] or eax , hexvar mov byte ptr [ rdi ] , al test al , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rax , rdi test byte ptr [ rax + num ] , num je hexvar mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop mov rax , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push rbx mov rsi , qword ptr [ rip + hexvar ] mov rbx , rdi call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
test byte ptr [ rdi ] , num je hexvar lea rax , [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
push rbx mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov rcx , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rdx + hexvar ] mov esi , dword ptr [ rcx + hexvar ] test esi , hexvar je hexvar test eax , hexvar jne hexvar mov r8d , eax or r8d , hexvar mov dword ptr [ rdx + hexvar ] , r8d test al , num je hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rcx , rax je hexvar and esi , hexvar jne hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx pop rbx mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] test al , num je hexvar mov rdx , qword ptr [ rdi + num ] and eax , hexvar mov byte ptr [ rdi + num ] , al mov eax , dword ptr [ rdx + hexvar ] test al , hexvar je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num jmp hexvar nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num mov rdi , rax add rsp , num jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num jmp hexvar
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num movzx eax , al ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax sete al movzx eax , al ret mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] test rax , rax sete al movzx eax , al ret
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rbx je hexvar mov eax , num add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + num ] mov eax , dword ptr [ rbx + hexvar ] mov edx , eax and edx , num cmp edx , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp rcx , rdx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar test eax , hexvar jne hexvar lea rsi , [ rip + hexvar ] cmp rcx , rsi je hexvar test byte ptr [ rdi ] , num je hexvar cmp rdx , rbx je hexvar mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp byte ptr [ rbp ] , hexvar jne hexvar xor eax , eax cmp byte ptr [ rbp + num ] , hexvar sete al jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar test al , num je hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rbp , qword ptr [ rax + num ] test rbp , rbp je hexvar mov eax , dword ptr [ rax + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test esi , esi je hexvar mov eax , num test cl , hexvar jne hexvar and ecx , hexvar mov eax , num jne hexvar mov rdx , qword ptr [ rdx + hexvar ] jmp hexvar
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rax , qword ptr [ rdi + hexvar ] test byte ptr [ rax ] , num je hexvar mov rcx , qword ptr [ rax + num ] cmp rdx , rcx je hexvar mov eax , dword ptr [ rcx + hexvar ] shr eax , num and eax , num ret nop mov rax , rdi test byte ptr [ rdi + num ] , num je hexvar mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop xor eax , eax ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop mov rcx , qword ptr [ rax + num ] jmp hexvar mov rdi , rax jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
push rbx mov rbx , rdi sub rsp , hexvar test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rbx , rax mov rax , qword ptr [ rsi + num ] test byte ptr [ rsi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rsi call hexvar mov rsi , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
cmp rdi , num jbe hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rax , rdx jae hexvar cmp rbx , qword ptr [ rdi + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp qword ptr [ rip + hexvar ] , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] add rcx , num mov qword ptr [ rdx ] , rbx mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rax + rsi ] , num pop rbx ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] add qword ptr [ rax + rdi * num ] , num ret nop dword ptr [ rax ] sub rax , rdi add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num pop rbx ret nop dword ptr [ rax + rax ] mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rsi + hexvar ] mov esi , hexvar jmp hexvar nop word ptr [ rax + rax ] add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rcx , num add rdx , rsi jmp hexvar mov eax , hexvar jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rdi , rdx jae hexvar cmp rbx , qword ptr [ rdi ] je hexvar mov rax , rdi jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp rcx , qword ptr [ rip + hexvar ] je hexvar mov rax , qword ptr [ rip + hexvar ] add rax , rcx add rcx , num mov qword ptr [ rdx ] , rbx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rdx + rsi ] , num mov byte ptr [ rax ] , num pop rbx ret nop sub rax , rdi mov rdx , rax sar rdx , num add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num pop rbx ret test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov ecx , num xor esi , esi mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , hexvar jmp hexvar add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rax , rcx add rcx , num add rdx , rsi jmp hexvar xor edx , edx xor eax , eax jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor esi , esi jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] test rcx , rcx je hexvar lea rdx , [ rcx + rax * num ] cmp rcx , rdx jae hexvar cmp rdi , qword ptr [ rcx ] je hexvar mov rax , rcx jmp hexvar nop word ptr cs : [ rax + rax ] cmp qword ptr [ rax ] , rdi je hexvar add rax , num cmp rax , rdx jb hexvar xor eax , eax ret nop dword ptr [ rax ] sub rax , rcx sar rax , num mov rdx , qword ptr [ rip + hexvar ] movsx eax , byte ptr [ rdx + rax ] ret nop dword ptr [ rax + rax ] test rax , rax je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop xor eax , eax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
test rsi , rsi je hexvar mov rdi , rsi jmp hexvar nop dword ptr [ rax ] ret
test rdi , rdi je hexvar push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , num je hexvar test byte ptr [ rbx ] , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] cmp qword ptr [ rdx + hexvar ] , rbx jne hexvar mov rbx , rax mov rdi , rbx call hexvar test rax , rax jne hexvar cmp rbx , rbp jne hexvar add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test byte ptr [ rsi ] , num jne hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] cmp qword ptr [ rdx ] , rsi jne hexvar mov qword ptr [ rdx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi ] , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdx ] , rdi je hexvar mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdx ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi ] , rax jmp hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop cmp qword ptr [ rcx ] , rsi jne hexvar mov qword ptr [ rcx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop cmp qword ptr [ rdx ] , num jne hexvar cmp qword ptr [ rcx ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdx ] , rdi mov qword ptr [ rcx ] , rdi add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] push r12 push rbp mov ebp , esi push rbx mov rbx , rdi call hexvar lea rdi , [ rax + num ] call hexvar lea rcx , [ rbx + num ] mov r12 , rax movzx eax , byte ptr [ rbx ] mov rdx , r12 test al , al je hexvar lea rdi , [ rip + hexvar ] nop movzx eax , byte ptr [ rdi + rax ] add rdx , num add rcx , num mov byte ptr [ rdx - num ] , al movzx eax , byte ptr [ rcx - num ] test al , al jne hexvar mov byte ptr [ rdx ] , num mov esi , ebp mov rdi , r12 call hexvar mov rdi , r12 mov rbx , rax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
lea rdi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rax call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rdx , [ rbx + rcx ] not rcx and rdx , rcx mov rcx , qword ptr [ rip + hexvar ] mov rdi , rdx mov qword ptr [ rip + hexvar ] , rdx mov rbx , rcx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdx , rcx mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax jmp hexvar
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test edx , edx jle hexvar lea ecx , [ rdx - num ] movsxd rdx , edx movsxd rax , ecx lea rdx , [ rdi + rdx - num ] mov ecx , ecx add rax , rdi sub rdx , rcx nop word ptr [ rax + rax ] mov byte ptr [ rax ] , sil sub rax , num shr rsi , num cmp rax , rdx jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r12 mov r12 , rdi push rbp push rbx mov rbp , qword ptr [ rax ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] xor esi , esi mov edi , ebx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp je hexvar mov esi , dword ptr [ rbp + hexvar ] mov rdi , r12 call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , ebx call hexvar jmp hexvar nop dword ptr [ rax ] add ebx , num shr eax , num test al , num je hexvar jmp hexvar nop dword ptr [ rax + rax ] pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea r9 , [ rsp + num ] mov r8 , r14 mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rbp + hexvar ] call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar push rbx mov rbx , rdx mov rdi , qword ptr [ rax ] mov edx , dword ptr [ rdx ] call hexvar test eax , eax je hexvar mov dword ptr [ rbx + num ] , num pop rbx ret nop ret
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar sub rsp , hexvar mov r9 , qword ptr [ rax ] test r9 , r9 je hexvar mov rdx , qword ptr [ r9 + num ] mov rax , qword ptr [ r9 ] mov edi , dword ptr [ rdx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax test edi , edi je hexvar mov rax , r9 mov r8 , rsp jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rdi mov r8 , qword ptr [ rax + hexvar ] mov qword ptr [ rcx + hexvar ] , r8 mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test ecx , ecx je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rcx + hexvar ] , num jne hexvar mov qword ptr [ rcx + hexvar ] , rdi jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ r9 + num ] , rdx add rsp , hexvar ret nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num ret nop dword ptr [ rax + rax ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rdx ] mov dword ptr [ rsi + hexvar ] , eax add dword ptr [ rdx ] , num ret
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar mov eax , dword ptr [ rdi + hexvar ] ret xor eax , eax ret
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
test rdx , rdx jne hexvar ret nop word ptr cs : [ rax + rax ] push rbp mov rbp , rdi push rbx mov rbx , rdx sub rsp , num mov rdi , qword ptr [ rdi ] call hexvar add qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
sub rsp , hexvar push num push r9 mov r9 , rcx mov rcx , rdx mov edx , esi push r8 xor esi , esi xor r8d , r8d call hexvar add rsp , hexvar ret
push r15 mov r15d , r8d push r14 mov r14d , edx push r13 mov r13d , esi push r12 mov r12 , rdi push rbp mov ebp , r9d push rbx mov rbx , rcx sub rsp , num cmp byte ptr [ rcx + hexvar ] , hexvar ja hexvar movzx eax , byte ptr [ rcx + hexvar ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop xor r8d , r8d xor ecx , ecx mov r9 , qword ptr [ rbx + hexvar ] sub rsp , num mov edx , r14d mov esi , r13d mov rdi , r12 push num push rbp push r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov r8 , qword ptr [ rcx + num ] mov rcx , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rcx ] mov r9 , qword ptr [ rcx + hexvar ] xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rcx call hexvar mov byte ptr [ rbx + hexvar ] , num xor r8d , r8d mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov r9 , qword ptr [ rbx + hexvar ] xor r8d , r8d mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar xor r9d , r9d xor r8d , r8d mov rcx , rax jmp hexvar nop word ptr cs : [ rax + rax ] xor r8d , r8d jmp hexvar
sub rsp , hexvar push num mov eax , dword ptr [ rsp + hexvar ] push rax push r9 mov r9 , r8 xor r8d , r8d call hexvar add rsp , hexvar ret
mov rdx , rdi mov rax , - num cmp rsi , num je hexvar ret nop dword ptr [ rax ] cmp dword ptr [ rip + hexvar ] , num jne hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al cmp eax , num sbb rax , rax and eax , hexvar sub rax , num ret
cmp dword ptr [ rip + hexvar ] , num push rbx mov rbx , rsi jne hexvar mov eax , hexvar cmp edi , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rbx ] , rax mov rax , - num pop rbx ret nop word ptr cs : [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rbx ] , rax mov rax , - num pop rbx ret
cmp dword ptr [ rip + hexvar ] , num mov rax , rdi jne hexvar cmp rsi , num jne hexvar mov rsi , rax mov ecx , num lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al cmp eax , num sbb eax , eax and eax , hexvar sub eax , num ret nop dword ptr [ rax ] mov eax , hexvar ret
cmp dword ptr [ rip + hexvar ] , num je hexvar sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , num shr eax , num ret nop dword ptr [ rax ] mov eax , num ret
push rbp push rbx lea rbx , [ rip + hexvar ] sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] shr eax , num mov edi , dword ptr [ rbx + rax * num ] test edi , edi jne hexvar movabs rcx , hexvar lea rax , [ rsp + rax * num + num ] lea rdi , [ rsp + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rbp shr eax , num mov edi , edx mov dword ptr [ rbx + rax * num ] , edx mov esi , dword ptr [ rip + hexvar ] neg esi movsxd rsi , esi call hexvar movsxd rsi , dword ptr [ rip + hexvar ] mov edi , dword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx pop rbp ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] shr eax , hexvar ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar ret nop dword ptr [ rax + rax ] cmp dword ptr [ rdi + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] je hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , hexvar mov dword ptr [ rdi + hexvar ] , eax mov qword ptr [ rdi + hexvar ] , num ret nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rdi + hexvar ] , hexvar jne hexvar test byte ptr [ rdi ] , hexvar je hexvar mov dword ptr [ rdi + hexvar ] , hexvar ret test eax , eax je hexvar movzx eax , byte ptr [ rdi ] test al , hexvar je hexvar test al , num setne al movzx eax , al add eax , hexvar mov dword ptr [ rdi + hexvar ] , eax jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rdi + hexvar ] , hexvar jmp hexvar push rdx mov esi , hexvar lea rdx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num call hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , rsi ret
xor eax , eax cmp byte ptr [ rdi ] , hexvar jne hexvar push rbx cmp byte ptr [ rdi + num ] , hexvar mov rbx , rdi jne hexvar cmp byte ptr [ rdi + num ] , hexvar jne hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num test cl , cl jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar pop rbx ret ret nop dword ptr [ rax ] mov rdi , rbx call hexvar test rax , rax je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret
push r15 lea rax , [ rip + hexvar ] xor r15d , r15d push r14 mov r14d , edx xor edx , edx push r13 push r12 mov r12 , rdi push rbp mov ebp , esi push rbx lea rbx , [ rip + hexvar ] sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , hexvar lea r13 , [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] test ebp , ebp jne hexvar test r14d , r14d je hexvar mov edx , r15d lea rsi , [ rip + hexvar ] lea rdx , [ rdx + rdx * num ] test byte ptr [ rsi + rdx * num ] , num je hexvar mov rdx , r13 mov rsi , rax mov rdi , r12 call hexvar add r15d , num add rbx , hexvar cmp r15d , hexvar je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov rcx , qword ptr [ rbx ] mov r8d , dword ptr [ rbx + num ] cmp byte ptr [ rcx ] , hexvar jne hexvar test ebp , ebp je hexvar add rcx , num sub r8d , num jmp hexvar test ebp , ebp je hexvar lea rbx , [ rip + hexvar ] mov r8d , num lea rbp , [ rsp + hexvar ] lea r13 , [ rbx + hexvar ] lea rcx , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + num ] mov rcx , qword ptr [ rbx ] add rbx , hexvar mov rdx , rbp mov rsi , rax mov rdi , r12 call hexvar cmp rbx , r13 jne hexvar mov byte ptr [ rax ] , num mov rdi , r12 lea rdx , [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbx mov rbx , rdi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdi ] cmp al , hexvar je hexvar cmp al , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rdi mov edx , num xor edi , edi mov rsi , rbx mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + num ] call hexvar test rax , rax je hexvar lea rdx , [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , num sub rax , rdx movabs rdx , hexvar sar rax , num imul rax , rdx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx ret nop dword ptr [ rax ] add rax , num mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rbx ] , num mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , num mov byte ptr [ rbx + hexvar ] , hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r13 mov r13 , rdx push r12 mov r12 , rdi push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] mov byte ptr [ rbx ] , al call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rdx , rbx jae hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov byte ptr [ rbx ] , num test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdx ] mov byte ptr [ r13 ] , dl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , num lea rdx , [ rip + hexvar ] sub rax , rdx mov byte ptr [ rbp + hexvar ] , num movabs rdx , hexvar sar rax , num imul rax , rdx mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] lea rbx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] seta al sbb al , num xor r13d , r13d test al , al jne hexvar jmp hexvar nop dword ptr [ rax ] add rbx , hexvar mov rdi , qword ptr [ rbx - hexvar ] add r13d , num test rdi , rdi je hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ r13 + r13 * num ] mov byte ptr [ rbp + hexvar ] , num mov qword ptr [ rbp ] , num lea rdx , [ rax + rdx * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rbp + num ] , num movzx eax , word ptr [ rax + rdx * num + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov eax , num jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar nop mov rdi , rbp call hexvar mov eax , num jmp hexvar
push r13 mov rax , rdi push r12 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp byte ptr [ rdi ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rsi , rbx mov rdi , rax call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov rax , qword ptr [ rsp + num ] lea rdi , [ rsp + num ] mov r12 , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdi , qword ptr [ rsp + num ] mov r13d , eax call hexvar mov rbp , rax test rax , rax je hexvar mov rdi , rax call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , r13b mov qword ptr [ rip + hexvar ] , r12 add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbp call hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax js hexvar mov edx , dword ptr [ rip + hexvar ] cmp rax , rdx jae hexvar lea rdx , [ rax + rax * num ] lea rax , [ rip + hexvar ] lea rax , [ rax + rdx * num ] test byte ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rdx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
xor ecx , ecx jmp hexvar
cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov eax , dword ptr [ rdi + hexvar ] shr eax , num setne al movzx eax , al add eax , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num cmp dword ptr [ rip + hexvar ] , num jne hexvar mov r8 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ r8 ] mov rcx , qword ptr [ r8 + num ] cmp rcx , rax ja hexvar jmp hexvar nop dword ptr [ rax ] add rax , hexvar cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rax + hexvar ] test dl , num je hexvar mov qword ptr [ rip + hexvar ] , rax mov rdi , rax jmp hexvar nop movzx edx , byte ptr [ rdi + hexvar ] mov rdi , rsi and edx , num je hexvar lea rsi , [ rdi + hexvar ] cmp rcx , rsi ja hexvar lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rsi cmp rax , qword ptr [ r8 ] je hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov dword ptr [ rip + hexvar ] , num test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov eax , num add rsp , num ret nop dword ptr [ rax ] mov rsi , rdi jmp hexvar nop dword ptr [ rax ] cmp rsi , qword ptr [ r8 + num ] jne hexvar mov qword ptr [ rip + hexvar ] , rdx mov eax , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar movzx eax , byte ptr [ rsi + hexvar ] cmp al , num jbe hexvar cmp al , num je hexvar cmp al , num je hexvar mov ebx , dword ptr [ rip + hexvar ] test ebx , ebx jne hexvar cmp qword ptr [ rip + hexvar ] , rdi je hexvar movsxd rcx , dword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov ebx , num or byte ptr [ rax + rcx * num + hexvar ] , hexvar and qword ptr [ rax + rcx * num + hexvar ] , rdx add rsp , hexvar mov eax , ebx pop rbx ret nop dword ptr [ rax ] movsxd rdx , dword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov ebx , num or byte ptr [ rax + rdx * num + hexvar ] , hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar movabs rdx , hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rdx jne hexvar btc rax , hexvar add rax , - hexvar mov qword ptr [ rsi + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] xor ebx , ebx test rcx , rcx mov edx , num mov qword ptr [ rsp + num ] , rcx lea rsi , [ rip + hexvar ] je hexvar xor edi , edi call hexvar mov rcx , qword ptr [ rsp + num ] mov rdi , rax xor eax , eax mov rsi , rcx call hexvar add rsp , hexvar mov eax , ebx pop rbx ret nop dword ptr [ rax ] test rcx , rcx mov qword ptr [ rsp + num ] , rcx je hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num cmp dword ptr [ rip + hexvar ] , num jne hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push r12 xor edx , edx push rbp push rbx mov rbx , rdi sub rsp , hexvar mov word ptr [ rdi + hexvar ] , dx mov dword ptr [ rsp + num ] , hexvar neg dword ptr [ rip + hexvar ] cmp esi , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp esi , num je hexvar mov edx , num mov rsi , rbx xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , eax neg edx mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] lea rsi , [ rsp + hexvar ] lea rdi , [ rsp + num ] xor edx , edx mov dword ptr [ rsp + hexvar ] , num mov r12 , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar mov edx , num mov rsi , rbx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movsxd rdx , dword ptr [ rsp + hexvar ] mov rdi , rbp sub rax , rbp add rax , rdx add rax , r12 mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rbx + hexvar ] lea edx , [ rax - num ] cmp dl , num jbe hexvar cmp al , num ja hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi movzx ebp , byte ptr [ rax ] mov byte ptr [ rax ] , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bpl jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov eax , dword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret
mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , num test byte ptr [ rdx + hexvar ] , hexvar jne hexvar mov edx , dword ptr [ rdx + num ] test edx , edx lea eax , [ rdx + num ] cmovns eax , edx sar eax , num ret
push r13 mov r13 , rcx mov ecx , r8d push r12 mov r12d , esi xor esi , esi push rbp mov rbp , rdi push rbx mov ebx , edx mov edi , ebx sub rsp , num mov edx , dword ptr [ rip + hexvar ] call hexvar add rsp , num mov rcx , r13 mov edx , ebx mov esi , r12d pop rbx mov rdi , rbp mov r9d , eax pop rbp xor r8d , r8d pop r12 pop r13 jmp hexvar
movsxd rcx , esi movsxd rdx , edi lea rax , [ rip + hexvar ] lea r9 , [ rcx + hexvar ] lea r8 , [ rdx + hexvar ] mov r10 , qword ptr [ rax + r9 * num + num ] mov r11 , qword ptr [ rax + r8 * num + num ] mov qword ptr [ rax + r9 * num + num ] , r11 lea r9 , [ rcx + hexvar ] add rcx , hexvar mov qword ptr [ rax + r8 * num + num ] , r10 lea r8 , [ rdx + hexvar ] mov r10 , qword ptr [ rax + r9 * num ] add rdx , hexvar mov r11 , qword ptr [ rax + r8 * num ] mov qword ptr [ rax + r9 * num ] , r11 mov r9d , dword ptr [ rax + rdx * num + hexvar ] mov qword ptr [ rax + r8 * num ] , r10 mov r8d , dword ptr [ rax + rcx * num + hexvar ] mov dword ptr [ rax + rcx * num + hexvar ] , r9d mov dword ptr [ rax + rdx * num + hexvar ] , r8d mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , edi je hexvar cmp edx , esi je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + num ] cmp edx , edi je hexvar cmp edx , esi je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + num ] cmp edx , edi je hexvar cmp edx , esi je hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , esi jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + num ] , esi ret nop dword ptr [ rax ] mov dword ptr [ rax + num ] , esi jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , edi jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + num ] , edi jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + num ] , edi ret
mov eax , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp rax , qword ptr [ rbx + hexvar ] je hexvar lea eax , [ rdx - hexvar ] lea ecx , [ rdx - hexvar ] cmp eax , num setbe dil xor esi , esi cmp ecx , hexvar ja hexvar movabs rsi , hexvar shr rsi , cl and esi , num sub edx , hexvar pop rbx cmp edx , num setbe al or eax , edi or eax , esi xor eax , num movzx eax , al ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar test byte ptr [ rax + hexvar ] , hexvar je hexvar test byte ptr [ rbx ] , num je hexvar xor eax , eax pop rbx ret cmp edx , num jne hexvar jmp hexvar
push rbx mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov rdx , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rdx + num ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp dl , num sbb rax , rax add rsp , num and rax , hexvar add rax , hexvar ret nop dword ptr [ rax ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar cmp dword ptr [ rip + hexvar ] , hexvar mov eax , hexvar mov edx , num cmovne rax , rdx add rsp , num ret nop test dl , dl jne hexvar mov eax , hexvar add rsp , num ret nop test dl , dl jne hexvar mov eax , hexvar add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov eax , hexvar add rsp , num ret nop dword ptr [ rax ] cmp dword ptr [ rip + hexvar ] , num jne hexvar mov eax , hexvar add rsp , num ret nop dword ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , num jne hexvar mov eax , num add rsp , num ret nop dword ptr [ rax + rax ] mov eax , num add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r12 lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] push rbp push rbx lea rbx , [ rip + hexvar ] sub rsp , hexvar test edi , edi cmove rbx , rax lea rax , [ rip + hexvar ] cmovne rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov r12 , rax movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num jne hexvar lea rdi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] mov ecx , num lea rdi , [ rip + hexvar ] movsx ebp , al mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov dword ptr [ r12 ] , num mov edi , ebp call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov dword ptr [ r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov dword ptr [ r12 ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov dword ptr [ rip + hexvar ] , edi ret
mov dword ptr [ rip + hexvar ] , edi ret
xor esi , esi jmp hexvar
push rbp push rbx sub rsp , num movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , edi and eax , hexvar cmp edi , num je hexvar or eax , hexvar mov byte ptr [ rip + hexvar ] , al test edi , edi jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar test esi , esi jne hexvar lea rbp , [ rip - hexvar ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] test rbx , rbx cmove rbx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] or eax , hexvar mov byte ptr [ rip + hexvar ] , al test byte ptr [ rip + hexvar ] , num jne hexvar test esi , esi je hexvar lea rbp , [ rip - hexvar ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] test rbx , rbx cmove rbx , qword ptr [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call rbp mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rbp , [ rip - hexvar ] jmp hexvar nop dword ptr [ rax ] lea rbp , [ rip - hexvar ] jmp hexvar
lea eax , [ rdi - hexvar ] sub rsp , num cmp eax , hexvar ja hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] cmp edi , hexvar jbe hexvar cmp edi , hexvar je hexvar ja hexvar cmp edi , hexvar je hexvar cmp edi , hexvar jne hexvar mov edx , num mov eax , num jmp hexvar nop dword ptr [ rax ] cmp edi , hexvar je hexvar jb hexvar lea eax , [ rdi - hexvar ] cmp eax , num ja hexvar mov edx , num mov eax , num nop dword ptr [ rax + rax ] lea rcx , [ rip + hexvar ] cmp byte ptr [ rcx + rdx + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax ] cmp edi , hexvar jae hexvar cmp edi , hexvar je hexvar jbe hexvar cmp edi , hexvar je hexvar cmp edi , hexvar jne hexvar mov edx , num mov eax , num jmp hexvar nop cmp edi , hexvar jne hexvar mov edx , num mov eax , num jmp hexvar nop dword ptr [ rax + rax ] mov edx , num mov eax , num jmp hexvar nop mov edx , num mov eax , num jmp hexvar nop movzx esi , byte ptr [ rip + hexvar ] mov eax , edi and eax , esi test al , hexvar jne hexvar mov eax , num lea rcx , [ rip + hexvar ] mov edx , num test sil , sil jne hexvar nop dword ptr [ rax ] add dword ptr [ rip + hexvar ] , num xor esi , esi or edi , esi mov byte ptr [ rcx + rdx + hexvar ] , dil add rsp , num ret nop dword ptr [ rax + rax ] xor edx , edx mov eax , num jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar cmp esi , num je hexvar jle hexvar cmp esi , num je hexvar cmp esi , num jne hexvar xor edx , edx mov rax , - num cmp dword ptr [ rip + hexvar ] , num mov rsi , rdi je hexvar nop word ptr [ rax + rax ] movabs rcx , hexvar test rdi , rcx je hexvar and rax , rsi mov rbx , rax mov rax , rdx and rax , rsi je hexvar cmp rax , rdx jne hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop cmp esi , num jne hexvar cmp dword ptr [ rip + hexvar ] , num mov rdx , - hexvar mov eax , hexvar mov rsi , rdi jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar movabs rcx , hexvar test rdi , rcx jne hexvar btc rdi , hexvar lea rsi , [ rdi - hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov rbp , rsp lea r12 , [ rsp + hexvar ] mov rdi , rbp call hexvar mov rsi , rbx mov rdi , r12 call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] movabs rdx , hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , - hexvar mov eax , hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , num ret
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] jmp hexvar
mov rdi , rsi jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push r13 mov ecx , num mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov r12 , qword ptr [ rsi ] lea rsi , [ rip + hexvar ] mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta bl sbb bl , num movsx ebx , bl test ebx , ebx jne hexvar mov rdi , r12 call hexvar lea r8 , [ rip + hexvar ] mov ecx , num lea rdi , [ r12 + rax - num ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor edx , edx mov rsi , r8 xor eax , eax call hexvar mov rdi , r13 mov rsi , rax mov r12 , rax call hexvar test rax , rax je hexvar mov ebx , dword ptr [ rax + hexvar ] movabs rdx , hexvar mov rax , rdx mul qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + hexvar ] mov rbp , qword ptr [ rax + hexvar ] shr rdx , num lea edi , [ rdx - num ] test rbp , rbp je hexvar mov rax , qword ptr [ r13 + num ] lea rsi , [ rbp + num ] movsxd rdi , edi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r13 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] call qword ptr [ rax + hexvar ] add rsp , num mov rdi , r12 pop rbx pop rbp pop r12 pop r13 jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp xor esi , esi push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov ebp , dword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar add rsp , num mov esi , ebp mov rdi , rbx pop rbx pop rbp jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rsi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov edi , num mov dword ptr [ rax + hexvar ] , num call hexvar mov byte ptr [ rax ] , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r13 mov r13 , rsi push r12 push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdx , qword ptr [ r12 + num ] mov rbx , rax test rdx , rdx je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rdx ] movups xmmword ptr [ rax ] , xmm0 movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r13 call hexvar mov rdi , rbp mov rbx , rax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdi , r13 movzx ebx , byte ptr [ rax + hexvar ] call hexvar mov rdi , rbp and ebx , num mov r12d , ebx movzx ebx , byte ptr [ rax + hexvar ] call hexvar and ebx , hexvar or ebx , r12d mov byte ptr [ rax + hexvar ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdx , qword ptr [ r12 + num ] jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num ret
mov edi , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov edx , esi shr edx , num test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar cmp dword ptr [ rax + num ] , edi jne hexvar cmp dword ptr [ rax + hexvar ] , edx jne hexvar mov ecx , esi mov edx , num shl rdx , cl test qword ptr [ rax + hexvar ] , rdx setne al movzx eax , al ret nop ret xor eax , eax ret
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , qword ptr [ rip + hexvar ] movsx esi , byte ptr [ rbp ] cmp sil , hexvar jne hexvar lea rax , [ rbp + num ] mov qword ptr [ rip + hexvar ] , rax movsx esi , byte ptr [ rbp + num ] mov rbp , rax mov r14 , rbp lea rbx , [ rip + hexvar ] cmp sil , hexvar jne hexvar jmp hexvar nop dword ptr [ rax ] add r14 , num movsx esi , byte ptr [ r14 ] mov rdi , rbx call hexvar test rax , rax je hexvar cmp r14 , rbp je hexvar mov rbx , r14 sub rbx , rbp lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar mov edx , dword ptr [ rip + hexvar ] mov r12 , rax test edx , edx jne hexvar jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rax + num ] , hexvar jne hexvar mov rdi , r12 call hexvar mov rbp , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax ] call hexvar lea edi , [ rbp + rax - num ] mov rbp , rbx movsxd rdi , edi sub rbp , r12 call hexvar movsxd rbp , ebp mov rsi , r12 mov rdx , rbp mov rdi , rax mov r13 , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdi , [ r13 + rbp ] mov rsi , qword ptr [ rax ] call hexvar lea rsi , [ rbx + num ] mov rdi , rax call hexvar mov rdi , r12 mov r12 , r13 call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov esi , hexvar mov rdi , r12 call hexvar mov rbx , rax test rax , rax jne hexvar mov qword ptr [ rip + hexvar ] , r14 cmp byte ptr [ r14 ] , hexvar jne hexvar add r14 , num mov qword ptr [ rip + hexvar ] , r14 add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 ret lea rdi , [ rsp + hexvar ] call hexvar mov r14 , qword ptr [ rip + hexvar ] mov r12 , rax test rax , rax jne hexvar call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r12d , r12d call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar jmp hexvar
mov rcx , qword ptr [ rsi + hexvar ] xor eax , eax mov edi , dword ptr [ rcx + hexvar ] cmp dword ptr [ rdx + num ] , edi je hexvar ret nop word ptr [ rax + rax ] mov rsi , qword ptr [ rdx ] mov rdi , qword ptr [ rcx + hexvar ] mov eax , num cmp rsi , rdi je hexvar test rdi , rdi je hexvar test rsi , rsi je hexvar sub rsp , num call hexvar test eax , eax sete al add rsp , num movzx eax , al ret nop dword ptr [ rax ] xor eax , eax ret
push rbx mov ebx , edi nop dword ptr [ rax + rax ] call hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rcx , qword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , num je hexvar movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ebx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar pop rbx jmp hexvar nop lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] xor edi , edi call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
sub rsp , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test edi , edi jne hexvar lea rsi , [ rip - hexvar ] xor edi , edi jmp hexvar nop dword ptr [ rax ] xor edi , edi jmp hexvar
xor eax , eax cmp qword ptr [ rdi + hexvar ] , num setne al ret
push rbx mov ebx , esi call hexvar mov byte ptr [ rax + hexvar ] , bl pop rbx ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx ] , - hexvar mov dword ptr [ rbx + num ] , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , word ptr [ rsi ] cmp ecx , edi jg hexvar movsxd r8 , ecx lea r9 , [ rip + hexvar ] sub edi , ecx and edx , dword ptr [ r9 + r8 * num ] mov ecx , edi lea r8d , [ rax - num ] mov eax , edx mov dword ptr [ rip + hexvar ] , r8d shl eax , cl test r8d , r8d je hexvar lea rdx , [ rsi - num ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , word ptr [ rsi - num ] sub ecx , edi movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar edx , cl and edx , dword ptr [ r9 + rdi * num ] or eax , edx ret sub ecx , edi movzx eax , dx lea rdx , [ rip + hexvar ] movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar eax , cl and eax , dword ptr [ rdx + rdi * num ] ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , qword ptr [ rax ] xor eax , eax call hexvar mov edi , num call hexvar
mov rdx , qword ptr [ rdi + num ] xor eax , eax test rdx , rdx je hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rdx ] sub rcx , rdx mov rdx , qword ptr [ rdx + num ] add rax , rcx test rdx , rdx jne hexvar ret nop dword ptr [ rax + rax ] ret
mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar nop dword ptr [ rax ] cmp rsi , rax jbe hexvar cmp qword ptr [ rax ] , rsi jae hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar xor eax , eax ret nop word ptr cs : [ rax + rax ] mov eax , num ret ret
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
or byte ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 mov qword ptr [ rdi + hexvar ] , r9 jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar nop word ptr [ rax + rax ] mov ebx , dword ptr [ rbp + num ] sub ebx , num js hexvar movsxd rbx , ebx nop dword ptr [ rax + rax ] call qword ptr [ rbp + rbx * num + hexvar ] sub rbx , num test ebx , ebx jns hexvar mov rbp , qword ptr [ rbp ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar
lea rdx , [ rip + hexvar ] mov rax , rsi cmp rsi , rdx je hexvar test byte ptr [ rsi + hexvar ] , hexvar jne hexvar sub rdx , hexvar cmp rsi , rdx jne hexvar ret nop word ptr [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] add qword ptr [ rip + hexvar ] , rsi mov rdx , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax ] jmp hexvar
push rbp mov rbp , rsi xor eax , eax push rbx mov rbx , rdx mov rdx , rdi lea rdi , [ rip + hexvar ] sub rsp , num mov esi , dword ptr [ rip + hexvar ] call hexvar mov edi , dword ptr [ rip + hexvar ] mov rsi , rbp call hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rsi , rbx call hexvar add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar jne hexvar sub rax , hexvar cmp rsi , rax je hexvar push rbp push rbx mov rbx , rsi sub rsp , num mov rdi , qword ptr [ rsi ] mov rbp , qword ptr [ rsi + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , eax jge hexvar mov dword ptr [ rip + hexvar ] , eax add qword ptr [ rip + hexvar ] , rbp mov rax , qword ptr [ rbx + hexvar ] cmp rax , qword ptr [ rip + hexvar ] jbe hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] ret
mov eax , dword ptr [ rsi + hexvar ] test al , num je hexvar mov rdx , qword ptr [ rsi + hexvar ] test al , hexvar je hexvar add qword ptr [ rip + hexvar ] , rdx ret nop word ptr [ rax + rax ] test ah , num jne hexvar add qword ptr [ rip + hexvar ] , rdx ret nop dword ptr [ rax ] add qword ptr [ rip + hexvar ] , rdx ret
push rbp mov rdx , rsi mov ebp , edi lea rsi , [ rip + hexvar ] push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num lea rsi , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rsi , rax mov rbx , rsp xor eax , eax mov rdi , rbx call hexvar mov rdx , rbx mov esi , ebp xor eax , eax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx mov rdx , rdi lea rsi , [ rip + hexvar ] sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num lea rsi , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmovne rsi , rax mov rbx , rsp xor eax , eax mov rdi , rbx call hexvar mov rax , rbx mov ecx , dword ptr [ rax ] add rax , num lea edx , [ rcx - hexvar ] not ecx and edx , ecx and edx , hexvar je hexvar mov ecx , edx shr ecx , hexvar test edx , hexvar cmove edx , ecx lea rcx , [ rax + num ] cmove rax , rcx mov edi , edx add dil , dl sbb rax , num add rsp , hexvar sub rax , rbx pop rbx ret
push rbp mov esi , num push rbx mov rbx , rdi sub rsp , hexvar call hexvar test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp ret nop lea rbp , [ rsp + num ] mov esi , num mov rdi , rbx mov rdx , rbp call hexvar test eax , eax jne hexvar call hexvar cmp eax , hexvar je hexvar mov rdx , rbp mov esi , num mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbx ] call hexvar call hexvar cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , rbx call hexvar mov edx , hexvar mov esi , num mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx ] call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx lea rdx , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
movzx edx , byte ptr [ rdi ] xor eax , eax cmp dl , hexvar je hexvar test dl , dl je hexvar nop cmp dl , hexvar je hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] test dl , dl je hexvar cmp dl , hexvar jne hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] cmp dl , hexvar je hexvar test dl , dl jne hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] movzx edx , byte ptr [ rdi + num ] cmp dl , hexvar je hexvar add rdi , num test dl , dl jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] lea rdx , [ rdi + num ] cmp al , hexvar je hexvar test al , al je hexvar mov rdi , rdx jmp hexvar ret xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp xor edx , edx mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] cmp byte ptr [ rdx ] , num jne hexvar add rsp , hexvar pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax xor eax , eax call hexvar
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar mov rbx , rax lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx je hexvar lea rbp , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num mov rsi , rbp xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar pop rbx ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rax call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
sub rsp , num call hexvar mov edi , num call hexvar
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov r12 , qword ptr [ rax ] lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] bswap rax pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar sub rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rcx + rdx ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , edx lea rdx , [ rip + hexvar ] mov rsi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , hexvar mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , - num mov rdx , rax mov eax , num mov rdi , rdx repne scasb al , byte ptr [ rdi ] mov rax , rcx not rax lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , hexvar mov byte ptr [ rax + num ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num js hexvar call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx edx , byte ptr [ rdx ] movzx edx , dl add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movsx ecx , al mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movsx esi , al mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , esi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov rdi , rcx mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl shr dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] shl rax , num mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al add rax , rcx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] shl eax , num mov ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al or eax , ecx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jae hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov edi , hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov esi , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edi , ecx call rax mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edx , num mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , num mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar lea rdi , [ rip + hexvar ] call hexvar mov edx , hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov eax , num mov ecx , hexvar lea rdx , [ rbp - hexvar ] mov rdi , rdx cld rep stosq qword ptr [ rdi ] , rax mov eax , edi mov edx , ecx mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num mov esi , eax movsxd rax , esi mov rdi , qword ptr [ rbp + rax * num - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov edx , num mov ecx , eax shl rdx , cl mov rax , rdx or rdi , rax mov rdx , rdi movsxd rax , esi mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] lea edi , [ rax + num ] lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar movsd xmm0 , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar test al , al je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rcx , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rsi , rcx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] jmp hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax ] movzx eax , ax cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] movzx eax , ax cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + num ] mov dword ptr [ rax + num ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movzx eax , ax mov edi , eax call hexvar movzx edx , ax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rcx + num ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx eax , ax mov edi , eax call hexvar movzx edx , ax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar call hexvar nop jmp hexvar nop nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov word ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rcx + num ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax sete al leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov byte ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar add eax , num movsxd rbx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - num ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov r12 , rax mov ebx , dword ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov edx , ebx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov qword ptr [ rbp - hexvar ] , r9 mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jge hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar call hexvar nop mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar call hexvar nop mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] sub eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rax , num mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov byte ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] test ax , ax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar movzx eax , byte ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar sete al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , ecx mov r8 , rdi mov ecx , edx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] movzx r8d , al mov eax , dword ptr [ rbp - hexvar ] sar eax , num movzx edi , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx ecx , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx r9d , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx r10d , al mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push rcx mov r8d , r10d mov ecx , edx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp rax , num ja hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar shl dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num add edx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num add eax , edx add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , num xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , num xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shr rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al movzx eax , al leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num sub eax , dword ptr [ rbp - hexvar ] mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add eax , ebx mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al movzx eax , al leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al add eax , edx mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num setne al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx mov edx , num div rcx mov rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - num ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , hexvar jbe hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov eax , dword ptr [ rbp - num ] sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov ecx , hexvar lea rdx , [ rip + hexvar ] mov edi , eax call hexvar test rax , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar test al , al je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , edx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , hexvar setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar setne al movzx eax , al sub edx , eax mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num setne al movzx eax , al sub edx , eax mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov r8 , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx esi , al mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push rdi mov r9 , r8 mov r8d , esi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar test eax , eax jns hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov eax , r9d mov byte ptr [ rbp - hexvar ] , al movzx r8d , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push num push num push num mov r9d , r8d mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar movzx r8d , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num push num push num mov r9d , r8d mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num sub eax , edx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al add eax , edx mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar nop add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rcx , rax mov rax , rcx cmp rdx , rax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , ecx call rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov rax , rdx mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , esi mov esi , ecx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov edi , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , esi mov esi , edi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + num ] jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , qword ptr [ rbp + hexvar ] mov r8 , rdi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar jmp hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num jbe hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num jbe hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num jbe hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] shr al , num movzx ecx , al mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movsxd rdx , ecx lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rdx + rcx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al and eax , hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movsxd rdx , ecx lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rdx + rcx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , ebx add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov esi , hexvar mov edx , num div rsi imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , - num mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdi , rax call hexvar test al , al je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea ebx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov r11 , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] push r9 push r8 push rdi push rbx mov r9 , r11 mov r8d , r10d mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov eax , hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rip + hexvar ] , al mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx add eax , ecx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rcx , rdx mov rdx , rsi mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov byte ptr [ rax ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe cmp rdx , rax cmovle rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov ecx , hexvar mov edx , hexvar lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovle eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] sub rax , num cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar test eax , eax je hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar nop nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp eax , - num jne hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rbp - num ] movzx eax , al mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rip + hexvar ] , hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rbp - num ] movzx eax , al mov dword ptr [ rip + hexvar ] , eax mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num setne al add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax sete al mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - num ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num cmp dword ptr [ rbp - num ] , num setne al leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num setne al add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num setne al add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al jne hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 ja hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx sub rdx , num add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx sub rdx , num add rax , rdx mov byte ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar xor eax , num test al , al je hexvar mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - num ] cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call rcx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] lea rax , [ rdx + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar call hexvar cmp dword ptr [ rbp - num ] , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov esi , num mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jbe hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al je hexvar add dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rsi , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov r8 , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - num ] , al je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar test eax , eax jns hexvar mov edi , num call hexvar mov edi , num call hexvar test eax , eax jns hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rbx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax jns hexvar mov edi , num call hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov edi , num call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rip + hexvar ] , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rip + hexvar ] , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , num call hexvar mov byte ptr [ rbp - num ] , al lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar movzx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] sub dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rax + hexvar ] subsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jbe hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , hexvar cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov esi , num pxor xmm0 , xmm0 mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cdqe imul rax , rdx mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe imul rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , hexvar mov rdi , rax call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdq idiv ecx mov eax , edx test eax , eax jne hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] add eax , edx mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax + num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax leave ret
push rbp mov rbp , rsp mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , num call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movsd qword ptr [ rax + hexvar ] , xmm0 nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp movsd xmm0 , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edi , eax call hexvar test rax , rax js hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 movsd qword ptr [ rip + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 jmp hexvar nop jmp hexvar nop add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] lea ebx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar add eax , ebx add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx movzx eax , byte ptr [ rax + num ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rcx , rax cmp byte ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rbx mov rdx , rax mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cvtsi2sd xmm0 , eax call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar call hexvar movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - num ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov edx , num jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov edx , num jmp hexvar mov edx , num movsd xmm0 , qword ptr [ rbp - hexvar ] mov r8 , rax mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov ecx , hexvar mov edx , hexvar lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rsi , rcx mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx mov edi , num mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar mov ebx , eax movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar cmp ebx , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] sar al , num movsx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al movsx eax , byte ptr [ rbp - hexvar ] and eax , hexvar cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num lea rax , [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , - num mov rdx , rax mov eax , num mov rdi , rdx repne scasb al , byte ptr [ rdi ] mov rax , rcx not rax lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edx , dword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edx , dword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] or eax , num mov ecx , eax mov edx , dword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , ecx nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edx , dword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8 , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8 , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp add rsp , - hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8d , num lea rcx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , num jmp hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp add rsp , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jl hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov edi , eax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cdqe jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar test eax , eax sete al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edi , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov rcx , rbx mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovle eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al movzx eax , al mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + rdx ] mov rdx , qword ptr [ rbp - hexvar ] add rcx , rdx mov edx , eax lea rsi , [ rip + hexvar ] mov rdi , rcx mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov byte ptr [ rax ] , num jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq xmm1 , qword ptr [ rip + hexvar ] xorpd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov word ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rcx mov r8 , rdi mov ecx , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rsi , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rdx , rbx mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9 , rdx mov r8d , num mov ecx , num mov rdx , rdi mov rdi , rax call hexvar add rsp , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rdx , rbx mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] not eax shr eax , hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , num mov r8 , rcx mov rcx , rdx mov edx , num mov rsi , - num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov ebx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov ecx , ebx mov rdx , r12 mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - num ] cvttsd2si rax , xmm0 mov edi , eax call hexvar movsd xmm0 , qword ptr [ rbp - num ] cvttsd2si rax , xmm0 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rbp - num ] subsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si rax , xmm0 mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rax , xmm0 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rsp mov edi , hexvar call hexvar cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar mov ebx , eax call hexvar xor eax , ebx mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , rdx cqo idiv rcx mov rax , rdx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar test eax , eax jns hexvar mov eax , num jmp hexvar movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] shl rax , num jmp hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax add edx , edx add edx , eax mov eax , ecx sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar add dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cvtsi2sd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx edx , al cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num movsd xmm0 , qword ptr [ rbp - num ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , hexvar mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] lea rbx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx add eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub ebx , eax mov eax , ebx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax sete al jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax sete al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rdi , rcx call rax test eax , eax jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne al leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp ebx , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al and eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , ecx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov rsi , rax mov edi , edx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , hexvar cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rax ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax call hexvar mov dword ptr [ rax ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test rax , rax jne hexvar call hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] sub rax , num jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] sub rax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rsi , - num lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar jmp hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num movzx edx , byte ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shl eax , num mov edx , eax movzx eax , byte ptr [ rbp - num ] or eax , edx shl eax , num mov edx , eax movzx eax , byte ptr [ rbp - num ] or eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , hexvar sub edx , eax mov eax , edx mov ecx , eax shr dword ptr [ rbp - num ] , cl mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax sar edx , cl mov eax , edx and dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar sub qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx ] mov rdi , rdx call rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test rax , rax jne hexvar mov edx , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax cmovle eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rsi , [ rcx + rdx ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , num mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , num lea rdx , [ rax + num ] mov rax , rdx shl rax , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] lea rdi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] not eax shr al , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num shl rax , num add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] sub rax , num leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] add rdx , num mov esi , eax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] add rdx , num mov esi , eax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] add rdx , hexvar mov esi , eax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , hexvar mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , hexvar mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea r9 , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov ecx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea r9 , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov ecx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shr al , num movzx eax , al cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] movzx eax , byte ptr [ rbp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax sete al movzx eax , al jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rbp - num ] add rdx , hexvar mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] or eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov r12 , qword ptr [ rax ] lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop word ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov esi , hexvar lea rdx , [ rip + hexvar ] mov word ptr [ rip + hexvar ] , ax lea rcx , [ rip + hexvar ] mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] movzx eax , sil movzx esi , byte ptr [ rdx + num ] mov byte ptr [ rcx + rax ] , num add rdx , num test sil , sil jne hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + hexvar ] nop dword ptr [ rax + rax ] mov byte ptr [ rax ] , num add rax , num cmp rdx , rax jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop word ptr cs : [ rax + rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar ret mov byte ptr [ rip + hexvar ] , num ret
push r14 push r13 mov r13 , rdi mov rdi , rdx push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar add rbx , qword ptr [ rbp ] xor edx , edx xor edi , edi mov r14 , qword ptr [ rip + hexvar ] mov rsi , rsp mov qword ptr [ rip + hexvar ] , rbx call hexvar mov rbx , qword ptr [ rip + hexvar ] sub rbx , qword ptr [ rbp ] cmp byte ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , r14 je hexvar mov rsi , r13 lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , rax add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rsi ] mov dword ptr [ rdi + num ] , num mov esi , num mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + hexvar ] , eax call hexvar mov edx , dword ptr [ rbp ] sub edx , dword ptr [ rbx + hexvar ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx cmp eax , num je hexvar cmp dword ptr [ rbx + hexvar ] , num sbb eax , eax add rsp , num and eax , num pop rbx pop rbp sub eax , num pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
push r14 mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx mov rax , qword ptr [ rsi ] xor esi , esi mov rbx , rdi mov qword ptr [ rdi ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + num ] , eax mov rax , qword ptr [ rcx ] mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ r8 ] mov dword ptr [ rdi + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbx ] mov eax , dword ptr [ rbp ] sub eax , dword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov eax , hexvar jmp hexvar
push rbx mov ecx , hexvar mov esi , hexvar lea rbx , [ rip + hexvar ] mov rdi , rbx lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , rbx pop rbx ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax + hexvar ] , edi jl hexvar push rbx mov edx , num lea rsi , [ rip + hexvar ] test edi , edi jns hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar pop rbx ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , rax pop rbx xor eax , eax jmp hexvar
push rbx pxor xmm0 , xmm0 mov rbx , rdi add rdi , num mov qword ptr [ rdi + hexvar ] , num movaps xmmword ptr [ rdi - num ] , xmm0 movaps xmmword ptr [ rdi + num ] , xmm0 movaps xmmword ptr [ rdi + hexvar ] , xmm0 call hexvar xor edx , edx mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov eax , dword ptr [ rax + hexvar ] xor edx , edx test eax , eax setne dl mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , edx mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbx mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar movzx eax , byte ptr [ rbx ] and eax , hexvar cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] xor eax , eax test rdx , rdx je hexvar mov edx , dword ptr [ rdx + hexvar ] xor eax , eax test edx , edx setne al pop rbx ret nop word ptr [ rax + rax ] cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rsi + hexvar ] test ecx , ecx je hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test edx , edx jne hexvar mov edi , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rsi + hexvar ] nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop word ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar add rsp , num jmp hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar movsx ecx , dl cmp edi , ecx je hexvar lea r9 , [ rip + hexvar ] movzx edx , dl lea rcx , [ rax + num ] cmp byte ptr [ r9 + rdx ] , num je hexvar jmp hexvar nop dword ptr [ rax ] movzx r8d , r10b add rcx , num cmp byte ptr [ r9 + r8 ] , num jne hexvar mov qword ptr [ rip + hexvar ] , rcx movsx r10d , byte ptr [ rcx ] mov rdx , rcx cmp r10d , edi jne hexvar cmp rdx , rax ja hexvar jmp hexvar nop dword ptr [ rax ] sub rdx , num cmp rdx , rax je hexvar movzx ecx , byte ptr [ rdx - num ] cmp cl , hexvar je hexvar cmp cl , num je hexvar sub edx , eax mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] xor edx , edx mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] lea rdx , [ rax + num ] lea r9 , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov rcx , rdx nop dword ptr [ rax ] movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 jne hexvar lea rdi , [ rcx + num ] add rdx , num mov qword ptr [ rip + hexvar ] , rdi movzx ecx , byte ptr [ rcx ] cmp cl , hexvar mov byte ptr [ rdx - num ] , cl mov rcx , qword ptr [ rip + hexvar ] jne hexvar movzx edi , byte ptr [ rcx ] cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 je hexvar sub edx , eax cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov dword ptr [ rsi ] , edx ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 push rbp mov rbp , rsi push rbx mov ebx , edi call hexvar movsxd rdi , eax mov r12 , rdi call hexvar mov ecx , r12d mov rsi , rbp mov edi , ebx mov rdx , rax pop rbx pop rbp pop r12 jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi test al , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret nop xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , num shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
sub rsp , num call hexvar cmp rax , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov dword ptr [ rip + hexvar ] , edi ret
mov ecx , dword ptr [ rsi ] test ecx , ecx je hexvar mov edx , dword ptr [ rsi + num ] test edx , edx je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi add rsp , - hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , ecx test eax , eax je hexvar mov r12 , rsp lea rsi , [ rip + hexvar ] xor eax , eax mov rdi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , r12 mov rdx , rbp mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx call hexvar sub rsp , - hexvar pop rbx pop rbp pop r12 ret nop cmp edx , dword ptr [ rip + hexvar ] jne hexvar cmp ecx , dword ptr [ rip + hexvar ] jne hexvar ret nop dword ptr [ rax ] mov rsi , rdi mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax jmp hexvar
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
push rbp mov edx , num lea rsi , [ rip + hexvar ] push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] call hexvar cmp rax , hexvar je hexvar movzx ebx , al cmp rbx , rax jne hexvar test bl , hexvar jne hexvar mov rax , rbx and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar mov byte ptr [ rbp + hexvar ] , bl lea rsi , [ rbp + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ rbp + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] call hexvar mov byte ptr [ rbp + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret mov rax , rbx and eax , hexvar cmp rax , hexvar je hexvar mov byte ptr [ rbp + hexvar ] , bl add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov r12 , qword ptr [ rax ] call hexvar mov rbx , rax cmp rax , hexvar je hexvar movzx ebp , al cmp rbp , rax jne hexvar test bpl , hexvar jne hexvar mov rax , rbp and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar lea rsi , [ r12 + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ r12 + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ r12 + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop call hexvar mov byte ptr [ r12 + hexvar ] , hexvar pop rbx pop rbp pop r12 ret and ebp , hexvar cmp rbp , hexvar je hexvar mov byte ptr [ r12 + hexvar ] , bl pop rbx pop rbp pop r12 jmp hexvar
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
sub rsp , num call hexvar mov edi , hexvar mov dword ptr [ rax + num ] , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + num ] , rcx mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax ] , rcx mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push r12 mov r12 , rdi push rbp push rbx call hexvar mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] add ebx , num mov rbp , rax mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rcx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , rcx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbp mov esi , hexvar mov edi , num push rbx sub rsp , num call hexvar mov esi , hexvar mov edi , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , rbx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rax ] , rbx lea rax , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , hexvar mov word ptr [ rbx + hexvar ] , ax mov rax , rbx mov dword ptr [ rbx + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12 , rdi movzx edi , sil push rbp mov ebp , edx push rbx mov ebx , esi sub rsp , num call hexvar cmp ebx , hexvar je hexvar mov r13d , eax test ebp , ebp jne hexvar and ebx , hexvar mov esi , r13d mov rdi , r12 cmp ebx , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov edi , ebx call hexvar jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbx mov esi , num mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx mov edx , num pop rbx mov rdi , rax jmp hexvar
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push r12 push rbp push rbx mov rbx , rdi mov r12 , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov edi , ecx shr edi , num je hexvar movsxd rdi , edi cqo and ecx , num idiv rdi cmp ecx , num je hexvar test ecx , ecx je hexvar cmp ecx , num jne hexvar cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num mov rsi , rax call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] and ecx , num add rcx , rdx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num jmp hexvar nop dword ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp or eax , hexvar mov byte ptr [ r12 + rbp + hexvar ] , al mov rdx , qword ptr [ rbx + hexvar ] jmp hexvar nop word ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] mov byte ptr [ rbx + rdx + hexvar ] , al jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] and ebx , num call hexvar sub eax , ebx pop rbx ret
sub rsp , hexvar mov esi , num mov rdi , rsp call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov word ptr [ rip + hexvar ] , ax ret
lea eax , [ rdi - hexvar ] cmp eax , hexvar ja hexvar mov edi , edi lea rax , [ rip + hexvar ] mov byte ptr [ rax + rdi ] , sil ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
movzx ecx , byte ptr [ rdi + hexvar ] cmp cl , num ja hexvar mov eax , num shl rax , cl test eax , hexvar jne hexvar test al , hexvar jne hexvar test al , num je hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num ret
push rbp lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi lea rdi , [ rip + hexvar ] sub rsp , num call hexvar test eax , eax je hexvar mov ebp , eax mov edx , num cmp eax , num je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rax , [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rax mov qword ptr [ rsp + hexvar ] , num mov rdi , rsp call hexvar xor esi , esi mov rdi , rax call hexvar add rsp , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax jmp hexvar
sub rsp , hexvar movzx eax , word ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsp and ax , hexvar or ax , hexvar mov word ptr [ rsp + hexvar ] , ax call hexvar add rsp , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rdi , qword ptr [ rax + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rdi je hexvar mov rax , qword ptr [ rax ] test rax , rax jne hexvar ret nop word ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov qword ptr [ rsi ] , rcx mov dword ptr [ rdx ] , eax mov eax , num ret xor eax , eax ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
movzx eax , byte ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsi ] mov byte ptr [ rsi + hexvar ] , al mov rax , qword ptr [ rdi + hexvar ] mov r8 , qword ptr [ rdi ] cmp rax , r8 jae hexvar sub rcx , num mov qword ptr [ rsi + hexvar ] , rcx ret nop push r12 sub rax , r8 mov r12 , rsi push rbp sar rax , num mov rbp , rdi push rbx mov rdx , qword ptr [ rsi + num ] mov rbx , rax sub rdx , rcx sar rdx , num cmp eax , edx ja hexvar jb hexvar lea edx , [ rbx + num ] mov rsi , r8 mov rdi , rcx add rdx , rdx call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov rax , qword ptr [ rbp + hexvar ] sub rax , qword ptr [ rbp ] add rax , qword ptr [ r12 ] mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] sub ebx , edx add edx , num mov rdi , rcx movsxd rbx , ebx add rdx , rdx lea rsi , [ r8 + rbx * num ] call hexvar mov rax , qword ptr [ r12 + num ] add rbx , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rbx mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] sub edx , eax mov eax , eax xor esi , esi lea rdi , [ rcx + rax * num + num ] call hexvar mov r8 , qword ptr [ rbp ] mov rcx , qword ptr [ r12 ] jmp hexvar
mov r9 , qword ptr [ rdi ] sub r9 , qword ptr [ rsi ] mov rax , rdi mov r8 , r9 cmp rdi , rsi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] imul rcx , qword ptr [ rax + hexvar ] add rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add r8 , rcx test rax , rax je hexvar cmp rsi , rax je hexvar cmp dword ptr [ rax + hexvar ] , num je hexvar cmp dword ptr [ rsi + hexvar ] , num jne hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] imul rax , qword ptr [ rsi + hexvar ] add rax , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub r9 , rax test rsi , rsi je hexvar cmp rdi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , num je hexvar xor eax , eax ret nop mov qword ptr [ rdx ] , r9 mov eax , num ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , r8 mov eax , num ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
sub rsp , hexvar mov ecx , esi movsxd r9 , edi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar ret
push rbp movsxd r9 , edi mov rbp , rsi mov edi , num push rbx mov rsi , rdx xor r8d , r8d mov rbx , rdx sub rsp , hexvar push num call hexvar add rsp , hexvar mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar push rbx mov ecx , edx mov ebx , esi movsxd r9 , edi mov edx , num xor r8d , r8d mov esi , num mov edi , num sub rsp , num push num call hexvar mov byte ptr [ rax ] , bl pop rax pop rdx pop rbx ret nop dword ptr [ rax + rax ] mov ecx , edi mov rax , - num mov rsi , qword ptr [ rip + hexvar ] shl rax , cl mov rcx , rax lea rax , [ rsi - num ] sub rax , rcx and rax , rcx test edx , edx je hexvar mov rcx , rax movsxd rdx , edx sub rcx , rsi cmp rcx , rdx ja hexvar mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] ret
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] sub rax , qword ptr [ rdx + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rsi push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , edi lea rdi , [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , ecx mov qword ptr [ rbx + hexvar ] , r8 mov qword ptr [ rbx + hexvar ] , r9 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , r12 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rax , rbp pop rbx pop rbp pop r12 ret
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 add rax , hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax add rax , hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num add ecx , hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num ret
mov dword ptr [ rip + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rdi + num ] test eax , eax je hexvar push r13 mov r13 , rdi push r12 xor r12d , r12d push rbp mov rbp , rsi push rbx sub rsp , num nop word ptr [ rax + rax ] mov rdx , qword ptr [ r13 ] mov eax , r12d mov rbx , qword ptr [ rdx + rax * num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] call rbp mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add r12d , num cmp dword ptr [ r13 + num ] , r12d ja hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret ret
push r12 mov r12d , edx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar xor r9d , r9d lea rsi , [ rbx + num ] mov rdx , rbp lea r8 , [ rsp + hexvar ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rsp + hexvar ] cmp qword ptr [ rdx ] , rax jne hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx ] , rcx test r12d , r12d je hexvar cmp qword ptr [ rbx + hexvar ] , rax jae hexvar cmp qword ptr [ rbx + hexvar ] , rax jbe hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rsi , rax lea rdi , [ rbx + hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , rsi sub rsp , num xor r9d , r9d xor r8d , r8d mov rcx , rdx lea rsi , [ rdi + num ] mov rdx , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , rax mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push r13 push r12 push rbp mov rbp , rdi mov edi , hexvar push rbx lea r12 , [ rbp * num ] sub rsp , num call hexvar mov rcx , qword ptr [ rip + hexvar ] movsxd rsi , dword ptr [ rip + hexvar ] xor edx , edx lea r13 , [ rax + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov rbx , rax mov rdi , r13 call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rax , rdx sub rax , rcx cmp r12 , rax ja hexvar mov rdi , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r9 , rdx lea rax , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r9 , rcx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rcx cmp rsi , r9 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdx mov rax , rdx mov rdx , r12 xor esi , esi mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rdi call hexvar mov dword ptr [ rbx + num ] , ebp add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r13 mov rsi , r12 call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov esi , hexvar call hexvar test rax , rax je hexvar add rsp , num add rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , rdi mov edx , hexvar lea rdi , [ rip - hexvar ] call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
xor edx , edx jmp hexvar
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
xor eax , eax cmp qword ptr [ rip + hexvar ] , num setne al ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbx xor esi , esi cmp byte ptr [ rip + hexvar ] , num mov rbx , rdi sete sil call hexvar cmp byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov dword ptr [ rip + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , num add rax , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rbx , rax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rax pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov ebx , edi mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , ebx call hexvar xor edi , edi pop rbx jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , num mov r12 , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ r12 ] cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx xor ebp , ebp cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov ebp , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx mov rdx , r12 lea rdi , [ rip + hexvar ] test al , al jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar sete cl test cl , cl jne hexvar cmp al , hexvar je hexvar add rdx , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rdx ] test al , al je hexvar test ebp , ebp jne hexvar movzx ecx , al cmp byte ptr [ rdi + rcx ] , num setne cl test cl , cl je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test ebp , ebp je hexvar add qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov ebx , edx sub ebx , r12d lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , r12 mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar xor edx , edx test r13d , r13d mov rcx , qword ptr [ rip + hexvar ] sete dl add edx , num mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rcx + hexvar ] , edx jmp hexvar
mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num test edi , edi jne hexvar call hexvar cmp eax , hexvar ja hexvar mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret
mov qword ptr [ rip + hexvar ] , rdi ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdx , rax mov rax , qword ptr [ rdx + hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rax + hexvar ] jne hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rdi call hexvar xor edi , edi add rsp , num jmp hexvar nop ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax lea rdi , [ rax + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov rax , rbx mov qword ptr [ rbx ] , num mov dword ptr [ rbx + hexvar ] , num pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
mov dword ptr [ rip + hexvar ] , edi ret
push r13 mov r13d , edi push r12 mov r12d , esi push rbp mov ebp , edx push rbx mov rbx , rcx sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , r13d mov dword ptr [ rip + hexvar ] , r12d mov dword ptr [ rip + hexvar ] , ebp mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
mov rdx , rsi xor eax , eax lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
push rbx xor esi , esi mov ebx , edi call hexvar mov edi , ebx call hexvar xor esi , esi xor edi , edi mov rdx , rax call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea r12 , [ rsp + hexvar ] mov ebp , esi mov rbx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdi , r12 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , r12 mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp push rbx mov rbx , rdi sub rsp , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num test eax , eax je hexvar add rsp , num pop rbx pop rbp ret nop call hexvar jmp hexvar nop word ptr [ rax + rax ] ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar call hexvar mov rbx , rsp mov r12 , rax mov rsi , rax mov rdi , rbx call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 ret
mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
mov esi , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi test esi , esi jne hexvar mov edi , hexvar call hexvar lea rcx , [ rip + hexvar ] mov edx , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax ] , rcx mov qword ptr [ rax + rdx ] , rbx mov rdi , rbx call hexvar cmp dword ptr [ rip + hexvar ] , eax jge hexvar mov dword ptr [ rip + hexvar ] , eax pop rbx ret nop dword ptr [ rax ] add esi , num mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , esi movsxd rsi , esi shl rsi , num call hexvar movsxd rdx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rdx * num - num ] jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp push rbx sub rsp , num mov rdx , qword ptr [ rip + hexvar ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , num jne hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movzx edx , byte ptr [ rax ] mov rbx , rax add rax , num cmp dl , hexvar je hexvar cmp dl , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar movzx eax , byte ptr [ rbx ] lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num jmp hexvar nop dword ptr [ rax ] xor ebp , ebp xor ebx , ebx test esi , esi mov eax , esi sete dl movzx edx , dl cmovns eax , edx mov esi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] test esi , esi jns hexvar cmp al , hexvar jne hexvar lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] call hexvar add rsp , num movsx esi , bpl mov rdi , rbx pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov rdi , rsp call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] add rsp , hexvar pop rbx ret
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push r12 push rbp mov ebp , edi push rbx mov ebx , esi test edi , edi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , hexvar je hexvar jle hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar pop rbx pop rbp pop r12 ret nop cmp ebx , num jne hexvar pop rbx mov edi , ebp pop rbp pop r12 jmp hexvar mov edi , ebp call hexvar cmp ebx , hexvar je hexvar jg hexvar cmp ebx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov r12 , qword ptr [ rdx ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar
push r13 mov r13 , r8 push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8 , r13 mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
mov esi , num jmp hexvar
xor esi , esi jmp hexvar
push rbx mov rbx , rdi call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , hexvar mov rdi , rsp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , hexvar ret
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx mov edi , num sub rsp , hexvar call hexvar mov rbx , rsp xor edi , edi mov edx , num mov rsi , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar call hexvar add rsp , hexvar pop rbx ret add rax , num xor edi , edi lea rsi , [ rsp + hexvar ] mov edx , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar sub rsp , num xor r9d , r9d xor ecx , ecx push num mov r8 , rax mov edx , num mov esi , num mov edi , num call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl pop rax pop rdx call hexvar add rsp , hexvar pop rbx ret cmp qword ptr [ rsp + hexvar ] , num jns hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
push rbp lea rax , [ rip + hexvar ] lea rbp , [ rip + hexvar ] mov edx , num push rbx lea rsi , [ rip + hexvar ] sub rsp , num test edi , edi cmove rbp , rax cmp edi , num sbb ebx , ebx xor edi , edi call hexvar and ebx , hexvar mov rdx , rbp add ebx , hexvar mov rdi , rax xor eax , eax mov esi , ebx call hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
sub rsp , num lea rdi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
push r13 push r12 mov r12d , edx push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rdi , rbp je hexvar cmp rax , rdi je hexvar cmp qword ptr [ rip + hexvar ] , rdi je hexvar mov r13 , qword ptr [ rdi ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rbp je hexvar mov r8 , qword ptr [ rbx ] mov r9 , qword ptr [ rbx + hexvar ] test r12d , r12d je hexvar mov edx , dword ptr [ rax + hexvar ] and edx , hexvar cmp edx , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] sub eax , num cmp al , num ja hexvar sub rsp , num mov edx , num xor ecx , ecx mov esi , num push num mov edi , num call hexvar mov byte ptr [ rax ] , r12b pop rax pop rdx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbx call hexvar xor r9d , r9d mov r8 , rax jmp hexvar nop dword ptr [ rax + rax ] test r12d , r12d jne hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rax ] mov edx , num xor edi , edi mov qword ptr [ rsp + num ] , r9 lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r8 call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov r9 , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
sub rsp , num mov esi , num call hexvar add rsp , num cdqe ret
sub rsp , num xor esi , esi call hexvar add rsp , num cdqe ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp push rbx sub rsp , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] add rax , num mov rsi , rsp xor edx , edx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] cmp byte ptr [ rsp + hexvar ] , num lea rsi , [ rdx + hexvar ] je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar
add edi , edi lea rsi , [ rip - hexvar ] jmp hexvar
lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov r12 , rax cmp rax , hexvar jle hexvar call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx mov edx , num mov ebx , edi sub rsp , hexvar test edi , edi je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rcx ] cmp dl , hexvar jne hexvar lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rcx + num ] movzx ecx , dl lea rdi , [ rip + hexvar ] cmp byte ptr [ rdi + rcx ] , num jne hexvar cmp dl , hexvar je hexvar test ebx , ebx lea rax , [ rip + hexvar ] lea rbx , [ rip + hexvar ] mov edx , num cmove rbx , rax lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax test ebx , ebx jne hexvar call hexvar call hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] call hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov edx , num mov esi , hexvar mov rdi , rax mov rbx , rax call hexvar test eax , eax jne hexvar test ebp , ebp jne hexvar call hexvar mov rdi , rbx call hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar add rsp , hexvar pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar cmp byte ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov esi , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rax + hexvar ] call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
xor esi , esi jmp hexvar
mov esi , num jmp hexvar
xor edi , edi sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp lea r8 , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rdi , r8 je hexvar mov eax , dword ptr [ rdi + hexvar ] and eax , hexvar cmp eax , num je hexvar test ebx , ebx je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test rsi , rsi je hexvar cmp edx , num jbe hexvar mov edi , ebx mov edx , edx call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , hexvar mov esi , ebx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test ebx , ebx jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , edx add rdx , rsi test rsi , rsi jne hexvar test ebx , ebx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar mov dword ptr [ rsp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov esi , ecx mov edi , ebx call hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop add rsi , num cmp byte ptr [ rsi - num ] , num jne hexvar cmp rsi , rdx jne hexvar xor edx , edx xor esi , esi test ebx , ebx je hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , ecx cmp rdi , r8 je hexvar mov rbp , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test edx , edx je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , byte ptr [ rsi ] mov edi , ebx mov edx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar mov edx , ecx xor esi , esi mov edi , ebx call hexvar jmp hexvar
push rbp mov ebp , edi mov rdi , rsi push rbx sub rsp , hexvar lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rsp mov rsi , rbx call hexvar test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsp ] test rsi , rsi je hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , num mov byte ptr [ rax ] , bpl mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov eax , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] sub rbx , rbp cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push r12 mov esi , hexvar mov r12 , rdi push rbp push rbx call hexvar test rax , rax je hexvar mov edi , hexvar mov rbx , rax call hexvar mov rdi , r12 mov rbp , rax call hexvar mov rdx , rbx add rbx , num sub rdx , r12 mov rdi , rbx mov qword ptr [ rbp ] , rax mov byte ptr [ rax + rdx ] , num mov qword ptr [ rbp + hexvar ] , rdx call hexvar mov rdi , rbx mov qword ptr [ rbp + num ] , rax call hexvar pop rbx mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rbp + hexvar ] , rax pop rbp pop r12 ret lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar
mov rcx , qword ptr [ rsi + num ] cmp rcx , rdi jbe hexvar mov rsi , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rcx , rdi je hexvar movzx eax , byte ptr [ rsi + rdi ] cmp al , hexvar je hexvar cmp al , num je hexvar cmp al , hexvar jne hexvar lea rax , [ rdi + num ] cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rdi + num ] cmp dl , num je hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rax , num cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rax ] cmp dl , hexvar je hexvar cmp dl , num je hexvar ret mov rax , rdi ret nop dword ptr [ rax ] mov rax , rcx ret
mov rax , qword ptr [ rsi + num ] cmp rdi , rax jae hexvar mov rcx , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rdi , rax je hexvar movzx edx , byte ptr [ rcx + rdi ] cmp dl , hexvar je hexvar cmp dl , num je hexvar mov rax , rdi ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx mov rbp , rax mov rsi , rax call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
mov qword ptr [ rdi + num ] , num ret
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + num ] mov rdx , rbp sub rdx , qword ptr [ rax ] sub rbx , rdx cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rsp + num ] call hexvar mov eax , dword ptr [ rsp + num ] mov r9 , rbx mov rdx , rbp lea rdi , [ rsp + num ] mov ecx , hexvar lea rsi , [ rip + hexvar ] lea r8d , [ rax + num ] xor eax , eax call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rbx , rax test rsi , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rip + hexvar ] je hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar lea rbp , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax jne hexvar mov edi , hexvar call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov edx , hexvar mov rbx , rax mov rdi , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , rbp call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r9 , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov rbx , rax mov rdi , rax xor eax , eax mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar mov rbp , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax test rbp , rbp je hexvar mov rsi , rbx mov rdi , rbp call hexvar test eax , eax je hexvar mov rdi , rbx xor edx , edx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13 , rax test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , r13 mov rdx , r13 mov rsi , rbx mov edi , r12d call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13 , qword ptr [ rip + hexvar ] mov rbx , rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rax , qword ptr [ rdx ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdx + num ] add rax , hexvar cmp qword ptr [ rdx + hexvar ] , rax jne hexvar mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx jne hexvar xor eax , eax ret
mov eax , dword ptr [ rdi + hexvar ] shr eax , num and eax , num ret
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num movsxd rsi , dword ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] xor edx , edx mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx lea rsi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , rbx xor eax , eax mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar lea rdx , [ rip + hexvar ] or byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rax + num ] , rdx mov byte ptr [ rip + hexvar ] , num add rsp , num ret call hexvar mov edi , eax call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar lea rdx , [ rip + hexvar ] mov ecx , hexvar pxor xmm0 , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rdi , rdx xor eax , eax rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 add rsp , num ret
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rdi + hexvar ] , rax pop rbx ret mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num sete al ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rsi , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rsi je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num jne hexvar movzx edx , byte ptr [ rdi ] test dl , num jne hexvar and edx , num mov rax , qword ptr [ rdi + num ] je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx sete al movzx eax , al ret nop cmp qword ptr [ rdi + hexvar ] , num mov eax , num je hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop mov rax , qword ptr [ rdi + hexvar ] lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , num cmp rdx , rcx jne hexvar ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
movzx eax , byte ptr [ rdi ] test al , num je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar or eax , num mov byte ptr [ rdi ] , al ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num jne hexvar and byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar and byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] or eax , hexvar mov byte ptr [ rdi ] , al test al , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rax , rdi test byte ptr [ rax + num ] , num je hexvar mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop mov rax , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push rbx mov rsi , qword ptr [ rip + hexvar ] mov rbx , rdi call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
test byte ptr [ rdi ] , num je hexvar lea rax , [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
push rbx mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov rcx , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rdx + hexvar ] mov esi , dword ptr [ rcx + hexvar ] test esi , hexvar je hexvar test eax , hexvar jne hexvar mov r8d , eax or r8d , hexvar mov dword ptr [ rdx + hexvar ] , r8d test al , num je hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rcx , rax je hexvar and esi , hexvar jne hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx pop rbx mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] test al , num je hexvar mov rdx , qword ptr [ rdi + num ] and eax , hexvar mov byte ptr [ rdi + num ] , al mov eax , dword ptr [ rdx + hexvar ] test al , hexvar je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num jmp hexvar nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num mov rdi , rax add rsp , num jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num jmp hexvar
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num movzx eax , al ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax sete al movzx eax , al ret mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] test rax , rax sete al movzx eax , al ret
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rbx je hexvar mov eax , num add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + num ] mov eax , dword ptr [ rbx + hexvar ] mov edx , eax and edx , num cmp edx , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp rcx , rdx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar test eax , hexvar jne hexvar lea rsi , [ rip + hexvar ] cmp rcx , rsi je hexvar test byte ptr [ rdi ] , num je hexvar cmp rdx , rbx je hexvar mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp byte ptr [ rbp ] , hexvar jne hexvar xor eax , eax cmp byte ptr [ rbp + num ] , hexvar sete al jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar test al , num je hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rbp , qword ptr [ rax + num ] test rbp , rbp je hexvar mov eax , dword ptr [ rax + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test esi , esi je hexvar mov eax , num test cl , hexvar jne hexvar and ecx , hexvar mov eax , num jne hexvar mov rdx , qword ptr [ rdx + hexvar ] jmp hexvar
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rax , qword ptr [ rdi + hexvar ] test byte ptr [ rax ] , num je hexvar mov rcx , qword ptr [ rax + num ] cmp rdx , rcx je hexvar mov eax , dword ptr [ rcx + hexvar ] shr eax , num and eax , num ret nop mov rax , rdi test byte ptr [ rdi + num ] , num je hexvar mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop xor eax , eax ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop mov rcx , qword ptr [ rax + num ] jmp hexvar mov rdi , rax jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
push rbx mov rbx , rdi sub rsp , hexvar test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rbx , rax mov rax , qword ptr [ rsi + num ] test byte ptr [ rsi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rsi call hexvar mov rsi , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
cmp rdi , num jbe hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rax , rdx jae hexvar cmp rbx , qword ptr [ rdi + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp qword ptr [ rip + hexvar ] , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] add rcx , num mov qword ptr [ rdx ] , rbx mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rax + rsi ] , num pop rbx ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] add qword ptr [ rax + rdi * num ] , num ret nop dword ptr [ rax ] sub rax , rdi add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num pop rbx ret nop dword ptr [ rax + rax ] mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rsi + hexvar ] mov esi , hexvar jmp hexvar nop word ptr [ rax + rax ] add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rcx , num add rdx , rsi jmp hexvar mov eax , hexvar jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rdi , rdx jae hexvar cmp rbx , qword ptr [ rdi ] je hexvar mov rax , rdi jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp rcx , qword ptr [ rip + hexvar ] je hexvar mov rax , qword ptr [ rip + hexvar ] add rax , rcx add rcx , num mov qword ptr [ rdx ] , rbx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rdx + rsi ] , num mov byte ptr [ rax ] , num pop rbx ret nop sub rax , rdi mov rdx , rax sar rdx , num add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num pop rbx ret test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov ecx , num xor esi , esi mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , hexvar jmp hexvar add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rax , rcx add rcx , num add rdx , rsi jmp hexvar xor edx , edx xor eax , eax jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor esi , esi jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] test rcx , rcx je hexvar lea rdx , [ rcx + rax * num ] cmp rcx , rdx jae hexvar cmp rdi , qword ptr [ rcx ] je hexvar mov rax , rcx jmp hexvar nop word ptr cs : [ rax + rax ] cmp qword ptr [ rax ] , rdi je hexvar add rax , num cmp rax , rdx jb hexvar xor eax , eax ret nop dword ptr [ rax ] sub rax , rcx sar rax , num mov rdx , qword ptr [ rip + hexvar ] movsx eax , byte ptr [ rdx + rax ] ret nop dword ptr [ rax + rax ] test rax , rax je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop xor eax , eax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
test rsi , rsi je hexvar mov rdi , rsi jmp hexvar nop dword ptr [ rax ] ret
test rdi , rdi je hexvar push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , num je hexvar test byte ptr [ rbx ] , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] cmp qword ptr [ rdx + hexvar ] , rbx jne hexvar mov rbx , rax mov rdi , rbx call hexvar test rax , rax jne hexvar cmp rbx , rbp jne hexvar add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test byte ptr [ rsi ] , num jne hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] cmp qword ptr [ rdx ] , rsi jne hexvar mov qword ptr [ rdx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi ] , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdx ] , rdi je hexvar mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdx ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi ] , rax jmp hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop cmp qword ptr [ rcx ] , rsi jne hexvar mov qword ptr [ rcx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop cmp qword ptr [ rdx ] , num jne hexvar cmp qword ptr [ rcx ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdx ] , rdi mov qword ptr [ rcx ] , rdi add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] push r12 push rbp mov ebp , esi push rbx mov rbx , rdi call hexvar lea rdi , [ rax + num ] call hexvar lea rcx , [ rbx + num ] mov r12 , rax movzx eax , byte ptr [ rbx ] mov rdx , r12 test al , al je hexvar lea rdi , [ rip + hexvar ] nop movzx eax , byte ptr [ rdi + rax ] add rdx , num add rcx , num mov byte ptr [ rdx - num ] , al movzx eax , byte ptr [ rcx - num ] test al , al jne hexvar mov byte ptr [ rdx ] , num mov esi , ebp mov rdi , r12 call hexvar mov rdi , r12 mov rbx , rax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
lea rdi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rax call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rdx , [ rbx + rcx ] not rcx and rdx , rcx mov rcx , qword ptr [ rip + hexvar ] mov rdi , rdx mov qword ptr [ rip + hexvar ] , rdx mov rbx , rcx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdx , rcx mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax jmp hexvar
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test edx , edx jle hexvar lea ecx , [ rdx - num ] movsxd rdx , edx movsxd rax , ecx lea rdx , [ rdi + rdx - num ] mov ecx , ecx add rax , rdi sub rdx , rcx nop word ptr [ rax + rax ] mov byte ptr [ rax ] , sil sub rax , num shr rsi , num cmp rax , rdx jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi lea r13 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , ebp call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor ebp , ebp cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , ebp call hexvar jmp hexvar nop call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ebp , eax test eax , eax je hexvar mov ebp , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] test ebp , ebp jne hexvar cmp rdi , r13 je hexvar mov ebp , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop word ptr cs : [ rax + rax ] shr eax , num add edx , num test al , num je hexvar cmp ebp , edx cmovl ebp , edx jmp hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea rdx , [ rbp + hexvar ] lea r9 , [ rsp + num ] mov rdi , qword ptr [ rip + hexvar ] mov r8 , r14 call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar push rbx mov rbx , rdx mov rdi , qword ptr [ rax ] mov edx , dword ptr [ rdx ] call hexvar test eax , eax je hexvar mov dword ptr [ rbx + num ] , num pop rbx ret nop ret
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar sub rsp , hexvar mov r9 , qword ptr [ rax ] test r9 , r9 je hexvar mov rdx , qword ptr [ r9 + num ] mov rax , qword ptr [ r9 ] mov edi , dword ptr [ rdx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax test edi , edi je hexvar mov rax , r9 lea r8 , [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rdi mov r8 , qword ptr [ rax + hexvar ] mov qword ptr [ rcx + hexvar ] , r8 mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test ecx , ecx je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rcx + hexvar ] , num jne hexvar mov qword ptr [ rcx + hexvar ] , rdi jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ r9 + num ] , rdx add rsp , hexvar ret nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num ret nop dword ptr [ rax + rax ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rdx ] mov dword ptr [ rsi + hexvar ] , eax add dword ptr [ rdx ] , num ret
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
test rdx , rdx jne hexvar ret nop word ptr cs : [ rax + rax ] push rbp mov rbp , rdi push rbx mov rbx , rdx sub rsp , num mov rdi , qword ptr [ rdi ] call hexvar add qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
sub rsp , hexvar push num push r9 mov r9 , rcx mov rcx , rdx mov edx , esi push r8 xor esi , esi xor r8d , r8d call hexvar add rsp , hexvar ret
push r15 mov r15d , r8d push r14 mov r14d , edx push r13 mov r13d , esi push r12 mov r12 , rdi push rbp mov ebp , r9d push rbx mov rbx , rcx sub rsp , num cmp byte ptr [ rcx + hexvar ] , hexvar ja hexvar movzx eax , byte ptr [ rcx + hexvar ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop xor r8d , r8d xor ecx , ecx mov r9 , qword ptr [ rbx + hexvar ] sub rsp , num mov edx , r14d mov esi , r13d mov rdi , r12 push num push rbp push r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov r8 , qword ptr [ rcx + num ] mov rcx , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rcx ] mov r9 , qword ptr [ rcx + hexvar ] xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rcx call hexvar mov byte ptr [ rbx + hexvar ] , num xor r8d , r8d mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov r9 , qword ptr [ rbx + hexvar ] xor r8d , r8d mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar xor r9d , r9d xor r8d , r8d mov rcx , rax jmp hexvar nop word ptr cs : [ rax + rax ] xor r8d , r8d jmp hexvar
sub rsp , hexvar push num mov eax , dword ptr [ rsp + hexvar ] push rax push r9 mov r9 , r8 xor r8d , r8d call hexvar add rsp , hexvar ret
sub rsp , num lea rdx , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num ret
movzx eax , byte ptr [ rdi ] test al , al je hexvar cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar mov edx , num cmp al , hexvar jne hexvar movsx eax , byte ptr [ rdi + num ] lea ecx , [ rax - hexvar ] cmp cl , num ja hexvar cmp byte ptr [ rdi + num ] , num jne hexvar lea eax , [ rax + rdx * num - hexvar ] ret nop dword ptr [ rax ] xor edx , edx cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar push rbx mov edx , hexvar mov rbx , rdi lea rdi , [ rdi + num ] sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rcx , qword ptr [ rsp + num ] mov edx , eax test rcx , rcx je hexvar cmp byte ptr [ rcx ] , num jne hexvar cmp byte ptr [ rbx ] , hexvar je hexvar cmp eax , hexvar ja hexvar add rsp , hexvar mov eax , edx pop rbx ret nop word ptr cs : [ rax + rax ] mov edx , num jmp hexvar nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , num jbe hexvar cmp eax , hexvar ja hexvar lea edx , [ rax + hexvar ] cmp edx , hexvar jbe hexvar test dl , num je hexvar add rsp , hexvar mov eax , hexvar pop rbx ret nop word ptr cs : [ rax + rax ] mov edx , num jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar je hexvar nop dword ptr [ rax + rax ] mov eax , hexvar ret nop word ptr cs : [ rax + rax ] cmp byte ptr [ rdi + num ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num mov eax , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar ja hexvar lea edx , [ rax + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rdi + num ] , num mov eax , hexvar jne hexvar ret
mov esi , hexvar mov eax , num mov edi , hexvar cmp dword ptr [ rip + hexvar ] , hexvar cmovne rsi , rax jmp hexvar
sub rsp , num mov rax , rdi mov r10d , esi mov r11 , rcx mov r9d , num cmp edx , num je hexvar mov r9d , num cmp edx , num je hexvar mov r9d , num cmp edx , num je hexvar test r8 , r8 je hexvar movzx ecx , byte ptr [ r8 ] cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp edx , num je hexvar cmp edx , num mov ecx , hexvar cmove r9d , ecx xor r8d , r8d mov rcx , r11 mov esi , r10d mov rdi , rax add rsp , num jmp hexvar nop word ptr [ rax + rax ] cmp edx , num je hexvar jbe hexvar cmp edx , num je hexvar cmp edx , num jne hexvar mov r9d , num jmp hexvar nop dword ptr [ rax ] cmp edx , num jne hexvar mov r9d , hexvar jmp hexvar nop dword ptr [ rax ] mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar cmp edx , num je hexvar cmp edx , num je hexvar cmp edx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov rsi , qword ptr [ rcx ] mov ecx , hexvar repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num test cl , cl jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar mov rcx , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rcx + hexvar ] and ecx , num cmp ecx , num sbb r9d , r9d and r9d , hexvar add r9d , hexvar jmp hexvar nop mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r9d , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp edx , num je hexvar cmp edx , num mov ecx , hexvar cmove r9d , ecx jmp hexvar nop word ptr cs : [ rax + rax ] mov r9d , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov r9d , num jmp hexvar
cmp dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] je hexvar cmp eax , num jbe hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] or qword ptr [ rdx + hexvar ] , hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] or qword ptr [ rax + hexvar ] , hexvar ret nop word ptr cs : [ rax + rax ] cmp eax , num je hexvar ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] or qword ptr [ rax + hexvar ] , hexvar ret nop word ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] cmp edx , num je hexvar cmp edx , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] or qword ptr [ rdx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] or qword ptr [ rdx + hexvar ] , num jmp hexvar
push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rdx , qword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rdi + hexvar ] sub esi , dword ptr [ rdi ] sub esi , edx cmp eax , num je hexvar cmp eax , num jne hexvar test esi , esi jne hexvar pop rbx pop rbp pop r12 ret mov ebp , esi lea r12 , [ rdi + rdx + hexvar ] and ebp , num jne hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar cmp esi , num jle hexvar sar esi , num mov rdi , r12 mov edx , num add r12 , num or esi , hexvar add ebp , num movsxd rsi , esi call hexvar nop mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar mov edx , num mov esi , hexvar mov rdi , r12 call hexvar movsxd rbp , ebp mov qword ptr [ rbx + hexvar ] , num add qword ptr [ rbx + hexvar ] , rbp pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , rax pop rbx xor eax , eax pop rbp pop r12 jmp hexvar movsxd rcx , ebp xor eax , eax mov edx , eax add eax , num mov byte ptr [ r12 + rdx ] , num cmp eax , ebp jb hexvar add r12 , rcx sub esi , ebp jmp hexvar nop dword ptr [ rax ] mov edx , num mov esi , hexvar mov rdi , r12 call hexvar jmp hexvar
mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar push rbx test edi , edi jle hexvar call hexvar mov ebx , eax test eax , eax je hexvar jle hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num movsxd r9 , ebx mov edx , num xor r8d , r8d push num mov esi , num mov edi , num xor ecx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] pop rax mov esi , ebx pop rdx pop rbx jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov eax , num mov ecx , ebx shl eax , cl sub eax , num cdqe test qword ptr [ rip + hexvar ] , rax jne hexvar pop rbx ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx mov rdi , rax xor eax , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea rbp , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov rdi , rbx call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx mov rsi , rbp call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret
xor edi , edi cmp dword ptr [ rip + hexvar ] , hexvar setne dil lea edi , [ rdi * num + num ] jmp hexvar
sub rsp , num mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num ret
mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp byte ptr [ rsi + rax ] , num jne hexvar lea rax , [ rdx + num ] nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx ecx , byte ptr [ rdx ] cmp byte ptr [ rsi + rcx ] , num je hexvar add rdx , num mov qword ptr [ rip + hexvar ] , rdx ret
mov rax , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar sub rsp , num mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] add rax , num mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num jmp hexvar nop dword ptr [ rax + rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rax , num mov esi , num mov qword ptr [ rip + hexvar ] , rax call hexvar add rsp , num jmp hexvar
mov qword ptr [ rip + hexvar ] , num ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rdi + num ] mov rbx , qword ptr [ rdi + hexvar ] add rbx , qword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp + num ] add rbx , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
mov rax , rsi ret
xor eax , eax ret
mov ecx , dword ptr [ rip + hexvar ] jmp hexvar
push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi call hexvar mov rsi , qword ptr [ rbx + num ] mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar mov edx , num mov rdi , rbp call hexvar mov r9d , dword ptr [ rbx + hexvar ] cmp r9d , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , r12 mov edi , num pop rbx pop rbp pop r12 mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop mov rsi , rbp mov r8d , dword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov edx , num mov rdi , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] sub rsi , rax call hexvar or byte ptr [ rax ] , hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop word ptr cs : [ rax + rax ] mov edx , num mov rdi , rbp call hexvar jmp hexvar
push rbx mov edx , num mov rbx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rdi xor edi , edi call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax xor eax , eax ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , num ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi ] mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax cmp byte ptr [ rax ] , hexvar je hexvar mov rbx , rdi mov r12 , rsi xor edi , edi mov rsi , rsp mov edx , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax xor eax , eax cmp byte ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , rbp je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ r12 ] , eax add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , rbp add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push r13 mov rcx , rdi mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx xor ebx , ebx sub rsp , num mov rdi , qword ptr [ rsi ] movzx eax , byte ptr [ rdi ] sub eax , hexvar test al , hexvar lea rax , [ rip + hexvar ] sete bl add rbx , rdi movzx edx , byte ptr [ rbx ] test byte ptr [ rax + rdx * num ] , hexvar jne hexvar mov rbp , rdx cmp bpl , hexvar je hexvar mov byte ptr [ rbx ] , num call rcx mov byte ptr [ rbx ] , bpl xor edx , edx cmp eax , - num je hexvar mov dword ptr [ r12 ] , eax mov edx , num mov qword ptr [ r13 ] , rbx add rsp , num mov eax , edx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] add rbx , num movzx edx , byte ptr [ rbx ] mov rbp , rdx test byte ptr [ rax + rdx * num ] , hexvar je hexvar add rbx , num movzx edx , byte ptr [ rbx ] mov rbp , rdx test byte ptr [ rax + rdx * num ] , hexvar je hexvar jmp hexvar
cmp dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] push rbx je hexvar sub eax , num mov edx , num cmp eax , hexvar jbe hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , num mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rbx , rcx shr rbx , hexvar test ecx , ecx jne hexvar test ebx , ebx jne hexvar pop rbx ret nop dword ptr [ rax + rax ] lea rdx , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax * num ] jmp hexvar nop dword ptr [ rax ] sub eax , num mov edx , num cmp eax , num ja hexvar lea rdx , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax * num ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , ebx mov edx , num pop rbx mov esi , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] mov edx , num mov esi , num call hexvar jmp hexvar
mov rax , qword ptr [ rdi + num ] mov rdi , qword ptr [ rsi + num ] cmp rax , rdi je hexvar test rax , rax je hexvar test rdi , rdi je hexvar mov rsi , rax jmp hexvar nop xor eax , eax ret nop dword ptr [ rax + rax ] mov eax , num ret mov eax , hexvar ret
mov rax , qword ptr [ rdi ] mov rdi , qword ptr [ rsi ] cmp rax , rdi je hexvar test rax , rax je hexvar test rdi , rdi je hexvar mov rsi , rax jmp hexvar nop dword ptr [ rax ] xor eax , eax ret nop dword ptr [ rax + rax ] mov eax , num ret mov eax , hexvar ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] cmovne rax , rdx add rsp , num ret nop dword ptr [ rax ] call hexvar jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , hexvar mov eax , num mov edx , num cmovne rax , rdx add rsp , num ret nop dword ptr [ rax + rax ] call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar lea rbx , [ rip + hexvar ] jmp hexvar nop add rbx , hexvar mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar mov rsi , rbp call hexvar test eax , eax jne hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop word ptr [ rax + rax ] xor ebx , ebx add rsp , num mov rax , rbx pop rbx pop rbp ret
mov eax , num ret
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num jmp hexvar
mov rdi , rsi jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push r13 mov ecx , num mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov r12 , qword ptr [ rsi ] lea rsi , [ rip + hexvar ] mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta bl sbb bl , num movsx ebx , bl test ebx , ebx jne hexvar mov rdi , r12 call hexvar lea r8 , [ rip + hexvar ] mov ecx , num lea rdi , [ r12 + rax - num ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor edx , edx mov rsi , r8 xor eax , eax call hexvar mov rdi , r13 mov rsi , rax mov r12 , rax call hexvar test rax , rax je hexvar mov ebx , dword ptr [ rax + hexvar ] movabs rdx , hexvar mov rax , rdx mul qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + hexvar ] mov rbp , qword ptr [ rax + hexvar ] shr rdx , num lea edi , [ rdx - num ] test rbp , rbp je hexvar mov rax , qword ptr [ r13 + num ] lea rsi , [ rbp + num ] movsxd rdi , edi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r13 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] call qword ptr [ rax + hexvar ] add rsp , num mov rdi , r12 pop rbx pop rbp pop r12 pop r13 jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp xor esi , esi push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov ebp , dword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar add rsp , num mov esi , ebp mov rdi , rbx pop rbx pop rbp jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rsi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov edi , num mov dword ptr [ rax + hexvar ] , num call hexvar mov byte ptr [ rax ] , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r13 mov r13 , rsi push r12 push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdx , qword ptr [ r12 + num ] mov rbx , rax test rdx , rdx je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rdx ] movups xmmword ptr [ rax ] , xmm0 movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r13 call hexvar mov rdi , rbp mov rbx , rax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdi , r13 movzx ebx , byte ptr [ rax + hexvar ] call hexvar mov rdi , rbp and ebx , num mov r12d , ebx movzx ebx , byte ptr [ rax + hexvar ] call hexvar and ebx , hexvar or ebx , r12d mov byte ptr [ rax + hexvar ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdx , qword ptr [ r12 + num ] jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num ret
mov edi , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov edx , esi shr edx , num test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar cmp dword ptr [ rax + num ] , edi jne hexvar cmp dword ptr [ rax + hexvar ] , edx jne hexvar mov ecx , esi mov edx , num shl rdx , cl test qword ptr [ rax + hexvar ] , rdx setne al movzx eax , al ret nop ret xor eax , eax ret
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , qword ptr [ rip + hexvar ] movsx esi , byte ptr [ rbp ] cmp sil , hexvar jne hexvar lea rax , [ rbp + num ] mov qword ptr [ rip + hexvar ] , rax movsx esi , byte ptr [ rbp + num ] mov rbp , rax mov r14 , rbp lea rbx , [ rip + hexvar ] cmp sil , hexvar jne hexvar jmp hexvar nop dword ptr [ rax ] add r14 , num movsx esi , byte ptr [ r14 ] mov rdi , rbx call hexvar test rax , rax je hexvar cmp r14 , rbp je hexvar mov rbx , r14 sub rbx , rbp lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar mov edx , dword ptr [ rip + hexvar ] mov r12 , rax test edx , edx jne hexvar jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rax + num ] , hexvar jne hexvar mov rdi , r12 call hexvar mov rbp , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax ] call hexvar lea edi , [ rbp + rax - num ] mov rbp , rbx movsxd rdi , edi sub rbp , r12 call hexvar movsxd rbp , ebp mov rsi , r12 mov rdx , rbp mov rdi , rax mov r13 , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdi , [ r13 + rbp ] mov rsi , qword ptr [ rax ] call hexvar lea rsi , [ rbx + num ] mov rdi , rax call hexvar mov rdi , r12 mov r12 , r13 call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov esi , hexvar mov rdi , r12 call hexvar mov rbx , rax test rax , rax jne hexvar mov qword ptr [ rip + hexvar ] , r14 cmp byte ptr [ r14 ] , hexvar jne hexvar add r14 , num mov qword ptr [ rip + hexvar ] , r14 add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 ret lea rdi , [ rsp + hexvar ] call hexvar mov r14 , qword ptr [ rip + hexvar ] mov r12 , rax test rax , rax jne hexvar call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r12d , r12d call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar jmp hexvar
mov rcx , qword ptr [ rsi + hexvar ] xor eax , eax mov edi , dword ptr [ rcx + hexvar ] cmp dword ptr [ rdx + num ] , edi je hexvar ret nop word ptr [ rax + rax ] mov rsi , qword ptr [ rdx ] mov rdi , qword ptr [ rcx + hexvar ] mov eax , num cmp rsi , rdi je hexvar test rdi , rdi je hexvar test rsi , rsi je hexvar sub rsp , num call hexvar test eax , eax sete al add rsp , num movzx eax , al ret nop dword ptr [ rax ] xor eax , eax ret
push rbx mov ebx , edi nop dword ptr [ rax + rax ] call hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rcx , qword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , num je hexvar movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ebx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar pop rbx jmp hexvar nop lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] xor edi , edi call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
sub rsp , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test edi , edi jne hexvar lea rsi , [ rip - hexvar ] xor edi , edi jmp hexvar nop dword ptr [ rax ] xor edi , edi jmp hexvar
xor eax , eax cmp qword ptr [ rdi + hexvar ] , num setne al ret
push rbx mov ebx , esi call hexvar mov byte ptr [ rax + hexvar ] , bl pop rbx ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx ] , - hexvar mov dword ptr [ rbx + num ] , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , word ptr [ rsi ] cmp ecx , edi jg hexvar movsxd r8 , ecx lea r9 , [ rip + hexvar ] sub edi , ecx and edx , dword ptr [ r9 + r8 * num ] mov ecx , edi lea r8d , [ rax - num ] mov eax , edx mov dword ptr [ rip + hexvar ] , r8d shl eax , cl test r8d , r8d je hexvar lea rdx , [ rsi - num ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , word ptr [ rsi - num ] sub ecx , edi movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar edx , cl and edx , dword ptr [ r9 + rdi * num ] or eax , edx ret sub ecx , edi movzx eax , dx lea rdx , [ rip + hexvar ] movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar eax , cl and eax , dword ptr [ rdx + rdi * num ] ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , qword ptr [ rax ] xor eax , eax call hexvar mov edi , num call hexvar
mov rdx , qword ptr [ rdi + num ] xor eax , eax test rdx , rdx je hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rdx ] sub rcx , rdx mov rdx , qword ptr [ rdx + num ] add rax , rcx test rdx , rdx jne hexvar ret nop dword ptr [ rax + rax ] ret
mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar nop dword ptr [ rax ] cmp rsi , rax jbe hexvar cmp qword ptr [ rax ] , rsi jae hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar xor eax , eax ret nop word ptr cs : [ rax + rax ] mov eax , num ret ret
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
or byte ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 mov qword ptr [ rdi + hexvar ] , r9 jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar nop word ptr [ rax + rax ] mov ebx , dword ptr [ rbp + num ] sub ebx , num js hexvar movsxd rbx , ebx nop dword ptr [ rax + rax ] call qword ptr [ rbp + rbx * num + hexvar ] sub rbx , num test ebx , ebx jns hexvar mov rbp , qword ptr [ rbp ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp ] , rcx lea rdi , [ rip ] mov rcx , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov r9d , num mov r8 , rdi mov rdi , rax call num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp ] , rcx lea rdi , [ rip ] mov rcx , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov r9d , num mov r8 , rdi mov rdi , rax call num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp ] , rcx lea rdi , [ rip ] mov rcx , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov r9d , num mov r8 , rdi mov rdi , rax call num add rsp , hexvar ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rip ] mov rdx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] mov rdi , rcx call rax add rsp , hexvar ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2ss xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2ss xmm0 , rdx addss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rax + num ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jae hexvar movss xmm0 , dword ptr [ rbp - num ] cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar test rcx , rcx je hexvar mov eax , num test rdx , rdx jns hexvar mov eax , num and eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm1 , dword ptr [ rax + num ] movss xmm0 , dword ptr [ rip + hexvar ] subss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , xmm1 jbe hexvar movss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rip + hexvar ] addss xmm1 , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] comiss xmm0 , xmm1 jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] pxor xmm1 , xmm1 comiss xmm0 , xmm1 jb hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] movaps xmm1 , xmm0 addss xmm1 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmm1 jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm1 , dword ptr [ rax + num ] movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , xmm1 jb hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] movaps xmm1 , xmm0 addss xmm1 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmm1 jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movss dword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax setne al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num sub rax , rdx mov rdx , rax movzx eax , byte ptr [ rbp - num ] add rax , rdx mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , hexvar mov rsi , rax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx mov esi , eax movzx edx , byte ptr [ rbp - num ] mov eax , num sub eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx mov esi , eax movzx edx , byte ptr [ rbp - num ] mov eax , num sub eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov word ptr [ rbp - num ] , ax movzx edx , word ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx mov esi , eax movzx edx , word ptr [ rbp - num ] mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov word ptr [ rbp - num ] , ax movzx edx , word ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx mov esi , eax movzx edx , word ptr [ rbp - num ] mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shr rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx or rax , rsi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shl rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shr rdx , cl mov rax , rdx or rax , rsi pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , eax ror edx , cl mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , eax rol edx , cl mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax ror rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax rol rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al mov rdx , qword ptr [ rbp - num ] rol rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] test rax , rax je hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] call rax mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] test rax , rax je hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] call rax mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov eax , hexvar cdqe cmp qword ptr [ rsp + hexvar ] , rax jae hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov eax , hexvar cdqe mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rsp + hexvar ] , rax jbe hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar cmp qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] add rax , hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num je hexvar cmp qword ptr [ rsp + num ] , num je hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] movzx eax , word ptr [ rax + hexvar ] test ax , ax jne hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rsp + num ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + hexvar ] , num lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar lea rdi , [ rip ] call hexvar mov edx , eax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + num ] add rax , num mov esi , hexvar mov rdi , rax call hexvar mov eax , num add rsp , hexvar ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] mov byte ptr [ rdx ] , al mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , hexvar mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov esi , num mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] not rax shr rax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov word ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num sete al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] or ah , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and ah , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] je hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov rdx , rsi mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov rdx , rsi mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , hexvar jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx esi , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx ecx , al mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov r8d , esi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] shl eax , hexvar or dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] cmp dl , al jne hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - num ] cmp dl , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx neg rax mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fcomip st ( num ) fstp st ( num ) jbe hexvar fld xword ptr [ rip + hexvar ] fld xword ptr [ rbp + hexvar ] fcomip st ( num ) fstp st ( num ) jae hexvar fld xword ptr [ rbp + hexvar ] fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] jmp hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fsubp st ( num ) fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] movabs rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar fild qword ptr [ rbp - num ] cmp qword ptr [ rbp - num ] , num jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fld xword ptr [ rbp + hexvar ] fucomip st ( num ) jp hexvar fld xword ptr [ rbp + hexvar ] fucomip st ( num ) fstp st ( num ) je hexvar jmp hexvar fstp st ( num ) mov eax , num jmp hexvar mov eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax fild qword ptr [ rbp - hexvar ] test rax , rax jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fstp xword ptr [ rbp + hexvar ] fld xword ptr [ rbp + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] shl rax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar mov ebx , dword ptr [ rbp - hexvar ] jmp hexvar mov ebx , num call hexvar mov dword ptr [ rax ] , ebx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , rdx call rax jmp hexvar nop nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovbe rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax call hexvar mov eax , dword ptr [ rax ] test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - hexvar ] and rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , hexvar mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov qword ptr [ rsp ] , rsi cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , hexvar ja hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + num ] , hexvar ja hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + num ] , hexvar ja hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + num ] , hexvar ja hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsp + num ] add rdx , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num add rsp , hexvar ret
mov eax , edi mov byte ptr [ rsp - hexvar ] , al mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] movzx eax , byte ptr [ rdx + rax ] cmp byte ptr [ rsp - hexvar ] , al jne hexvar mov eax , dword ptr [ rsp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] test rax , rax je hexvar mov eax , dword ptr [ rsp - num ] jmp hexvar mov eax , hexvar mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , r8 mov qword ptr [ rsp ] , r9 mov r8 , qword ptr [ rsp ] mov rdi , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] sub rsp , num push num mov r9 , r8 mov r8 , rdi mov rdi , rax call num add rsp , hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , r8 mov qword ptr [ rsp ] , r9 mov r8 , qword ptr [ rsp ] mov rdi , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] sub rsp , num push num mov r9 , r8 mov r8 , rdi mov rdi , rax call num add rsp , hexvar add rsp , hexvar ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , num jmp hexvar lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rax mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rcx , qword ptr [ rdx + rax ] lea rax , [ rsp + hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rip ] add rax , rdx lea rdx , [ rax + num ] mov ecx , dword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov r9d , ecx lea r8 , [ rip ] mov ecx , hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar add dword ptr [ rsp + hexvar ] , num cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + num ] , rcx mov rax , qword ptr [ rsp + num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + num ] movabs rsi , hexvar mov qword ptr [ rax + hexvar ] , rsi mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + num ] movabs rdi , hexvar mov qword ptr [ rax + hexvar ] , rdi mov rax , qword ptr [ rsp + num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + num ] movabs rsi , hexvar mov qword ptr [ rax + hexvar ] , rsi mov rax , qword ptr [ rsp + num ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov qword ptr [ rsp ] , rsi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov eax , dword ptr [ rsp + hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rsp + num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip ] mov edx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rsp ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar add dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rsp + hexvar ] jl hexvar mov eax , hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rsp + num ] add rdx , hexvar mov rdi , rdx call rax mov eax , num add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] add rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] imul ecx , eax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov eax , edx shl eax , num add eax , edx shl eax , num add eax , edx lea edx , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] add rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul ecx , eax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov eax , edx shl eax , num add eax , edx shl eax , num add eax , edx lea edx , [ rcx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num sub rdx , hexvar add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] add rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , num mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] add rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num lea ecx , [ rax + rdx ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al add eax , ecx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar nop add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp dword ptr [ rbp - num ] , num sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , - hexvar jl hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jl hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne al movzx eax , al mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov dword ptr [ rbp - num ] , hexvar nop mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num shl rax , num mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rax , rcx add rdx , rsi mov qword ptr [ rax + num ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num sub rdx , hexvar add rax , rdx mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov edx , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , ecx lea rcx , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rbp + rax * num - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdi , rax mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rsi lea rdx , [ rcx + rdi ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax je hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - num ] movsxd rcx , ecx shl rcx , num add rax , rcx mov rax , qword ptr [ rax ] cmp rdx , rax je hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov eax , dword ptr [ rax ] test eax , eax js hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax movabs rax , hexvar imul rax , rdx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdi , rax mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rsi lea rdx , [ rcx + rdi ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , r8 mov qword ptr [ rsp ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax jmp hexvar nop jmp hexvar nop mov eax , dword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , r8 mov qword ptr [ rsp ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp ] mov rsi , qword ptr [ rax ] mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax jmp hexvar nop jmp hexvar nop mov eax , dword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
mov dword ptr [ rsp - hexvar ] , edi mov dword ptr [ rsp - num ] , num jmp hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rsp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rsp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip ] mov eax , dword ptr [ rdx + rax ] ret add dword ptr [ rsp - num ] , num cmp dword ptr [ rsp - num ] , hexvar jle hexvar mov eax , hexvar ret
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov r12 , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
push r15 push r14 push r13 mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , rdx mov edx , num push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rbp , qword ptr [ rbx ] mov r14 , rax mov rdi , rbp call hexvar mov rdi , r12 mov r15 , rax call hexvar mov edx , dword ptr [ rbx + hexvar ] add rax , r15 lea r15 , [ rax + num ] test edx , edx je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r15 , qword ptr [ r13 ] lea rbx , [ rax + num ] test r15 , r15 je hexvar mov rdi , r15 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r15 mov r13 , rax test rax , rax je hexvar mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , rbx mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , r14 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r14 mov r13 , rax test rax , rax jne hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r13d , r13d call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp mov rbp , rdx xor edx , edx push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rbx + num ] lea rdi , [ rbx + hexvar ] mov edx , hexvar mov esi , num call hexvar cmp rax , hexvar jne hexvar cmp word ptr [ rbx + hexvar ] , hexvar jne hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbx mov ebx , edx cmp edx , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , edx movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop word ptr [ rax + rax ] mov eax , esi shr rsi , hexvar bswap eax mov dword ptr [ rdi + num ] , eax mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi ] , sil pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop word ptr [ rax + rax ] mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , num mov byte ptr [ rdi + num ] , al mov byte ptr [ rdi ] , sil ret push rbx lea rsi , [ rip + hexvar ] mov ebx , edx xor edi , edi mov edx , num call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 lea r12 , [ rip + hexvar ] push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop word ptr [ rax + rax ] mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
movzx ecx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] mov rdx , rcx test byte ptr [ rax + rcx * num ] , hexvar je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar mov rax , rdi test dl , dl jne hexvar jmp hexvar nop word ptr [ rax + rax ] movzx edx , byte ptr [ rdi ] test dl , dl je hexvar add rdi , num cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdi + num ] add rdi , num mov rax , rdi test dl , dl jne hexvar ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rbp , rsi test rsi , rsi je hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov ebp , num mov ebx , num jmp hexvar mov rdi , rbx imul rdi , rbp call hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdi je hexvar ret nop word ptr [ rax + rax ] sub rsp , num xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
push rbp mov rsi , rdi mov rbp , rdi mov edi , num push rbx sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov esi , hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rbp mov rdi , rbx mov qword ptr [ rbx + hexvar ] , rax call hexvar test eax , eax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] xor esi , esi mov rdi , rbx test eax , eax jne hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop call hexvar jmp hexvar
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar ret
mov ecx , esi test esi , esi jne hexvar mov rax , rdx ret nop word ptr [ rax + rax ] mov rsi , rdi mov edi , ecx jmp hexvar
push rbp mov edx , num mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx sub rsi , rbx call hexvar mov rsi , rbp lea rdi , [ rbx + rax ] call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + hexvar ] test rbx , rbx je hexvar mov eax , dword ptr [ r12 + hexvar ] test eax , eax je hexvar mov r13d , num xor ebp , ebp jmp hexvar nop dword ptr [ rax ] add ebp , num add rbx , hexvar cmp dword ptr [ r12 + hexvar ] , ebp jbe hexvar cmp qword ptr [ rbx ] , num jne hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] xor esi , esi mov rdi , r12 call hexvar test eax , eax jne hexvar xor r13d , r13d add ebp , num add rbx , hexvar cmp dword ptr [ r12 + hexvar ] , ebp ja hexvar add rsp , num mov eax , r13d pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] call hexvar test eax , eax je hexvar mov rbx , qword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rsp , num mov r13d , num pop rbx mov eax , r13d pop rbp pop r12 pop r13 ret
mov r9 , qword ptr [ rsi ] cmp r9 , rdx jbe hexvar mov eax , num ret nop push r14 mov r14 , rdx push r13 mov r13 , rdi mov rdi , r9 push r12 mov r12 , rsi push rbp mov rbp , r8 push rbx mov rbx , rcx mov rcx , rdx xor edx , edx sub rsp , hexvar lea rsi , [ rsp + hexvar ] call hexvar mov edx , dword ptr [ rsp + hexvar ] add rdx , qword ptr [ r12 ] mov qword ptr [ r12 ] , rdx cmp rdx , r14 ja hexvar add rax , rbx mov qword ptr [ r13 ] , rax cmp rax , rbp jb hexvar jmp hexvar nop dword ptr [ rax ] sub edx , hexvar cmp dl , hexvar ja hexvar add rax , num cmp rbp , rax je hexvar movzx edx , byte ptr [ rax ] test dl , dl jne hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r12 xor eax , eax mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi lea rdi , [ rip + hexvar ] call hexvar mov rdi , rbp mov esi , num call hexvar mov edi , hexvar call hexvar test rbx , rbx je hexvar cmp dword ptr [ rip + hexvar ] , num mov rdi , rbp sbb esi , esi sub rdi , r12 and esi , num add rdi , rbx add esi , num call qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar cmp dword ptr [ rip + hexvar ] , num pop rbx sbb rax , rax and eax , num lea rax , [ rax + rbp + num ] pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , num lea rdi , [ rip + hexvar ] sbb esi , esi mov rdx , rax xor eax , eax and esi , num add esi , num call hexvar jmp hexvar
push r13 xor eax , eax mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdi lea rdi , [ rip + hexvar ] push rbx mov rbx , rdx sub rsp , num call hexvar mov esi , num mov rdi , rbx call hexvar mov edi , hexvar call hexvar lea rax , [ r12 + hexvar ] cmp rax , rbx jbe hexvar mov esi , ebx lea rdi , [ rip + hexvar ] xor eax , eax sub esi , r12d sub esi , hexvar call hexvar mov edi , hexvar call hexvar test rbp , rbp je hexvar mov rax , rbx mov edx , dword ptr [ rip + hexvar ] sub rax , r12 lea rdi , [ rbp + rax ] test edx , edx jne hexvar lea rax , [ rbp + rax + num ] cmp r13 , rax jb hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num call rax mov esi , num mov rdi , rax call hexvar cmp dword ptr [ rip + hexvar ] , num sbb rax , rax and eax , num lea rax , [ rax + rbx + num ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] lea rax , [ rbp + rax + num ] cmp r13 , rax jb hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num jmp hexvar lea rdi , [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , hexvar call hexvar test rbp , rbp jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , num lea rdi , [ rip + hexvar ] sbb esi , esi mov rdx , rax xor eax , eax and esi , num add esi , num call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , num lea rdi , [ rip + hexvar ] sbb esi , esi mov rdx , rax xor eax , eax and esi , num add esi , num call hexvar mov rax , - num jmp hexvar
push r15 mov r15 , rsi push r14 sub r15 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar cmp rsi , rdi jbe hexvar mov r12 , rdi mov qword ptr [ rsp ] , num lea r14 , [ rip + hexvar ] test r15 , r15 je hexvar nop dword ptr [ rax + rax ] cmp r15 , hexvar mov r13d , hexvar mov rsi , qword ptr [ rsp ] lea rdi , [ rip + hexvar ] cmovbe r13 , r15 xor eax , eax mov qword ptr [ rsp + num ] , r13 mov ebp , r13d xor r13d , r13d call hexvar jmp hexvar nop dword ptr [ rax ] movzx esi , byte ptr [ r12 + r13 ] lea rdi , [ rip + hexvar ] xor eax , eax and ebx , num call hexvar cmp ebx , num je hexvar add r13 , num cmp r13 , hexvar je hexvar mov ebx , r13d cmp ebp , r13d jg hexvar mov rdi , r14 xor eax , eax and ebx , num call hexvar cmp ebx , num jne hexvar mov edi , hexvar add r13 , num call hexvar cmp r13 , hexvar jne hexvar xor ebx , ebx nop dword ptr [ rax ] movzx edi , byte ptr [ r12 + rbx ] lea eax , [ rdi - hexvar ] cmp eax , hexvar jbe hexvar mov edi , hexvar call hexvar add rbx , num cmp ebp , ebx jg hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar movsxd r13 , dword ptr [ rsp + num ] add qword ptr [ rsp ] , r13 add r12 , r13 sub r15 , r13 jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , hexvar mov edi , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
cmp edi , num ja hexvar lea rdx , [ rip + hexvar ] mov edi , edi sub rsp , num movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx mov edx , num jmp rax nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov esi , edi xor eax , eax lea rdi , [ rip + hexvar ] jmp hexvar
push r12 mov r12d , edi push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar test edi , edi jle hexvar mov esi , edi xor eax , eax lea rdi , [ rip + hexvar ] call hexvar cmp rbx , rbp jae hexvar and r12d , num jne hexvar mov rdi , rbx lea rsi , [ rsp + hexvar ] xor edx , edx mov rcx , rbp call hexvar mov edx , dword ptr [ rsp + hexvar ] lea rdi , [ rip + hexvar ] mov rsi , rax add rbx , rdx mov rdx , rax xor eax , eax call hexvar cmp rbx , rbp ja hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov r12 , rbp mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar sub r12 , rbx sub r12 , num call hexvar test r12 , r12 jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rbp call hexvar mov rdi , rax xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov edi , r12d call hexvar mov rdi , rbx mov rsi , r12 call hexvar lea rbx , [ rbx + rax + num ] jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
push r14 xor eax , eax mov r14 , rdx mov ecx , hexvar push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov rsi , qword ptr [ rdx ] mov rdx , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , num mov rbx , rsp mov qword ptr [ rsp + hexvar ] , num lea rdi , [ rbx + hexvar ] rep stosq qword ptr [ rdi ] , rax mov rdi , rbp mov dword ptr [ rsp + num ] , esi mov qword ptr [ rsp ] , rdx mov dword ptr [ rsp + hexvar ] , ebp call hexvar mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx mov r12 , rax call hexvar mov ecx , dword ptr [ rsp + num ] test ecx , ecx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] mov rcx , rbp mov esi , num mov rdi , rbx sub rcx , rax mov rax , rcx add rax , r12 mov qword ptr [ rsp + hexvar ] , rax call hexvar cmp eax , num jne hexvar mov rdi , rbx call hexvar mov edx , dword ptr [ rsp + num ] test edx , edx je hexvar test eax , eax je hexvar mov rdi , r12 call hexvar mov qword ptr [ r13 ] , num xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or eax , dword ptr [ rsp + hexvar ] jne hexvar mov qword ptr [ r13 ] , r12 mov eax , num mov qword ptr [ r14 ] , rbp add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rdi + hexvar ] lea rdx , [ rdx + rdx * num ] lea rdx , [ rax + rdx * num ] cmp rax , rdx jae hexvar cmp rsi , qword ptr [ rax ] jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp qword ptr [ rax ] , rsi je hexvar add rax , hexvar cmp rax , rdx jb hexvar xor eax , eax ret nop dword ptr [ rax ] mov eax , num ret
cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num je hexvar jmp hexvar nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret
movabs rax , hexvar sub rsp , hexvar movabs rdx , hexvar add rdi , rax mov rax , rdi imul rdx add rdx , rdi sar rdi , hexvar sar rdx , hexvar sub rdx , rdi lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rdx call hexvar sub rsp , num lea rdi , [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] mov r9d , dword ptr [ rax + num ] mov r8d , dword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] lea edx , [ rsi + num ] mov esi , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rax ] push rax add esi , hexvar xor eax , eax call hexvar add rsp , hexvar ret
test edi , edi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi jmp hexvar nop word ptr [ rax + rax ] shr ebx , num je hexvar sub rbp , num test bl , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbp ] call hexvar cmp ebx , num jne hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov edx , num mov esi , num mov rdi , r12 shr ebx , num mov rcx , qword ptr [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] ret
mov eax , num mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx ja hexvar sbb eax , eax ret
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp rdx , hexvar jbe hexvar mov rdi , rbx mov esi , num call qword ptr [ rip + hexvar ] lea rdi , [ rbx + num ] mov esi , num mov dword ptr [ rbp ] , eax call qword ptr [ rip + hexvar ] lea rdi , [ rbx + num ] mov esi , num mov qword ptr [ rbp + num ] , rax call qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov eax , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] cmp rdx , hexvar jbe hexvar mov rdi , rbx mov esi , num call qword ptr [ rip + hexvar ] lea rdi , [ rbx + num ] mov esi , num mov dword ptr [ rbp ] , eax call qword ptr [ rip + hexvar ] lea rdi , [ rbx + hexvar ] mov esi , num mov qword ptr [ rbp + num ] , rax call qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov eax , hexvar pop rbx pop rbp ret
push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx mov rcx , qword ptr [ rdi + hexvar ] mov rbx , rsi test rcx , rcx je hexvar mov edi , dword ptr [ r12 + hexvar ] shl rdi , num add rdi , rcx cmp rdi , rcx jbe hexvar lea rdx , [ rbx + rbp ] nop dword ptr [ rax + rax ] cmp qword ptr [ rcx ] , num jne hexvar mov rsi , qword ptr [ rcx + hexvar ] mov r8 , qword ptr [ rcx + hexvar ] neg rsi and rsi , r8 cmp rsi , rbx ja hexvar mov rax , qword ptr [ rcx + hexvar ] add rax , r8 cmp rdx , rax jbe hexvar add rcx , hexvar cmp rcx , rdi jb hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] call hexvar test eax , eax je hexvar mov rcx , qword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rcx + hexvar ] sub rax , r8 add rax , rbx pop rbx pop rbp pop r12 ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , rbx jmp hexvar
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , r12 call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbx + num ] , bpl mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar mov qword ptr [ rbx ] , rax test rax , rax jne hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r15 mov r15d , edx push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov ebx , esi sub rsp , hexvar mov r13d , dword ptr [ rdi + hexvar ] cmp r13d , ebx jbe hexvar mov rbp , qword ptr [ r12 + hexvar ] test rbp , rbp je hexvar or byte ptr [ rbp + rbx ] , r15b add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] lea edi , [ rbx + num ] mov esi , num mov r14 , rdi call hexvar mov rbp , rax test rax , rax je hexvar mov rcx , qword ptr [ r12 + hexvar ] test rcx , rcx je hexvar mov rsi , rcx mov rdi , rax mov edx , r13d mov qword ptr [ rsp + num ] , rcx call hexvar mov rcx , qword ptr [ rsp + num ] mov rdi , rcx call hexvar mov qword ptr [ r12 + hexvar ] , rbp mov dword ptr [ r12 + hexvar ] , r14d jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rbx je hexvar xor edi , edi cmp rbx , rax setne dil call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
cmp rdi , hexvar je hexvar ja hexvar cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar lea rax , [ rip + hexvar ] jb hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax + rax ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax + rax ] cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret
cmp edi , num ja hexvar lea rdx , [ rip + hexvar ] mov edi , edi movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx mov edx , num jmp rax nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi jmp hexvar nop lea rsi , [ rip + hexvar ] xor edi , edi jmp hexvar nop lea rsi , [ rip + hexvar ] xor edi , edi jmp hexvar nop lea rsi , [ rip + hexvar ] xor edi , edi jmp hexvar nop lea rsi , [ rip + hexvar ] xor edi , edi jmp hexvar nop lea eax , [ rdi - hexvar ] push rbx mov ebx , edi mov edx , num lea rsi , [ rip + hexvar ] cmp eax , hexvar jbe hexvar lea eax , [ rdi - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] cmp eax , hexvar jbe hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov esi , hexvar lea rdi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar lea rax , [ rip + hexvar ] pop rbx ret
cmp rdi , hexvar je hexvar jbe hexvar cmp rdi , hexvar je hexvar ja hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmovbe rax , rdx ret lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop word ptr cs : [ rax + rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret lea rax , [ rip + hexvar ] cmp rdi , hexvar je hexvar cmp rdi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov r15 , rdi mov r12 , rsi lea r13 , [ rip + hexvar ] mov rbx , rdx test rdx , rdx je hexvar nop dword ptr [ rax ] add rbx , num mov edx , dword ptr [ rbx - num ] test edx , edx je hexvar cmp dword ptr [ r15 + hexvar ] , edx jbe hexvar lea r14 , [ rdx + rdx * num ] mov rax , rbp shl r14 , num add rax , r14 je hexvar mov rdi , qword ptr [ r15 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rax ] add rdi , rax cmp rax , qword ptr [ r15 + hexvar ] jae hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar add rsp , num lea rax , [ rbp + r14 ] pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num mov rsi , r13 call hexvar mov rbp , qword ptr [ r15 + hexvar ] mov rdi , rax jmp hexvar nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rbp , qword ptr [ r15 + hexvar ] mov rdi , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rbp , qword ptr [ r15 + hexvar ] mov rdi , rax jmp hexvar nop dword ptr [ rax ] test rbp , rbp je hexvar add rsp , num mov rsi , r12 mov rdi , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15 , rsi push r14 push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar test edi , edi js hexvar mov eax , num je hexvar mov byte ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov r9d , hexvar mov qword ptr [ rsp + hexvar ] , num lea r12 , [ rip + hexvar ] test eax , eax lea rax , [ rsp + hexvar ] cmove r9d , r13d mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] xor ebx , ebx mov qword ptr [ rsp + hexvar ] , rax mov r14d , r9d jmp hexvar nop dword ptr [ rax ] cmp r14d , num je hexvar lea esi , [ rdi + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] sub r14d , num call hexvar add ebx , num mov r15 , rbp test r14d , r14d je hexvar movzx eax , byte ptr [ r15 ] lea rbp , [ r15 + num ] test al , al je hexvar movsx edi , al movzx eax , al movzx eax , word ptr [ r12 + rax * num ] test al , num jne hexvar sub r14d , num add ebx , num test al , hexvar je hexvar mov rsi , qword ptr [ rip + hexvar ] mov r15 , rbp call hexvar test r14d , r14d jne hexvar cmp ebx , r13d jge hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov esi , r13d lea rdx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] xor eax , eax sub esi , ebx mov ebx , r13d call hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov rsi , r15 lea rdi , [ rip + hexvar ] xor eax , eax call hexvar call hexvar mov rcx , qword ptr [ rsp + num ] mov rdi , qword ptr [ rsp + hexvar ] mov rsi , r15 mov rdx , rax call hexvar lea rdx , [ rax - num ] lea r8 , [ r15 + rax ] mov r15 , rbp cmp rdx , - num cmovb r15 , r8 jmp hexvar nop dword ptr [ rax + rax ] neg r13d mov byte ptr [ rsp + hexvar ] , num jmp hexvar
push r12 lea rdx , [ rip + hexvar ] mov rcx , rdi push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx sub rsp , hexvar movsxd rbx , dword ptr [ rip + hexvar ] mov r12 , rsp mov rax , rbx shl rbx , num mov rdi , r12 add eax , num add rbx , rdx lea rdx , [ rip + hexvar ] and eax , num mov dword ptr [ rip + hexvar ] , eax xor eax , eax call hexvar mov rcx , rbp mov rdx , r12 mov rdi , rbx mov esi , hexvar xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret nop dword ptr [ rax + rax ] xor eax , eax ret
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
movsxd r8 , esi movzx esi , byte ptr [ rdi ] add rdi , num mov eax , esi shr al , num and eax , num lea r8 , [ rax + r8 * num ] lea rax , [ rip + hexvar ] jmp qword ptr [ rax + r8 * num ]
push rbx movzx eax , byte ptr [ rdi ] lea rbx , [ rdi + num ] mov rdx , rax and edx , hexvar test al , al jns hexvar xor ecx , ecx nop dword ptr [ rax ] add rbx , num movzx edi , byte ptr [ rbx - num ] add ecx , num mov rax , rdi and eax , hexvar shl rax , cl or rdx , rax test dil , dil js hexvar mov ecx , esi lea rdi , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax and ecx , hexvar call hexvar mov rax , rbx pop rbx ret
mov edx , esi push rbx mov rbx , rdi and edx , hexvar and esi , hexvar lea rsi , [ rip + hexvar ] je hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , rbx pop rbx ret nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , rbx pop rbx ret
push rbx mov ecx , esi mov rbx , rdi and ecx , hexvar sub rsp , hexvar and esi , hexvar je hexvar mov rdx , rsp mov eax , hexvar xor r8d , r8d mov rdi , rdx test cl , num je hexvar mov rsi , rdi test r8d , r8d je hexvar mov byte ptr [ rdi ] , hexvar add rsi , num mov byte ptr [ rsi ] , hexvar lea rdi , [ rsi + num ] mov r8d , num mov byte ptr [ rsi + num ] , al add eax , num shr ecx , num cmp al , hexvar jne hexvar mov byte ptr [ rdi ] , num lea rsi , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar mov rax , rbx pop rbx ret nop dword ptr [ rax ] mov r10 , rsp mov esi , ecx mov rdi , r10 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] xor eax , eax mov rdx , r10 call hexvar add rsp , hexvar mov rax , rbx pop rbx ret
push rbx and esi , hexvar mov rbx , rdi sub rsp , hexvar mov r8 , rsp mov rdi , r8 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] xor eax , eax mov rdx , r8 call hexvar add rsp , hexvar mov rax , rbx pop rbx ret
push rbx movzx eax , byte ptr [ rdi ] lea rbx , [ rdi + num ] mov r8 , rax and r8d , hexvar test al , al jns hexvar xor ecx , ecx nop dword ptr [ rax ] add rbx , num movzx edi , byte ptr [ rbx - num ] add ecx , num mov rax , rdi and eax , hexvar shl rax , cl or r8 , rax test dil , dil js hexvar and esi , num xor eax , eax mov rcx , r8 mov qword ptr [ rip + hexvar ] , r8 cmp esi , num lea rdi , [ rip + hexvar ] lea rsi , [ rip + hexvar ] sete al mov dword ptr [ rdx ] , eax lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] cmovne rdx , rax xor eax , eax call hexvar mov rax , rbx pop rbx ret
mov ecx , esi xor eax , eax push rbx mov rbx , rdi and ecx , hexvar and esi , hexvar lea rdi , [ rip + hexvar ] setne al lea rsi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rcx mov dword ptr [ rdx ] , eax lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] cmove rdx , rax xor eax , eax call hexvar mov rax , rbx pop rbx ret
xor eax , eax xor ecx , ecx mov r9d , hexvar jmp hexvar nop dword ptr [ rax ] lea ecx , [ rax + num ] add rdi , num mov eax , ecx mul r9d shr edx , num lea eax , [ rdx + hexvar ] mov byte ptr [ rdi - num ] , al lea eax , [ rdx + rdx * num ] add eax , eax sub ecx , eax mov eax , ecx mov ecx , num add eax , hexvar mov byte ptr [ rdi - num ] , al cmp r8d , hexvar je hexvar mov eax , r8d mov edx , esi lea r8d , [ rax + num ] shr esi , num and edx , num test edx , edx je hexvar test ecx , ecx je hexvar mov byte ptr [ rdi ] , hexvar add rdi , num mov byte ptr [ rdi ] , hexvar cmp eax , num ja hexvar lea eax , [ r8 + hexvar ] add rdi , num mov ecx , num mov byte ptr [ rdi - num ] , al jmp hexvar nop word ptr cs : [ rax + rax ] mov byte ptr [ rdi ] , num ret
test esi , esi je hexvar xor eax , eax xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] cmp eax , num jg hexvar test sil , num je hexvar mov rdx , rdi test ecx , ecx je hexvar mov byte ptr [ rdi ] , hexvar add rdx , num mov byte ptr [ rdx ] , hexvar lea ecx , [ rax + hexvar ] lea rdi , [ rdx + num ] mov byte ptr [ rdx + num ] , cl mov ecx , num add eax , num shr esi , num jne hexvar mov byte ptr [ rdi ] , num ret
mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num ret
push r12 mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx xor ebx , ebx mov eax , ebx movzx eax , byte ptr [ r12 + rax ] test al , al je hexvar sub eax , hexvar add ebx , num cmp al , hexvar ja hexvar movzx eax , al movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr cs : [ rax + rax ] mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov eax , ebx movzx eax , byte ptr [ r12 + rax ] test al , al jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop or dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop or dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov dword ptr [ rip + hexvar ] , num jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r14 lea r14 , [ rip + hexvar ] push r13 mov r13 , rdi push r12 push rbp push rbx movzx eax , byte ptr [ rdi ] nop dword ptr [ rax ] test al , al je hexvar mov ebp , num lea r12 , [ rip + hexvar ] mov rbx , r14 jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar mov rbp , rax mov rdx , rbp mov rsi , rbx mov rdi , r13 call hexvar test eax , eax jne hexvar add rbp , r13 movzx eax , byte ptr [ rbp ] cmp al , hexvar je hexvar test al , al je hexvar add r12 , hexvar mov rbx , qword ptr [ r12 ] test rbx , rbx jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar mov rdi , r13 mov esi , hexvar call hexvar mov r13 , rax test rax , rax je hexvar movzx eax , byte ptr [ r13 ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ r13 + num ] add r13 , num test al , al jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rax , qword ptr [ r12 + num ] mov edx , dword ptr [ r12 + hexvar ] mov r13 , rbp or dword ptr [ rax ] , edx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar
push r12 push rbp push rbx xor ebx , ebx call hexvar nop dword ptr [ rax + rax ] mov edi , ebx add ebx , num call hexvar cmp ebx , hexvar jne hexvar mov r12 , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num cmp eax , - num ja hexvar lea rdx , [ rax + rax * num ] lea rbx , [ r12 + hexvar ] lea rax , [ rax + rdx * num ] lea rbp , [ r12 + rax * num + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar add rbx , hexvar cmp rbx , rbp je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rbx ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] add rbx , hexvar call hexvar cmp rbx , rbp jne hexvar mov rdi , r12 call hexvar mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , num pop rbx pop rbp pop r12 ret
push r13 push r12 mov r12 , rsi push rbp push rbx sub rsp , num mov rbp , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + hexvar ] mov rsi , rbp mov rdi , r13 call hexvar lea rbx , [ rax + num ] cmp rbp , rbx jbe hexvar sub rbp , rbx cmp rbp , hexvar jbe hexvar mov esi , hexvar mov edi , num call hexvar test rax , rax je hexvar add rbx , r13 mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , rbx mov qword ptr [ r12 ] , rax add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] add rsp , num xor r13d , r13d pop rbx mov rax , r13 pop rbp pop r12 pop r13 ret
sub rsp , num call hexvar test rax , rax setne al add rsp , num movzx eax , al ret
push r12 push rbp mov rbp , rsi push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar add eax , num and eax , hexvar lea edx , [ rax + num ] cmp r12 , rdx jb hexvar lea rdi , [ rbx + rax ] mov esi , num call qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar xor ecx , ecx mov qword ptr [ rsp + hexvar ] , rax test rax , rax je hexvar mov rdi , r12 mov dword ptr [ rsp + hexvar ] , ecx xor r15d , r15d mov ebp , hexvar lea rsi , [ rip + hexvar ] lea r13 , [ rip + hexvar ] call hexvar lea r14 , [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test rax , rax mov rbx , rax je hexvar nop dword ptr [ rax ] mov rcx , rbx mov edx , hexvar mov esi , num mov rdi , r13 call hexvar test rax , rax je hexvar mov rdx , r15 add rax , r13 xor rdx , rbp cmp rax , r13 jbe hexvar lea rcx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx esi , byte ptr [ rcx ] add rcx , num xor esi , edx shr rdx , num movzx esi , sil xor rdx , qword ptr [ r14 + rsi * num ] cmp rax , rcx jne hexvar mov r15d , edx not r15d jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rax , qword ptr [ rsp + num ] mov ecx , num cmp qword ptr [ rax ] , r15 je hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar xor ecx , ecx add rsp , hexvar mov eax , ecx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rdi , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp + num ] , ecx call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov ecx , dword ptr [ rsp + num ] jmp hexvar
mov rax , - num xor edx , edx div rsi cmp rax , rdi jbe hexvar jmp hexvar push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edi , num call hexvar
mov rax , - num xor edx , edx div rsi cmp rax , rdi jbe hexvar imul rdi , rsi jmp hexvar push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar
push rbx mov edx , num mov rbx , qword ptr [ rdi + hexvar ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov eax , num pop rbx ret
mov esi , num jmp hexvar
push rbx mov ebx , esi call hexvar test eax , eax je hexvar mov r8d , dword ptr [ rip + hexvar ] test r8d , r8d je hexvar mov rax , qword ptr [ rip + hexvar ] cmp ebx , dword ptr [ rax ] je hexvar lea rcx , [ rax + num ] xor edx , edx jmp hexvar nop dword ptr [ rax + rax ] mov rsi , rcx add rcx , num cmp dword ptr [ rcx - num ] , ebx je hexvar mov edx , edi lea edi , [ rdx + num ] cmp edi , r8d jne hexvar xor eax , eax pop rbx ret nop word ptr [ rax + rax ] mov ecx , edx mov edi , dword ptr [ rax + rcx * num ] test edi , edi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ rdx - num ] mov rcx , rsi mov esi , dword ptr [ rax + rsi * num ] test esi , esi je hexvar mov edx , ecx test edx , edx jne hexvar jmp hexvar nop dword ptr [ rax ] lea rax , [ rax + rdx * num ] pop rbx ret mov rax , rsi pop rbx ret
mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar ret nop dword ptr [ rax ] push rbx mov rsi , rdi mov rbx , rdi mov edi , hexvar mov dword ptr [ rip + hexvar ] , num call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num pop rbx ret nop xor esi , esi lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar
push rbp mov edx , num mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num mov rdx , rbp mov rsi , rbx movsxd rdi , eax pop rbx pop rbp jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rip + hexvar ] , edi jbe hexvar mov edx , edi mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar test esi , esi jne hexvar mov r8 , rax mov ecx , edi lea rdx , [ rip + hexvar ] xor eax , eax mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] add rsp , num ret nop word ptr [ rax + rax ] mov ecx , edi lea rdx , [ rip + hexvar ] mov esi , hexvar xor eax , eax lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] add rsp , num ret
cmp edi , hexvar je hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num je hexvar ret nop cmp edi , hexvar je hexvar jbe hexvar cmp edi , hexvar jne hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop sub edi , hexvar cmp edi , num ja hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret
push r12 xor eax , eax push rbp push rbx mov ebx , dword ptr [ rdi + hexvar ] cmp ebx , esi ja hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , esi jb hexvar lea eax , [ rsi + num ] mov dword ptr [ rdi + hexvar ] , eax test eax , eax je hexvar mov r12d , esi mov rbp , rdi cmp eax , hexvar ja hexvar mov esi , eax mov rdi , qword ptr [ rdi + hexvar ] add rsi , rsi call hexvar mov esi , dword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp + hexvar ] , rax shl rsi , num call hexvar mov rcx , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp + hexvar ] , rax test rcx , rcx je hexvar cmp ebx , dword ptr [ rbp + hexvar ] jae hexvar nop word ptr [ rax + rax ] mov edx , ebx mov esi , hexvar add ebx , num mov word ptr [ rcx + rdx * num ] , si mov dword ptr [ rax + rdx * num ] , num cmp dword ptr [ rbp + hexvar ] , ebx ja hexvar mov eax , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov esi , r12d mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rbp + hexvar ] , num pop rbx mov eax , hexvar pop rbp pop r12 ret nop dword ptr [ rax ] mov ebx , dword ptr [ rbp + hexvar ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov esi , ebx jmp hexvar
mov rcx , qword ptr [ rdi ] mov rdx , qword ptr [ rsi ] xor eax , eax cmp rcx , rdx seta al sbb eax , num ret
mov rax , qword ptr [ rdi + hexvar ] sub eax , dword ptr [ rsi + hexvar ] ret
mov edx , dword ptr [ rdi + hexvar ] mov r8d , num xor ecx , ecx jmp hexvar
mov edx , dword ptr [ rdi + hexvar ] xor r8d , r8d xor ecx , ecx jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + hexvar ] test r15 , r15 je hexvar mov rax , qword ptr [ rdi + hexvar ] mov r12 , qword ptr [ rdi + hexvar ] lea rsi , [ rdi + hexvar ] mov rdi , rbx lea r14 , [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar nop cmp r15 , hexvar mov r13d , hexvar mov rsi , qword ptr [ rsp ] lea rdi , [ rip + hexvar ] cmovbe r13 , r15 xor eax , eax mov qword ptr [ rsp + num ] , r13 mov ebp , r13d xor r13d , r13d call hexvar jmp hexvar nop dword ptr [ rax ] movzx esi , byte ptr [ r12 + r13 ] lea rdi , [ rip + hexvar ] xor eax , eax and ebx , num call hexvar cmp ebx , num je hexvar add r13 , num cmp r13 , hexvar je hexvar mov ebx , r13d cmp ebp , r13d jg hexvar mov rdi , r14 xor eax , eax and ebx , num call hexvar cmp ebx , num jne hexvar mov edi , hexvar add r13 , num call hexvar cmp r13 , hexvar jne hexvar xor ebx , ebx nop dword ptr [ rax ] movzx edi , byte ptr [ r12 + rbx ] lea eax , [ rdi - hexvar ] cmp eax , hexvar jbe hexvar mov edi , hexvar call hexvar add rbx , num cmp ebp , ebx jg hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar movsxd r13 , dword ptr [ rsp + num ] add qword ptr [ rsp ] , r13 add r12 , r13 sub r15 , r13 jne hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
mov rax , qword ptr [ rip + hexvar ] mov edi , dword ptr [ rdi ] mov esi , dword ptr [ rsi ] mov rcx , qword ptr [ rax + rdi * num ] mov rdx , qword ptr [ rax + rsi * num ] xor eax , eax cmp rcx , rdx seta al sbb eax , num test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + rdi * num ] mov rdx , qword ptr [ rax + rsi * num ] xor eax , eax cmp rcx , rdx seta al sbb eax , num ret
mov edx , num jmp hexvar
xor edx , edx jmp hexvar
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , rbp mov rbp , r12 call hexvar test r12 , r12 jne hexvar mov qword ptr [ rip + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , num pop rbp pop r12 ret
mov r11 , rcx cmp rdi , rcx jae hexvar movzx r9d , byte ptr [ rdi ] lea r8 , [ rdi + num ] mov rax , r9 and eax , hexvar test r9b , r9b jns hexvar mov ecx , num mov r10d , num nop cmp r11 , r8 je hexvar add r8 , num movzx r9d , byte ptr [ r8 - num ] add r10d , num mov rdi , r9 and edi , hexvar shl rdi , cl add ecx , num or rax , rdi test r9b , r9b jns hexvar cmp r10d , hexvar jne hexvar test rsi , rsi je hexvar cmp ecx , hexvar setbe dil mov dword ptr [ rsi ] , r10d test edx , edx je hexvar test dil , dil je hexvar and r9d , hexvar je hexvar mov rdx , - num shl rdx , cl or rax , rdx ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov edi , num test rsi , rsi jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar setbe dil jmp hexvar mov edi , num xor r9d , r9d xor ecx , ecx xor r10d , r10d xor eax , eax jmp hexvar mov edi , num mov ecx , num mov r10d , num jmp hexvar
sub rsp , num mov edx , esi mov rsi , rdi xor edi , edi call hexvar lea rdi , [ rip + hexvar ] add rsp , num mov rsi , rax xor eax , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edx lea rdx , [ rip + hexvar ] push rbx sub rsp , hexvar movsxd rbx , dword ptr [ rip + hexvar ] mov rax , rbx shl rbx , num add eax , num add rbx , rdx and eax , hexvar mov dword ptr [ rip + hexvar ] , eax test ebp , ebp jne hexvar mov rbp , rsp test rdi , rdi je hexvar mov rcx , rdi lea rdx , [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbp mov rdi , rbx mov esi , hexvar xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rcx , rsi mov rdi , rbx xor eax , eax mov esi , hexvar lea rdx , [ rip + hexvar ] call hexvar cmp ebp , num mov eax , num cmova ebp , eax add rsp , hexvar neg ebp lea eax , [ rbp + rbp + hexvar ] add rbx , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push r15 push r14 push r13 mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , rdx mov edx , num push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rbp , qword ptr [ rbx ] mov r14 , rax mov rdi , rbp call hexvar mov rdi , r12 mov r15 , rax call hexvar mov edx , dword ptr [ rbx + hexvar ] add rax , r15 lea r15 , [ rax + num ] test edx , edx je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov r8 , r12 mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , r15 mov rdi , r13 xor eax , eax call hexvar add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r15 , qword ptr [ r13 ] lea rbx , [ rax + num ] test r15 , r15 je hexvar mov rdi , r15 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r15 mov r13 , rax test rax , rax je hexvar mov rcx , rbp lea rdx , [ rip + hexvar ] mov rsi , rbx mov rdi , r13 xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , r14 call hexvar add rbx , rax mov rdi , rbx call hexvar mov r9 , r12 mov r8 , r14 mov r13 , rax test rax , rax jne hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r13d , r13d call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp mov rbp , rdx xor edx , edx push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rbx + num ] lea rdi , [ rbx + hexvar ] mov edx , hexvar mov esi , num call hexvar cmp rax , hexvar jne hexvar cmp word ptr [ rbx + hexvar ] , hexvar jne hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbx mov ebx , edx cmp edx , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , edx movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop word ptr [ rax + rax ] mov eax , esi shr rsi , hexvar bswap eax mov dword ptr [ rdi + num ] , eax mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi + num ] , sil shr rsi , num mov byte ptr [ rdi ] , sil pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop word ptr [ rax + rax ] mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , num mov byte ptr [ rdi + num ] , al mov byte ptr [ rdi ] , sil ret push rbx lea rsi , [ rip + hexvar ] mov ebx , edx xor edi , edi mov edx , num call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 lea r12 , [ rip + hexvar ] push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop word ptr [ rax + rax ] mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov rbp , qword ptr [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax test rdi , rdi je hexvar mov rbx , rdi jmp hexvar nop mov eax , edx add rax , qword ptr [ rsp + hexvar ] add edx , num mov rbx , qword ptr [ rax ] mov dword ptr [ rsp + num ] , edx test rbx , rbx je hexvar mov rdi , rbx call hexvar mov rdi , rbp mov rsi , rbx mov rdx , rax mov r12 , rax call hexvar mov edx , dword ptr [ rsp + num ] add rbp , r12 cmp edx , hexvar jbe hexvar mov rax , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rsp + hexvar ] , rdx test rbx , rbx jne hexvar mov byte ptr [ rbp ] , num mov rax , qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 ret
push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax test rsi , rsi je hexvar mov rbx , rsi mov rbp , rdi jmp hexvar nop dword ptr [ rax ] mov eax , edx add rax , qword ptr [ rsp + hexvar ] add edx , num mov rbx , qword ptr [ rax ] mov dword ptr [ rsp + num ] , edx test rbx , rbx je hexvar mov rdi , rbx call hexvar mov rdi , rbp mov rsi , rbx mov rdx , rax mov r13 , rax call hexvar mov edx , dword ptr [ rsp + num ] add rbp , r13 cmp edx , hexvar jbe hexvar mov rax , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rsp + hexvar ] , rdx test rbx , rbx jne hexvar mov byte ptr [ rbp ] , num add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rbp , rdi jmp hexvar
push rbp push rbx sub rsp , hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax test rdi , rdi je hexvar mov rbp , rax xor ebx , ebx jmp hexvar nop word ptr [ rax + rax ] mov edx , eax add eax , num add rdx , rbp mov dword ptr [ rsp + num ] , eax mov rdi , qword ptr [ rdx ] test rdi , rdi je hexvar call hexvar add rbx , rax mov eax , dword ptr [ rsp + num ] cmp eax , hexvar jbe hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rdx ] lea rax , [ rdx + num ] mov qword ptr [ rsp + hexvar ] , rax test rdi , rdi jne hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] xor ebx , ebx add rsp , hexvar mov rax , rbx pop rbx pop rbp ret
cmp edi , num je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp edi , hexvar je hexvar jbe hexvar lea rax , [ rip + hexvar ] cmp edi , hexvar je hexvar cmp edi , hexvar mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp edi , num je hexvar lea rax , [ rip + hexvar ] ja hexvar cmp edi , num mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] cmp edi , num mov edx , num lea rax , [ rip + hexvar ] cmovne rax , rdx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
movzx ecx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] mov rdx , rcx test byte ptr [ rax + rcx * num ] , hexvar je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar mov rax , rdi test dl , dl jne hexvar jmp hexvar nop word ptr [ rax + rax ] movzx edx , byte ptr [ rdi ] test dl , dl je hexvar add rdi , num cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdi + num ] add rdi , num mov rax , rdi test dl , dl jne hexvar ret
push rbx mov rbx , rdi sub rsp , hexvar mov rsi , rsp call hexvar test rax , rax cmove rax , rbx mov rdi , rax call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rbp , rsi test rsi , rsi je hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov ebp , num mov ebx , num jmp hexvar mov rdi , rbx imul rdi , rbp call hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdi je hexvar ret nop word ptr [ rax + rax ] sub rsp , num xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rip ] mov qword ptr [ rsp ] , rax mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + hexvar ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rsp ] mov rdi , rax call hexvar mov rdx , rax mov rcx , qword ptr [ rsp ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov r9d , num lea r8 , [ rip ] mov ecx , num mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + num ] cmp rax , num je hexvar cmp rax , num jb hexvar cmp rax , num je hexvar cmp rax , num je hexvar mov rax , qword ptr [ rsp + hexvar ] movzx edx , word ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx eax , word ptr [ rax ] shr ax , num mov edx , eax mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx edx , word ptr [ rax + num ] mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx eax , word ptr [ rax + num ] shr ax , num mov edx , eax mov rax , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl nop add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + num ] mov word ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov word ptr [ rax + num ] , num nop add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp qword ptr [ rsp + num ] , num je hexvar mov rax , qword ptr [ rsp + num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsp + num ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov ecx , num mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rsp + num ] mov rdi , rax call hexvar nop add rsp , hexvar ret
sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rsp + num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov ecx , num mov rdi , rax mov eax , num call hexvar test eax , eax je hexvar mov rax , qword ptr [ rsp + num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar ret
push r12 mov rcx , qword ptr [ rip + hexvar ] mov edx , num push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi lea rdi , [ rip + hexvar ] call hexvar cmp rbx , rbp ja hexvar sub rbp , rbx shr rbp , num lea r12 , [ rbx + rbp * num + num ] lea rbp , [ rip + hexvar ] nop movsx edx , word ptr [ rbx ] mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor eax , eax add rbx , num call hexvar cmp rbx , r12 jne hexvar mov rsi , qword ptr [ rip + hexvar ] pop rbx mov edi , hexvar pop rbp pop r12 jmp hexvar
push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx ecx , byte ptr [ rbx ] lea rax , [ rip + hexvar ] mov rdx , rcx test byte ptr [ rax + rcx * num ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , rbp mov rdx , rbx xor esi , esi mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] test eax , eax setne dl xor edi , edi sub eax , edx lea rdx , [ rip + hexvar ] mov r12 , qword ptr [ rdx + rax * num ] mov edx , num call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] lea rbx , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov rdi , rbx call hexvar jmp hexvar
sub rsp , num nop dword ptr [ rax ] call hexvar cmp eax , hexvar je hexvar cmp eax , - num je hexvar cmp eax , hexvar jne hexvar add dword ptr [ rip + hexvar ] , num call hexvar cmp eax , hexvar jne hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , - num jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov eax , dword ptr [ rax - num ] mov qword ptr [ rip + hexvar ] , rdx mov dword ptr [ rip + hexvar ] , eax ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rax ] , edx ret
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rax ] , edx ret
push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx mov ebx , edx sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp eax , num ja hexvar mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov qword ptr [ rdx + rcx * num ] , rbp lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rcx * num ] , esi mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] lea rsi , [ rip + hexvar ] mov rdi , r13 add eax , num mov dword ptr [ rip + hexvar ] , ebx mov qword ptr [ rsi + rcx * num ] , rdx mov dword ptr [ rip + hexvar ] , eax call hexvar mov edi , hexvar mov rbp , rax call hexvar lea edi , [ rbp + num ] mov dword ptr [ rax + hexvar ] , ebp mov rbx , rax mov qword ptr [ rax ] , num call hexvar lea rdx , [ rbp + num ] mov rsi , r13 mov qword ptr [ rbx + num ] , rax mov r12 , rax lea rdi , [ rax + num ] mov byte ptr [ rax ] , hexvar call hexvar mov byte ptr [ r12 + rbp + num ] , num mov rax , qword ptr [ rbx + num ] mov rdi , rbx mov byte ptr [ r12 + rbp + num ] , num add ebp , num add rax , num mov dword ptr [ rbx + hexvar ] , ebp mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx mov ebx , edx cmp eax , num ja hexvar mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov qword ptr [ rdx + rcx * num ] , r12 lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rcx * num ] , esi movzx edx , byte ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] shr dl , num and edx , num mov dword ptr [ rsi + rcx * num ] , edx mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] lea rsi , [ rip + hexvar ] and ebx , num mov rdi , rbp add eax , num mov qword ptr [ rsi + rcx * num ] , rdx movzx edx , byte ptr [ rip + hexvar ] shl ebx , num mov esi , hexvar mov qword ptr [ rip + hexvar ] , rbp and edx , hexvar mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rip + hexvar ] , num or edx , ebx mov byte ptr [ rip + hexvar ] , dl call hexvar pop rbx pop rbp mov rdi , rax pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
mov dword ptr [ rip + hexvar ] , edi ret
mov eax , dword ptr [ rip + hexvar ] ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov dword ptr [ rip + hexvar ] , edi ret
mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
push r12 push rbp mov rbp , rdi push rbx movsxd rbx , esi lea r12 , [ rbx + num ] mov rdi , r12 call hexvar test rax , rax je hexvar xor edx , edx test rbx , rbx je hexvar nop word ptr [ rax + rax ] movzx ecx , byte ptr [ rbp + rdx ] mov byte ptr [ rax + rdx ] , cl add rdx , num cmp rbx , rdx jne hexvar mov byte ptr [ rax + rbx + num ] , num mov rsi , r12 mov rdi , rax mov byte ptr [ rax + rbx ] , num call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rdi , rbx pop rbx mov esi , eax jmp hexvar
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
test rdi , rdi je hexvar push rbx mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rcx * num ] lea rax , [ rdx + rsi ] cmp qword ptr [ rax ] , num je hexvar mov rdi , qword ptr [ rip + hexvar ] movzx r8d , byte ptr [ rip + hexvar ] add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi ] , r8b mov rax , qword ptr [ rax ] mov qword ptr [ rax + hexvar ] , rdi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edi lea rax , [ rdx + rsi + num ] mov qword ptr [ rax ] , rbx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx pop rbx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret mov rax , qword ptr [ rip + hexvar ] shl rax , num jmp hexvar nop dword ptr [ rax ] ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rdi + num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rax mov dword ptr [ rdi + hexvar ] , num test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rdi , qword ptr [ rdx + rcx * num ] je hexvar ret nop dword ptr [ rax + rax ] mov edx , dword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rdi ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rax ] cmp rdx , rbx je hexvar test rdx , rdx je hexvar mov rcx , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rcx ] , dl mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov qword ptr [ rax ] , rbx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al pop rbx ret test rbx , rbx je hexvar mov rax , qword ptr [ rip + hexvar ] shl rax , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rbx + num ] mov byte ptr [ rbx ] , al test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + rcx * num ] movsxd rax , dword ptr [ rip + hexvar ] add rax , qword ptr [ rcx + num ] cmp rbx , rax jae hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rbx + num ] movzx eax , byte ptr [ rbx ] mov byte ptr [ rbx ] , num mov byte ptr [ rip + hexvar ] , dl add rsp , hexvar pop rbx pop rbp ret nop mov qword ptr [ rip + hexvar ] , rdx mov rbp , qword ptr [ rip + hexvar ] call hexvar mov edx , eax xor eax , eax cmp edx , num je hexvar cmp edx , num je hexvar test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar nop sub rbx , rbp movsxd rbx , ebx add rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar
mov r11 , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov qword ptr [ rsp - num ] , rbx cmp r11 , rbx jae hexvar mov r14d , dword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] xor r12d , r12d lea rbp , [ rip + hexvar ] lea r9 , [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea r15 , [ rip + hexvar ] lea r10 , [ rip + hexvar ] lea rbx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ r11 ] mov esi , num test dl , dl je hexvar lea rdi , [ rip + hexvar ] movzx esi , byte ptr [ rdi + rdx ] movsxd rcx , eax mov edi , num cmp word ptr [ rbp + rcx * num ] , num cmovne r13 , r11 cmovne r14d , eax cmovne r12d , edi jmp hexvar nop dword ptr [ rax ] movsx eax , word ptr [ r10 + rcx * num ] cmp eax , hexvar jle hexvar mov esi , esi movzx esi , byte ptr [ rbx + rsi ] movsxd rcx , eax movzx edx , word ptr [ r9 + rcx * num ] add edx , esi movsxd rdx , edx movsx edi , word ptr [ r8 + rdx * num ] cmp edi , eax jne hexvar movzx eax , word ptr [ r15 + rdx * num ] add r11 , num cmp r11 , qword ptr [ rsp - num ] jne hexvar test r12b , r12b je hexvar mov dword ptr [ rip + hexvar ] , r14d mov qword ptr [ rip + hexvar ] , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r13 mov edx , hexvar push r12 mov r12 , rdi push rbp push rbx mov rbx , rsi mov rdi , rbx sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov r13 , rax mov rax , qword ptr [ rsp + num ] cmp byte ptr [ rax ] , num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rbp , [ r12 + num ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ rbx + hexvar ] , r13 jmp hexvar nop mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx mov rdi , r13 call hexvar mov rdx , rbx mov rdi , r12 mov rsi , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r12 xor eax , eax lea rdi , [ rip + hexvar ] push rbp push rbx call hexvar mov rbp , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp + hexvar ] , num je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , rbx mov rax , qword ptr [ rbp + hexvar ] mulsd xmm0 , qword ptr [ rip + hexvar ] test rax , rax js hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax divsd xmm0 , xmm1 lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rbp , qword ptr [ rbp + hexvar ] cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp ] mov rbx , qword ptr [ rbp + hexvar ] mov rdi , r12 xor eax , eax sub rbx , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar test rbx , rbx jns hexvar mov rax , rbx and ebx , num pxor xmm0 , xmm0 shr rax , num or rax , rbx cvtsi2sd xmm0 , rax addsd xmm0 , xmm0 jmp hexvar nop dword ptr [ rax ] mov rdx , rax and eax , num pxor xmm1 , xmm1 shr rdx , num or rdx , rax cvtsi2sd xmm1 , rdx addsd xmm1 , xmm1 jmp hexvar nop pop rbx pop rbp pop r12 ret
push r14 lea r14 , [ rip + hexvar ] push r13 lea r13 , [ rip + hexvar ] push r12 push rbp mov rbp , rdi push rbx movzx ebx , byte ptr [ rdi ] test bl , bl jne hexvar jmp hexvar nop dword ptr [ rax ] add rbp , num movzx ebx , byte ptr [ rbp ] cmp bl , hexvar je hexvar movzx eax , bl test byte ptr [ r13 + rax * num ] , hexvar jne hexvar test bl , bl je hexvar movzx ebx , byte ptr [ rbp + num ] lea r12 , [ rbp + num ] cmp bl , hexvar je hexvar test bl , bl jne hexvar jmp hexvar nop word ptr [ rax + rax ] add r12 , num movzx ebx , byte ptr [ r12 ] test bl , bl je hexvar cmp bl , hexvar je hexvar movzx eax , bl test byte ptr [ r13 + rax * num ] , hexvar je hexvar mov byte ptr [ r12 ] , num mov rsi , r14 mov rdi , rbp call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num mov byte ptr [ r12 ] , bl mov rbp , r12 test bl , bl jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num xor ecx , ecx lea rdx , [ rip + hexvar ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar xor ecx , ecx lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , num mov rdi , rax jmp hexvar
sub rsp , num xor ecx , ecx lea rdx , [ rip + hexvar ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar xor ecx , ecx lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , num mov rdi , rax jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , num pop rbx pop rbp ret
push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rax ] , rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , rax test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ r12 + num ] , rbx mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov rax , r12 pop rbx pop rbp mov qword ptr [ r12 + num ] , num pop r12 ret
sub rsp , num mov rsi , qword ptr [ rsi + num ] mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax sete al add rsp , num movzx eax , al ret
mov rdi , qword ptr [ rdi + num ] jmp hexvar
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
push rbx mov r8 , qword ptr [ rip + hexvar ] xor r9d , r9d xor ecx , ecx push num mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rbx , rdi push num call hexvar cmp qword ptr [ rip + hexvar ] , num pop rax pop rdx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rsi , rbx mov edi , hexvar mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax ] , rdx call hexvar mov rsi , qword ptr [ rip + hexvar ] test rsi , rsi je hexvar mov rdx , rax mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax pop rbx ret nop word ptr cs : [ rax + rax ] mov rsi , rbx mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rip + hexvar ] , rbx add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , num jne hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] or byte ptr [ rip + hexvar ] , num mov qword ptr [ rax + num ] , rbx mov qword ptr [ rax ] , rdx mov dword ptr [ rax + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , rax ret
push r15 mov r15 , rdi mov edi , hexvar push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 mov r12d , edx push rbp push rbx mov ebx , ecx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rdi , qword ptr [ rsp + num ] lea rdx , [ rip + hexvar ] xor esi , esi mov qword ptr [ rax ] , num mov rbp , rax mov qword ptr [ rax + num ] , r15 call hexvar mov dword ptr [ rbp + hexvar ] , r12d cdqe mov dword ptr [ rbp + hexvar ] , ebx mov qword ptr [ rbp + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , r14 mov qword ptr [ rbp + hexvar ] , r13 cmp rax , num je hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar lea rbx , [ rip + hexvar ] mov qword ptr [ rbx ] , rbp add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop or r12d , ebx je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num lea rbx , [ rip + hexvar ] je hexvar nop mov rbx , qword ptr [ rbx ] mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar xor esi , esi mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rbx ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx ] test rax , rax jne hexvar jmp hexvar lea rbx , [ rip + hexvar ] mov rbx , qword ptr [ rbx ] mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp qword ptr [ rax ] , num mov rbx , rax jne hexvar jmp hexvar mov rbx , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] cmp rax , rdx jbe hexvar lea rdx , [ rax - num ] mov rax , qword ptr [ rax - num ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax ret push rax call hexvar
push rbx mov edi , hexvar mov rbx , qword ptr [ rip + hexvar ] call hexvar lea rcx , [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax lea rdx , [ rax + hexvar ] mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] cmp rax , rcx jae hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , rcx pop rbx mov qword ptr [ rip + hexvar ] , rdx ret call hexvar
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rax ] , num mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp mov rax , qword ptr [ rip + hexvar ] pop rbx pop rbp mov qword ptr [ rip + hexvar ] , rax pop r12 ret
cmp qword ptr [ rip + hexvar ] , num je hexvar test ecx , ecx je hexvar ret nop mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar test rdx , rdx je hexvar mov qword ptr [ rip + hexvar ] , rdx ret nop dword ptr [ rax ] test rsi , rsi cmovne rdi , rsi mov rdx , rdi jmp hexvar nop dword ptr [ rax ] mov rdx , rdi jmp hexvar
push rbp mov rbp , rdi xor r9d , r9d mov rax , rsi push rbx mov rbx , rdx mov rdx , rax sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + hexvar ] , num lea rsi , [ rdi + hexvar ] setne r9b xor r8d , r8d cmp qword ptr [ rdi + hexvar ] , num setne r8b add rdi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rbx mov rax , qword ptr [ rip + hexvar ] cmp rax , rdx jbe hexvar lea rdx , [ rax - num ] mov rax , qword ptr [ rax - num ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret call hexvar
mov dword ptr [ rip + hexvar ] , edi ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi cmp qword ptr [ rax + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbx or byte ptr [ rax + hexvar ] , num pop rbx ret
push rbp mov ebp , edi mov edi , hexvar push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , ebp mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
push r15 mov r15d , edi mov edi , hexvar push r14 mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov dword ptr [ rax + hexvar ] , r15d mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r12 mov r12 , rsi push rbp mov ebp , edi mov edi , hexvar push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
jmp hexvar nop word ptr [ rax + rax ] add rdi , num cmp byte ptr [ rdi ] , num jne hexvar ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
mov qword ptr [ rip + hexvar ] , rdi ret
cmp qword ptr [ rip + hexvar ] , num je hexvar test esi , esi jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , rdi mov dword ptr [ rip + hexvar ] , esi ret
push r13 mov r13 , rdi mov edi , hexvar push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx sub rsp , hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar test edi , edi jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num mov r12d , hexvar lea ebp , [ rax - num ] test eax , eax je hexvar nop word ptr [ rax + rax ] mov eax , r12d jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , num mov edi , num mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar xor esi , esi mov rdi , rbx mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar sub ebp , num add dword ptr [ rip + hexvar ] , num cmp ebp , - num jne hexvar mov edi , num call hexvar call hexvar mov esi , num xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
test rdi , rdi je hexvar push rbp lea rbp , [ rip - hexvar ] push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop xor edx , edx mov rsi , rbp mov rdi , rbx call hexvar jmp hexvar nop ret
mov eax , dword ptr [ rdi + hexvar ] test eax , eax je hexvar or dword ptr [ rdx + hexvar ] , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
push rbx mov edi , hexvar mov rbx , qword ptr [ rip + hexvar ] call hexvar mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test esi , esi jne hexvar mov qword ptr [ rip + hexvar ] , rdi mov dword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rax ] , rdi lea rax , [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax cmp qword ptr [ rdi + hexvar ] , num je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] cmp qword ptr [ rip + hexvar ] , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov qword ptr [ rax ] , rdi lea rax , [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rdx , rbx pop rbx lea rsi , [ rip - hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rbp , rdi nop dword ptr [ rax ] mov rdi , rbx call rbp mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rbp , rdi nop dword ptr [ rax ] mov rdi , rbx call rbp mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret
push r15 lea rax , [ rdi + hexvar ] push r14 push r13 lea r13 , [ rdi + hexvar ] push r12 push rbp push rbx sub rsp , num movzx ebx , byte ptr [ rsi ] test edx , edx cmovne r13 , rax test bl , bl je hexvar mov r15 , rdi mov rbp , rsi lea r12 , [ rip + hexvar ] mov r14d , edx nop dword ptr [ rax + rax ] lea eax , [ rbx - hexvar ] cmp al , hexvar ja hexvar movzx eax , al movsxd rax , dword ptr [ r12 + rax * num ] add rax , r12 jmp rax nop or dword ptr [ r13 ] , hexvar nop dword ptr [ rax ] add rbp , num movzx ebx , byte ptr [ rbp ] test bl , bl jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] or dword ptr [ r13 ] , hexvar jmp hexvar nop or dword ptr [ r13 ] , num jmp hexvar nop word ptr [ rax + rax ] or dword ptr [ r13 ] , num jmp hexvar nop word ptr [ rax + rax ] or dword ptr [ r13 ] , num jmp hexvar nop word ptr [ rax + rax ] test r14d , r14d jne hexvar lea r13 , [ r15 + hexvar ] mov r14d , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar movsx esi , bl mov rdi , rax mov edx , esi xor eax , eax call hexvar jmp hexvar nop lea r13 , [ r15 + hexvar ] xor r14d , r14d jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rdx , rsi mov rsi , rdi lea rdi , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] call qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rax mov rax , qword ptr [ rip + hexvar ] je hexvar lea rdx , [ rsi + num ] mov qword ptr [ rax + rsi * num ] , rbx mov qword ptr [ rip + hexvar ] , rdx pop rbx ret nop add rsi , num mov rdi , rax lea rdx , [ rsi + rsi ] shl rsi , num mov qword ptr [ rip + hexvar ] , rdx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , hexvar mov dword ptr [ rip + hexvar ] , edi xor ecx , ecx xor edx , edx mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea r8 , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num add dword ptr [ rip + hexvar ] , num call hexvar add rsp , hexvar ret
add dword ptr [ rip + hexvar ] , num mov r9d , esi mov r8 , rdi xor ecx , ecx mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rdi , [ rip + hexvar ] jmp hexvar
mov eax , num test r8d , r8d jne hexvar test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar mov esi , dword ptr [ rdx + hexvar ] xor esi , dword ptr [ rcx + hexvar ] and esi , hexvar jne hexvar push rbp mov rax , rdx xor esi , esi xor edx , edx push rbx mov rbx , rcx sub rsp , num mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbx ] xor edx , edx xor esi , esi mov rbp , rax call hexvar test rbp , rbp je hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp + hexvar ] , rax setne al add rsp , num movzx eax , al pop rbx pop rbp ret nop xor eax , eax ret nop dword ptr [ rax + rax ] add rsp , num xor eax , eax pop rbx pop rbp ret
mov rdx , qword ptr [ rsi ] mov rcx , qword ptr [ rdi ] mov eax , hexvar mov rsi , qword ptr [ rdx + hexvar ] cmp qword ptr [ rcx + hexvar ] , rsi jb hexvar mov eax , num ja hexvar mov eax , hexvar mov edx , dword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , edx jb hexvar seta al movzx eax , al ret
mov rdx , qword ptr [ rsi ] mov rcx , qword ptr [ rdi ] mov eax , hexvar mov rsi , qword ptr [ rdx + hexvar ] cmp qword ptr [ rcx + hexvar ] , rsi jb hexvar mov eax , num ja hexvar mov eax , hexvar mov edx , dword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , edx jb hexvar seta al movzx eax , al ret
push r14 mov r14 , r8 push r13 mov r13 , rsi push r12 mov r12 , rcx push rbp mov rbp , rdi push rbx mov rbx , rdx test rdi , rdi je hexvar lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + num ] , hexvar je hexvar mov rax , qword ptr [ rbp ] test rax , rax je hexvar cmp dword ptr [ rax + num ] , hexvar je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] test r13 , r13 mov qword ptr [ rax ] , rdx lea rdx , [ rip + hexvar ] cmove r13 , rdx mov qword ptr [ rbp ] , rax mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , r13 mov rsi , qword ptr [ r12 + hexvar ] mov rdx , r14 mov qword ptr [ rax + hexvar ] , rbx sub rdx , rsi mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ r12 + hexvar ] , num jne hexvar mov ecx , dword ptr [ rip + hexvar ] shr rbx , cl add rbx , r14 sub rbx , rsi shl rbx , cl mov qword ptr [ r12 + hexvar ] , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop cmp qword ptr [ rax + hexvar ] , r12 jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , rdi cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , qword ptr [ rip + hexvar ] push rbp mov qword ptr [ rip + hexvar ] , rax push rbx mov rbx , rdi test esi , esi js hexvar test rdi , rdi je hexvar lea ebp , [ rsi - num ] cmp ebp , - num jne hexvar jmp hexvar nop sub ebp , num cmp ebp , - num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp mov qword ptr [ rip + hexvar ] , r12 pop r12 ret nop dword ptr [ rax + rax ] mov rbp , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax ] mov rdi , rbx mov rsi , rbp call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp mov qword ptr [ rip + hexvar ] , r12 pop r12 ret
mov rdx , qword ptr [ rsi ] mov rcx , qword ptr [ rdi ] mov eax , hexvar mov rdx , qword ptr [ rdx + hexvar ] cmp qword ptr [ rcx + hexvar ] , rdx jb hexvar seta al movzx eax , al ret
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop word ptr cs : [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] test edx , edx js hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num xor esi , esi xor edi , edi mov dword ptr [ rip + hexvar ] , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar movzx r10d , byte ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] and r10d , num nop mov edx , dword ptr [ rax + hexvar ] test edx , edx js hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov ecx , dword ptr [ rdx + hexvar ] test ecx , hexvar jne hexvar mov rsi , qword ptr [ rdx + hexvar ] test rsi , rsi je hexvar cmp qword ptr [ rsi + hexvar ] , rdx je hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] cmp qword ptr [ r8 + hexvar ] , rdx jne hexvar mov rdi , qword ptr [ rdx + hexvar ] test rdi , rdi jne hexvar movzx edi , byte ptr [ rax + hexvar ] test dil , hexvar jne hexvar or edi , num mov byte ptr [ rax + hexvar ] , dil or ch , hexvar mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rsi test rsi , rsi je hexvar mov qword ptr [ rsi + hexvar ] , rdx sub dword ptr [ r8 + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov r9d , dword ptr [ rdi + hexvar ] test r9d , hexvar jne hexvar and r9d , hexvar jne hexvar test r10b , r10b jne hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi jne hexvar jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rdx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rsi jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num ja hexvar push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi test rdi , rdi je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , rbp mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num mov rsi , rdx mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov ecx , dword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num je hexvar nop dword ptr [ rax + rax ] test edx , edx je hexvar cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num nop dword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar
test rdi , rdi je hexvar push r12 lea r12 , [ rip - hexvar ] push rbp mov rbp , rsi push rbx mov rbx , rdi jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret ret
push rbp mov esi , num mov rbp , rdi push rbx sub rsp , num call hexvar mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , num pop rbx pop rbp ret
push rbx mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] xor ecx , ecx mov r8d , num mov edx , num call hexvar mov rbx , rax test rax , rax je hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar movzx eax , word ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num and ax , hexvar or ax , hexvar cmp dword ptr [ rdi + hexvar ] , num mov word ptr [ rbx + hexvar ] , ax jne hexvar or byte ptr [ rbx + hexvar ] , hexvar mov rsi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp xor eax , eax mov rbp , rdi mov edi , hexvar push rbx sub rsp , num or esi , dword ptr [ rip + hexvar ] setne al mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx call hexvar cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + num ] , rax je hexvar add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret
push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] call hexvar mov rdi , rbp mov rbx , rax call hexvar lea rdi , [ rax + num ] call hexvar movzx edx , byte ptr [ r13 ] mov r12 , rax test dl , dl je hexvar lea rdi , [ r13 + num ] mov rcx , rbx lea rax , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] add rcx , num add rdi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar movzx edx , byte ptr [ rbp ] mov byte ptr [ rcx ] , num lea rdi , [ rbp + num ] mov rcx , r12 test dl , dl je hexvar lea rax , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] add rcx , num add rdi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov byte ptr [ rcx ] , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar movzx eax , byte ptr [ rbx ] cmp al , byte ptr [ r12 ] jne hexvar test al , al je hexvar mov edx , num jmp hexvar nop word ptr [ rax + rax ] add rdx , num test cl , cl je hexvar mov ebp , edx movzx ecx , byte ptr [ rbx + rdx ] cmp cl , byte ptr [ r12 + rdx ] je hexvar mov rdi , rbx call hexvar mov rdi , r12 call hexvar add rsp , num mov eax , ebp pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea ebp , [ rbp + rbp * num ] add ebp , ebp jmp hexvar mov rcx , rbx jmp hexvar nop dword ptr [ rax + rax ] xor ebp , ebp jmp hexvar
push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rdi , rbp mov rbx , rax call hexvar add rax , rbx movzx edx , byte ptr [ rax ] test dl , dl je hexvar nop dword ptr [ rax + rax ] add rax , num add rbx , num mov byte ptr [ rbx - num ] , dl movzx edx , byte ptr [ rax ] test dl , dl jne hexvar mov byte ptr [ rbx ] , num add rsp , num pop rbx pop rbp ret
sub rsp , num mov rdi , qword ptr [ rdi ] call hexvar test eax , eax sete al add rsp , num movzx eax , al ret
cmp byte ptr [ rdi ] , num je hexvar push r14 lea r14 , [ rip + hexvar ] push r13 push r12 push rbp mov rbp , rdi push rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar mov r13 , rbx call hexvar sub r13 , rbp mov r12 , rax mov rax , qword ptr [ rip + hexvar ] lea rdi , [ r13 + num ] mov qword ptr [ r12 + num ] , rax call hexvar mov rdx , r13 mov rsi , rbp mov rdi , rax mov qword ptr [ r12 ] , rax call hexvar cmp byte ptr [ rbx ] , num mov qword ptr [ rip + hexvar ] , r12 mov byte ptr [ rax + r13 ] , num je hexvar cmp byte ptr [ rbx + num ] , num lea rbp , [ rbx + num ] je hexvar mov rsi , r14 mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar lea rbx , [ rbp + rax ] jmp hexvar nop word ptr [ rax + rax ] pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar mov rdx , qword ptr [ rip + hexvar ] xor ecx , ecx mov esi , num mov rdi , rbp call hexvar mov rbx , rax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] xor esi , esi mov rdi , rbx call hexvar test eax , eax mov eax , num cmove rbx , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx ] lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test al , hexvar je hexvar mov rdi , qword ptr [ rbx + hexvar ] xor edx , edx xor esi , esi call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar add rsp , num xor esi , esi mov rdi , rax pop rbx pop rbp jmp hexvar
push r12 lea r12 , [ rip + hexvar ] mov ecx , hexvar push rbp mov ebp , esi push rbx mov rsi , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbx test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , - num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov dword ptr [ rdx + hexvar ] , eax pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov edx , ebp call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbp , qword ptr [ rax ] call hexvar mov rdx , r12 mov rdi , rax mov rsi , rbp xor eax , eax call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov ebx , edi and edi , num jne hexvar test bl , hexvar jne hexvar test bl , num jne hexvar test bl , hexvar jne hexvar and ebx , num jne hexvar pop rbx ret nop xor eax , eax lea rdi , [ rip + hexvar ] call hexvar test bl , hexvar je hexvar xor eax , eax lea rdi , [ rip + hexvar ] call hexvar test bl , num je hexvar xor eax , eax lea rdi , [ rip + hexvar ] call hexvar test bl , hexvar je hexvar xor eax , eax lea rdi , [ rip + hexvar ] call hexvar and ebx , num je hexvar lea rdi , [ rip + hexvar ] xor eax , eax pop rbx jmp hexvar
mov rdx , qword ptr [ rdi ] xor r8d , r8d cmp qword ptr [ rip + hexvar ] , rdi mov rax , rdi sete r8b test rdx , rdx je hexvar xor edi , edi lea rsi , [ rip + hexvar ] cmp dword ptr [ rdx + num ] , hexvar ja hexvar mov ecx , dword ptr [ rdx + num ] movsxd rcx , dword ptr [ rsi + rcx * num ] add rcx , rsi jmp rcx nop dword ptr [ rax ] test rdi , rdi je hexvar xor r8d , r8d mov rax , rdx mov rdx , qword ptr [ rdx ] test rdx , rdx jne hexvar ret nop dword ptr [ rax ] mov rax , rdx mov rdx , qword ptr [ rdx ] xor edi , edi test rdx , rdx jne hexvar jmp hexvar nop test rdi , rdi je hexvar mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov rax , rdi ret nop dword ptr [ rax ] test byte ptr [ rdx + hexvar ] , num cmovne rax , rdi ret nop dword ptr [ rax ] mov rcx , qword ptr [ rdx + hexvar ] cmp dword ptr [ rcx + hexvar ] , num je hexvar mov rcx , qword ptr [ rcx + hexvar ] cmp byte ptr [ rcx ] , hexvar jne hexvar cmp byte ptr [ rcx + num ] , num jne hexvar test r8d , r8d jne hexvar mov rdi , rax jmp hexvar
push r12 push rbp mov ebp , esi push rbx lea rbx , [ rdi - hexvar ] mov r12 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi - hexvar ] , r12 je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + hexvar ] , r12 jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp je hexvar test eax , eax js hexvar test ebp , ebp jne hexvar add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 ret
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] ret
push r15 lea rdx , [ rip + hexvar ] mov ecx , hexvar push r14 push r13 push r12 mov r12 , rdi mov rdi , rdx push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , hexvar mov rsi , r12 mov rdi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov r13 , qword ptr [ rip + hexvar ] test r13 , r13 je hexvar xor ebp , ebp lea r14 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rbx , r13 jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov r15 , qword ptr [ rbx ] test rbp , rbp je hexvar mov rsi , r12 mov rdi , r15 call hexvar test eax , eax jne hexvar mov edx , num mov rsi , r14 xor edi , edi call hexvar mov rdx , r12 xor esi , esi mov rdi , rax xor eax , eax call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov r13 , qword ptr [ r13 + hexvar ] test r13 , r13 jne hexvar test rbp , rbp je hexvar mov edi , hexvar call hexvar mov rdi , r12 mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbp + num ] mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbp + num ] , rbx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar xor esi , esi mov rdi , rax xor eax , eax call hexvar mov r13 , qword ptr [ rip + hexvar ] test r13 , r13 jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , r12 xor esi , esi mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsp + num ] mov rdi , r15 call hexvar test eax , eax cmove rbp , r13 jmp hexvar
lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov r8 , qword ptr [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov ecx , hexvar lea rax , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , num xor edx , edx xor edi , edi mov esi , num mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , num xor esi , esi lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rcx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax + hexvar ] , rcx lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar mov rdx , rax test rax , rax je hexvar lea rsi , [ rax + hexvar ] lea rdi , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num and rdi , hexvar mov rcx , rsi mov qword ptr [ rax + hexvar ] , num xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov dword ptr [ rdx + hexvar ] , num movabs rax , hexvar mov qword ptr [ rdx + hexvar ] , rax lea rax , [ rdx + hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , hexvar mov rcx , qword ptr [ rax + num ] mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rcx ] , rsi cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rax + num ] , rsi mov rax , qword ptr [ rip + hexvar ] je hexvar lea rcx , [ rax - hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rsi lea rax , [ rdx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov rax , rdx pop rbx ret nop dword ptr [ rax ] mov rdi , rbx mov esi , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax mov rdi , rax jne hexvar add rsp , hexvar xor eax , eax pop rbx ret
test rsi , rsi je hexvar push r12 mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi mov rdi , rbx call r12 cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop ret
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
push r15 push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rdx lea rdx , [ rip - hexvar ] mov rsi , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ r12 + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r9 , qword ptr [ rsp + hexvar ] mov r8 , qword ptr [ rsp + num ] mov rcx , r13 mov rdx , r14 mov rsi , r12 mov rdi , rbp call hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 je hexvar cmp rbx , r14 je hexvar mov r8 , qword ptr [ r14 ] mov rdi , qword ptr [ r13 + num ] mov rsi , r8 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ r15 + num ] call hexvar test eax , eax je hexvar mov r9 , qword ptr [ rsp + hexvar ] mov r8 , qword ptr [ rsp + num ] mov rdx , r14 mov rcx , r15 mov rsi , r12 mov rdi , rbp call hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov r9 , qword ptr [ rsp + hexvar ] mov r8 , qword ptr [ rsp + num ] mov rdx , rbx mov rsi , r12 mov rcx , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rsi , r12 mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15 , rcx push r14 push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rdx lea rcx , [ rsp + hexvar ] lea rdx , [ rip - hexvar ] mov rsi , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ r13 + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbp + num ] mov rsi , qword ptr [ r14 ] call hexvar test eax , eax jne hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 je hexvar cmp rbx , r14 jne hexvar mov r8 , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] mov r9 , r15 mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov r8 , qword ptr [ rsp ] mov r9 , r15 mov rcx , rbp mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rsp ] mov rcx , r15 mov rsi , r13 mov rdi , r12 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r13 , rdi mov r12 , rsi mov r15 , rdx mov r14 , rcx jmp hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx ] call hexvar test eax , eax je hexvar mov rdx , rbx mov r9 , r14 mov r8 , r15 mov rcx , rbp mov rsi , r12 mov rdi , r13 call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r14 mov r14 , rcx push r13 mov r13 , rdx lea rdx , [ rip - hexvar ] push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar mov r12 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov rcx , rsp mov qword ptr [ rsp ] , num mov rsi , qword ptr [ r12 + num ] mov dword ptr [ rsp + num ] , num call hexvar mov eax , dword ptr [ rsp + num ] mov rdx , qword ptr [ rsp ] test eax , eax jne hexvar test rdx , rdx je hexvar mov r9 , r14 mov r8 , r13 mov rcx , r12 mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr cs : [ rax + rax ] mov rcx , r14 mov rdx , r13 mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r12 mov r12 , rdx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] test rsi , rsi je hexvar call hexvar mov rsi , qword ptr [ rbx ] lea rdi , [ rbp + hexvar ] mov rcx , r12 xor edx , edx call hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar mov rdx , r12 mov rdi , rbp call hexvar mov rdi , rbx pop rbx pop rbp pop r12 jmp hexvar
cmp qword ptr [ rdx ] , num je hexvar mov dword ptr [ rdx + num ] , num mov eax , num ret nop dword ptr [ rax + rax ] mov qword ptr [ rdx ] , rsi xor eax , eax ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar mov r12 , rdi mov r13 , rsi mov r15 , rdx mov r14 , rcx nop word ptr [ rax + rax ] mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov rsi , qword ptr [ rbp ] call hexvar test eax , eax jne hexvar mov r9 , r14 mov r8 , r15 mov rcx , rbx mov rdx , rbp mov rsi , r13 mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rcx , qword ptr [ r12 + hexvar ] mov r9 , r14 mov r8 , r13 xor esi , esi mov rdi , r12 call r15 mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar jmp hexvar
test rdi , rdi je hexvar push r14 push r13 lea r13 , [ rsi + hexvar ] push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi jmp hexvar nop dword ptr [ rax ] mov rcx , r13 mov rdx , r14 mov rsi , rax mov rdi , rbp call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar movsx esi , byte ptr [ rip + hexvar ] mov rbp , qword ptr [ rbx ] mov r14 , qword ptr [ r12 + hexvar ] test sil , sil je hexvar mov rdi , rbp call hexvar test rax , rax jne hexvar mov rsi , r14 mov rdi , rbp call hexvar test eax , eax je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rax ] mov rdi , qword ptr [ rbx ] call hexvar test eax , eax jne hexvar pop rbx mov eax , num pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 pop r13 pop r14 ret xor eax , eax ret
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
sub rsp , num xor edx , edx call hexvar add rsp , num mov rdi , rax jmp hexvar
push rbx mov rbx , rdi mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov ecx , num xor edx , edx xor esi , esi pop rbx lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx pop rbx mov rdi , rax xor eax , eax jmp hexvar
mov esi , num jmp hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test rsi , rsi je hexvar mov rdi , rbx lea rsi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rbx , rsp lea rsi , [ rip + hexvar ] xor eax , eax mov rdi , rbx call hexvar mov rdi , rbx call hexvar mov rbx , rax jmp hexvar
push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num pop rbx ret
xor edx , edx mov esi , num mov qword ptr [ rip + hexvar ] , num jmp hexvar
mov qword ptr [ rip + hexvar ] , rdi ret
push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num pop rbx ret
push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , rbp mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx mov rbx , qword ptr [ rsi ] jmp hexvar nop mov qword ptr [ rbp ] , rdx mov rbx , rdx test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r12 call hexvar mov rdx , qword ptr [ rbx ] test eax , eax je hexvar mov rbp , rbx jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov qword ptr [ rbp ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
push r13 push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx sub rsp , num mov rax , qword ptr [ rdi ] mov rdx , qword ptr [ rsi ] mov rdi , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] lea rax , [ rip + hexvar ] test rdi , rdi cmove rdi , rax test rbx , rbx cmove rbx , rax call hexvar mov rdi , rbx mov r13d , eax call hexvar mov edx , num cmp r13d , eax jl hexvar jg hexvar cmp r12 , rbp jb hexvar seta dl movzx edx , dl add rsp , num mov eax , edx pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] add rsp , num mov edx , hexvar pop rbx mov eax , edx pop rbp pop r12 pop r13 ret
cmp byte ptr [ rdi ] , hexvar mov rax , rdi jne hexvar nop dword ptr [ rax + rax ] add rax , num cmp byte ptr [ rax ] , hexvar je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar movzx esi , byte ptr [ rax + num ] cmp byte ptr [ rax + num ] , sil jne hexvar movzx edx , byte ptr [ rax + num ] cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar movzx ecx , byte ptr [ rax + hexvar ] lea rdx , [ rip + hexvar ] test byte ptr [ rdx + rcx * num ] , num je hexvar sub rsp , num lea rdi , [ rax + hexvar ] mov edx , hexvar xor esi , esi call hexvar add rsp , num ret mov eax , hexvar ret
push r14 mov r14 , r8 push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , rdi push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , rbp jne hexvar cmp dword ptr [ rbx + hexvar ] , esi jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ r12 + hexvar ] test rdx , rdx je hexvar mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rdx + num ] mov rsi , qword ptr [ rcx ] mov rdi , qword ptr [ rax ] call hexvar test eax , eax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , num mov rcx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + num ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , r14 test rcx , rcx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax add qword ptr [ rbx + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret mov rbx , qword ptr [ rbp + num ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , hexvar mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp pop r12 pop r13 pop r14 jmp hexvar mov edi , hexvar mov dword ptr [ rsp + hexvar ] , esi call hexvar mov esi , dword ptr [ rsp + hexvar ] mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rbp mov qword ptr [ rbx ] , rax mov dword ptr [ rbx + hexvar ] , esi mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num jmp hexvar lea rcx , [ rbx + hexvar ] jmp hexvar mov rbx , qword ptr [ rbp + num ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
test rsi , rsi je hexvar push r13 mov r13 , r8 push r12 push rbp mov rbp , rcx push rbx mov rbx , r9 sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] mov r12 , qword ptr [ rsi + num ] test rdi , rdi je hexvar xor ecx , ecx xor edx , edx mov rsi , r12 call hexvar test rax , rax je hexvar lea rax , [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] cmp r13 , rax je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rcx , rbx mov rdx , r13 mov rsi , rbp mov rdi , r12 call hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov esi , r9d mov rdi , rcx jmp hexvar nop word ptr [ rax + rax ] mov eax , num ret
push r13 xor edi , edi mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , r8 push rbp mov rbp , rcx push rbx mov rbx , rdx mov edx , num sub rsp , num call hexvar add rsp , num mov r8 , r13 mov rcx , r12 mov rdx , rbp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp pop r12 pop r13 jmp hexvar
push r13 xor edi , edi mov r13 , rsi lea rsi , [ rip + hexvar ] push r12 mov r12 , r8 push rbp mov rbp , rcx push rbx mov rbx , rdx mov edx , num sub rsp , num call hexvar add rsp , num mov r8 , r13 mov rcx , r12 mov rdx , rbp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp pop r12 pop r13 jmp hexvar
push r12 mov r12 , rdi mov rdi , rdx push rbp mov rbp , rsi push rbx mov rbx , rdx sub rsp , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdx , rsp mov rdi , rbx lea rsi , [ rip + hexvar ] mov qword ptr [ rsp + num ] , r12 mov qword ptr [ rsp + hexvar ] , rbp mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp ] , num call hexvar mov eax , dword ptr [ rsp ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov ecx , num mov edx , num mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov edi , hexvar call hexvar mov ecx , hexvar mov edx , hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx mov rdi , rax xor eax , eax jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov ecx , num mov edx , num mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov edi , hexvar call hexvar mov ecx , hexvar mov edx , hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx mov rdi , rax xor eax , eax jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp qword ptr [ rip + hexvar ]
mov dword ptr [ rip + hexvar ] , num jmp qword ptr [ rip + hexvar ]
sub rsp , num call hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num ret nop dword ptr [ rax ] add rsp , num jmp hexvar
lea rdi , [ rip + hexvar ] jmp hexvar
xor edx , edx lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov ecx , hexvar mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar add rsp , num ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push r12 push rbp push rbx mov ebx , esi test rdi , rdi je hexvar lea rax , [ rip + hexvar ] mov rbp , rdi mov r12 , rdx mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test r12 , r12 je hexvar cmp dword ptr [ rip + hexvar ] , num jne hexvar nop dword ptr [ rax ] movsxd rax , ebx pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar add rax , qword ptr [ rdx + hexvar ] pop rbx pop rbp pop r12 mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r12 push rbp push rbx mov rbx , rsi test rdi , rdi je hexvar lea rax , [ rip + hexvar ] mov rbp , rdi mov r12 , rdx mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov rbx , rax test rax , rax jne hexvar mov edi , hexvar call hexvar mov edx , dword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num bswap edx mov dword ptr [ rax + num ] , edx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] test r12 , r12 je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ] mov rax , rbx pop rbx pop rbp pop r12 ret lea rbp , [ rax + num ] shr rbp , num lea rdi , [ rbp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx mov qword ptr [ rax ] , rbp lea r8 , [ rax + num ] add rsi , num movzx edi , byte ptr [ rsi - num ] lea ecx , [ rdi - hexvar ] cmp ecx , num jbe hexvar lea ecx , [ rdi - hexvar ] and ecx , hexvar shl edx , num sub rbx , num add edx , ecx test bl , num jne hexvar mov byte ptr [ r8 ] , dl test rbx , rbx je hexvar add rsi , num movzx edi , byte ptr [ rsi - num ] add r8 , num xor edx , edx lea ecx , [ rdi - hexvar ] cmp ecx , num jbe hexvar jmp hexvar
sub rsp , num movsxd rsi , esi call hexvar add rsp , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi mov edi , hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi mov edi , hexvar push rbx mov rbx , rsi sub rsp , num call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rsi push rbx call hexvar mov dword ptr [ rax ] , r12d mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov ebp , edi mov edi , hexvar push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , ebp mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx je hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] cmp ebp , hexvar je hexvar mov edx , ebp and edx , hexvar cmp edx , hexvar je hexvar cmp ebp , hexvar je hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
push r13 mov r13d , edi mov edi , hexvar push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , r13d mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] cmp dword ptr [ rbp + hexvar ] , num jne hexvar cmp dword ptr [ r12 + hexvar ] , num jne hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , r12d mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] cmp dword ptr [ rbp + hexvar ] , num jne hexvar lea edx , [ r12 - hexvar ] cmp edx , num jbe hexvar cmp r12d , hexvar je hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rsi jmp hexvar
push r12 mov r12 , rdi mov edi , hexvar push rbp mov rbp , rsi push rbx call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , r12 mov dword ptr [ rbx + num ] , eax mov rax , rbx mov qword ptr [ rbx + hexvar ] , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov rbp , rsi push rbx call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rbp mov dword ptr [ rbx + num ] , eax mov rax , rbx mov dword ptr [ rbx + hexvar ] , num pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] ret
mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar jmp rdx nop dword ptr [ rax ] mov rax , rdi ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
push r12 xor eax , eax mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , r12 call qword ptr [ rbx + hexvar ] mov eax , num add rbp , num mov rbx , qword ptr [ rbp ] test rbx , rbx jne hexvar test eax , eax je hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar pop rbx mov rdi , r12 pop rbp mov rsi , rax pop r12 xor eax , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp mov rbp , rdi push rbx lea rbx , [ rip + hexvar ] sub rsp , num mov rdi , qword ptr [ rax + hexvar ] mov rsi , rbp add rbx , num call hexvar cmp qword ptr [ rbx ] , num je hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rax , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret nop ret
push r12 mov r12 , rdi push rbp push rbx cmp byte ptr [ rdi ] , hexvar je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rbp , [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] add rbp , num mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar pop rbx lea rdi , [ rip + hexvar ] pop rbp xor eax , eax pop r12 jmp hexvar nop dword ptr [ rax + rax ] cmp byte ptr [ rdi + num ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , hexvar jne hexvar add r12 , num jmp hexvar
sub rsp , num lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar xor esi , esi add rsp , num mov rdi , rax xor eax , eax jmp hexvar
sub rsp , num lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar xor esi , esi add rsp , num mov rdi , rax xor eax , eax jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar ret nop mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar ret nop jmp hexvar
xor edi , edi jmp hexvar
sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov esi , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num jne hexvar test esi , esi jne hexvar call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , hexvar ret nop dword ptr [ rax ] test esi , esi je hexvar xor edx , edx lea rsi , [ rsp + num ] call hexvar mov rax , qword ptr [ rsp + num ] cmp byte ptr [ rax ] , num je hexvar mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] movzx esi , byte ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] shr sil , num and esi , num call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar ret nop mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num lea rdi , [ rip + hexvar ] call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop word ptr [ rax + rax ] xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop word ptr [ rax + rax ] ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] ret
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + num ]
mov rax , qword ptr [ rip + hexvar ] jmp qword ptr [ rax + hexvar ]
push rbp mov edx , num lea rsi , [ rip + hexvar ] push rbx mov ebx , edi xor edi , edi sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar test bl , num jne hexvar and ebx , num jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar and ebx , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar lea rbx , [ rip + hexvar ] lea rbp , [ rip + hexvar ] nop mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rax , qword ptr [ rbx ] test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx test rdx , rdx je hexvar mov rbx , rdx lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rcx , rbx mov edx , r12d mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov edx , r12d mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar jmp hexvar
mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar jmp hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] xor ecx , ecx mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] xor ecx , ecx mov qword ptr [ rsp + hexvar ] , rax lea rdx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] test ebp , ebp je hexvar mov dword ptr [ rip + hexvar ] , ebp add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar mov edi , hexvar mov rbx , rax call hexvar movzx edx , byte ptr [ rbx ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , num test dl , dl je hexvar lea rcx , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rcx + rdx ] add rbx , num mov byte ptr [ rbx - num ] , dl movzx edx , byte ptr [ rbx ] test dl , dl jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax add rax , num mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret
mov esi , num jmp hexvar
push rbp xor edx , edx lea rsi , [ rip + hexvar ] xor eax , eax push rbx xor ebp , ebp sub rsp , hexvar call hexvar mov rdx , rsp mov edi , num mov rsi , rax mov rbx , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] xor ebp , ebp and eax , hexvar cmp eax , hexvar sete bpl mov rdi , rbx call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] push r12 push rbp mov rbp , rdi push rbx movzx eax , byte ptr [ rdi + hexvar ] test al , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rcx , r12 lea rdx , [ rip + hexvar ] mov rsi , rbp call hexvar test eax , eax je hexvar and byte ptr [ rbp + hexvar ] , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] test al , num je hexvar mov r12 , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar cmp byte ptr [ rbx ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar or byte ptr [ rbp + hexvar ] , num pop rbx or byte ptr [ rip + hexvar ] , num pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] call hexvar test eax , eax je hexvar mov r12 , qword ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r15 mov r15 , rcx push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar movzx eax , byte ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rdx test al , num jne hexvar mov rdi , qword ptr [ rsi + hexvar ] test al , num je hexvar cmp byte ptr [ rdi ] , hexvar je hexvar mov rsi , rbp call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] xor ecx , ecx mov rsi , r12 xor eax , eax call hexvar mov rsi , rbp mov r14 , rax mov rdi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbp + hexvar ] test al , hexvar je hexvar movzx edx , byte ptr [ rip + hexvar ] and edx , num cmp dl , num je hexvar mov rdx , rbp mov rsi , rbx mov rdi , r13 call hexvar test eax , eax jne hexvar movzx eax , byte ptr [ rbp + hexvar ] and eax , num mov rdx , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbx + num ] cmp al , num jne hexvar sub rsp , num mov rcx , rdx mov rsi , r12 xor eax , eax push num mov rdx , qword ptr [ rsp + hexvar ] mov r9 , r15 mov r8 , r13 call hexvar mov rsi , rbp mov r14 , rax pop rax pop rdx mov rdi , r14 call hexvar test eax , eax je hexvar mov qword ptr [ rbp + hexvar ] , r14 mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor eax , eax call hexvar mov rsi , rbp mov rdi , rax mov rbx , rax call hexvar test eax , eax je hexvar mov qword ptr [ rbp + hexvar ] , rbx mov eax , num jmp hexvar mov rdi , rbx call hexvar jmp hexvar
test esi , esi jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar push r12 mov r12d , esi push rbp push rbx mov rbx , rdi mov edi , hexvar call hexvar mov rbp , rax mov qword ptr [ rax ] , num mov dword ptr [ rax + hexvar ] , r12d mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rax ] , rbp cmp byte ptr [ rbx ] , hexvar je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov rdi , rbx call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rbx + num ] xor edx , edx call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rbx + num ] xor edx , edx xor eax , eax call hexvar pop rbx mov qword ptr [ rbp + num ] , rax pop rbp pop r12 ret
push r14 mov r14 , rdi mov rdi , rcx push r13 mov r13d , esi push r12 mov r12 , rdx push rbp mov rbp , r8 push rbx mov rbx , rcx sub rsp , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdx , rsp mov rdi , rbx lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r14 mov dword ptr [ rsp + hexvar ] , r13d mov qword ptr [ rsp + num ] , r12 mov qword ptr [ rsp + hexvar ] , rbp mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r15 mov r15 , rdi xor ecx , ecx xor edx , edx push r14 mov r8d , num push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax movzx eax , byte ptr [ rax + hexvar ] sub eax , num cmp al , num ja hexvar mov rax , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov r13 , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rax ] test r13 , r13 je hexvar nop word ptr [ rax + rax ] mov r12 , qword ptr [ r13 + num ] test r12 , r12 jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ r13 + hexvar ] test eax , eax jne hexvar mov r12 , qword ptr [ r12 ] test r12 , r12 je hexvar mov rdi , qword ptr [ r12 + num ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ r15 + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbp + hexvar ] mov r8 , r13 mov esi , num mov rdi , qword ptr [ rbp + num ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov eax , dword ptr [ r13 + hexvar ] test eax , eax je hexvar nop dword ptr [ rax ] mov r13 , qword ptr [ r13 ] test r13 , r13 jne hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rbx , qword ptr [ r15 + num ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] test r13 , r13 je hexvar mov rdi , r13 call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + hexvar ] mov r12 , qword ptr [ rax ] mov qword ptr [ rsp + num ] , rax test r12 , r12 jne hexvar jmp hexvar nop dword ptr [ rax ] add qword ptr [ rsp + num ] , num mov rax , qword ptr [ rsp + num ] mov r12 , qword ptr [ rax ] test r12 , r12 je hexvar mov eax , dword ptr [ r12 + hexvar ] test eax , hexvar jne hexvar test eax , hexvar je hexvar mov rdx , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov rbp , qword ptr [ rdx ] xor r14d , r14d test ah , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov r15 , qword ptr [ rbx + num ] test r15 , r15 jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov r15 , qword ptr [ r15 ] test r15 , r15 je hexvar mov rdi , qword ptr [ r15 + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ r12 + hexvar ] mov r8 , rbx mov rcx , r13 xor esi , esi mov rdi , r14 call hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r14 , qword ptr [ r12 + num ] jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] sub rsp , num lea rdi , [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar lea rdi , [ rip - hexvar ] add rsp , num jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rdi + hexvar ] , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp ] mov qword ptr [ rax ] , rbx add rax , num mov qword ptr [ rbp ] , rax add rsp , num mov eax , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rax , qword ptr [ rbx + num ] mov qword ptr [ rbx + hexvar ] , rax jmp hexvar
push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ecx , ecx mov edx , num mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar cmp rbp , qword ptr [ rbx + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + num ] , rbp je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ r12 + hexvar ] , rbx and byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rbp lea rax , [ rip + hexvar ] cmp r13 , rax je hexvar test byte ptr [ r13 + hexvar ] , hexvar jne hexvar or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar add qword ptr [ rip + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov esi , hexvar mov rdi , rbx mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax je hexvar mov rdi , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r13 , [ rip + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rip + hexvar ] , rbx call rax mov qword ptr [ rip + hexvar ] , num mov ebp , eax test eax , eax je hexvar mov r12 , qword ptr [ rbx + num ] mov rsi , r13 xor edi , edi mov edx , num call hexvar mov edx , ebp mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbx mov rbx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num test rbx , rbx je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbx call rax mov qword ptr [ rip + hexvar ] , num test eax , eax je hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , num pop rbx setne al neg eax ret
push rbp push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rdi + num ] , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] cmp qword ptr [ rdi + hexvar ] , num mov rbp , qword ptr [ rdi + hexvar ] je hexvar or byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , rbp add rsp , num pop rbx pop rbp ret nop call hexvar jmp hexvar
push r13 push r12 mov r12 , rsi push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp lea rbx , [ rax + num ] mov rsi , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r12 mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13d , eax call hexvar mov esi , r13d mov rdi , rax xor eax , eax call hexvar jmp hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov rdi , rbx call hexvar xor esi , esi mov rdi , rax call hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov rdi , rbx call hexvar xor edx , edx xor esi , esi mov rdi , rax call hexvar test rax , rax je hexvar or byte ptr [ rax + hexvar ] , hexvar xor eax , eax pop rbx ret nop mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , num pop rbx ret
cmp qword ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov rdi , rbx call hexvar xor edx , edx mov esi , num mov rdi , rax call hexvar test rax , rax je hexvar or byte ptr [ rax + hexvar ] , hexvar xor eax , eax pop rbx ret nop word ptr [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , num pop rbx ret
mov ecx , num jmp hexvar
mov ecx , num jmp hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov edi , dword ptr [ rbx + hexvar ] cmp edi , - num je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , hexvar xor eax , eax pop rbx ret nop word ptr cs : [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push r15 push r14 mov r14 , rsi push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , num mov rbp , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + hexvar ] je hexvar mov rax , qword ptr [ rbx + num ] test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , rbp je hexvar mov rax , r13 mov qword ptr [ rbx + hexvar ] , rbp mov r8d , dword ptr [ rbx + hexvar ] xor edi , edi cqo mov qword ptr [ rbx + hexvar ] , r13 mov ecx , num idiv qword ptr [ rip + hexvar ] sub r13 , rdx add rbp , rdx mov r12 , rdx mov edx , num mov r9 , r13 mov rsi , rbp call hexvar cmp rax , - num je hexvar mov dword ptr [ rbx + hexvar ] , num add r12 , rax mov qword ptr [ rbx + num ] , r12 xor eax , eax mov qword ptr [ r14 ] , r12 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov r12 , qword ptr [ rbx + hexvar ] cmp rbp , r12 je hexvar mov r15 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rdi , rax mov rsi , r15 xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rbx + hexvar ] , r13 jne hexvar mov qword ptr [ r14 ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rbx + hexvar ] , num mov edi , dword ptr [ rbx + hexvar ] xor edx , edx mov rsi , r13 call hexvar test rax , rax js hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar mov r12 , rax test rax , rax je hexvar mov r13 , rax jmp hexvar nop dword ptr [ rax ] add r13 , rax sub rbp , rax test rbp , rbp je hexvar mov edi , dword ptr [ rbx + hexvar ] mov rdx , rbp mov rsi , r13 call hexvar test rax , rax je hexvar jg hexvar call hexvar cmp dword ptr [ rax ] , num je hexvar mov eax , num jmp hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num xor eax , eax pop rbx pop rbp ret nop word ptr [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rbx xor eax , eax pop rbx ret
cmp qword ptr [ rip + hexvar ] , num push rbx je hexvar cmp byte ptr [ rdi ] , hexvar mov rbx , rdi jne hexvar cmp byte ptr [ rdi + num ] , hexvar lea rsi , [ rdi + num ] je hexvar lea rsi , [ rdi + num ] mov ecx , hexvar lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al test eax , eax je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rbx mov qword ptr [ rax ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rip + hexvar ] add qword ptr [ rax + hexvar ] , num xor eax , eax pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , hexvar ret
push r13 push r12 mov r12 , rdi mov edi , hexvar push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] call hexvar pxor xmm0 , xmm0 mov esi , num mov rdi , r12 movups xmmword ptr [ rax ] , xmm0 mov rbp , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , r12 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar test rbx , rbx je hexvar mov rax , qword ptr [ rbp + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ rbx + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rax ] , rbp add rbp , hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rdx , rdi mov ecx , num lea rdi , [ rip + hexvar ] mov eax , hexvar mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num test cl , cl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num test cl , cl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx mov eax , hexvar repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num test cl , cl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta cl sbb cl , num xor eax , eax test cl , cl je hexvar ret nop dword ptr [ rax ] lea rcx , [ rdx + num ] lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax ] movzx esi , byte ptr [ rcx + num ] test byte ptr [ rdi + rsi * num + num ] , num je hexvar add rax , num add rcx , num movzx edx , byte ptr [ rcx ] test dl , dl je hexvar movzx esi , dl test byte ptr [ rdi + rsi * num + num ] , num jne hexvar cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar add rcx , num jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] xor eax , eax ret
mov r8 , rdi mov ecx , num lea rdi , [ rip + hexvar ] mov eax , num mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al sete al movzx eax , al ret
push r13 mov r13 , rsi push r12 mov r12 , rcx push rbp movsxd rbp , edi push rbx lea rsi , [ rbp + num ] movsxd rbx , edx add rbx , hexvar shl rbx , num sub rsp , num mov rdi , qword ptr [ r13 ] call hexvar mov edx , dword ptr [ rip + hexvar ] mov rsi , rbx mov qword ptr [ r13 ] , rax mov dword ptr [ rax + rbp ] , edx movzx edx , word ptr [ rip + hexvar ] mov word ptr [ rax + rbp + num ] , dx mov rdi , qword ptr [ r12 ] call hexvar lea rsi , [ rip + hexvar ] mov qword ptr [ r12 ] , rax lea rcx , [ rax + rbx - hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rcx + num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rip + hexvar ] and rdi , hexvar mov qword ptr [ rcx + hexvar ] , rax sub rcx , rdi sub rsi , rcx add ecx , hexvar shr ecx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r15 xor eax , eax push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar movzx r15d , byte ptr [ rdx + hexvar ] test r15b , num je hexvar mov r13 , qword ptr [ rdx + hexvar ] mov r14 , rdi mov rdi , qword ptr [ rsi + num ] mov rbx , rdx mov rbp , rsi call hexvar mov rdi , r13 mov r12 , rax call hexvar add r12 , rax and r15d , num jne hexvar mov rdi , r14 call hexvar lea rdi , [ r12 + rax + num ] call hexvar mov rdx , qword ptr [ rbp + num ] mov r8 , r14 mov rcx , r13 mov rdi , rax mov r12 , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rsi , rbx mov rdi , r12 call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , qword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edx , eax mov eax , num test edx , edx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test byte ptr [ rdx + hexvar ] , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] mov edx , eax and edx , num cmp dl , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rbx + hexvar ] test al , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r13 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] lea rdi , [ r12 + num ] call hexvar mov rdx , qword ptr [ rbp + num ] lea rsi , [ rip + hexvar ] mov rcx , r13 mov rdi , rax mov r12 , rax xor eax , eax call hexvar mov rsi , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r12 mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov r13 , rax jmp hexvar
push r15 push r14 push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov r14 , qword ptr [ rdi ] mov qword ptr [ rsp + num ] , rdi mov rdi , rsi test r14 , r14 je hexvar call hexvar movsx r12d , byte ptr [ rip + hexvar ] mov r15 , r14 mov rbx , rax mov r13d , r12d jmp hexvar nop dword ptr [ rax ] add rax , num mov r15 , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rbp call hexvar test eax , eax jne hexvar movzx eax , byte ptr [ r15 + rbx ] test al , al je hexvar cmp al , r13b je hexvar mov esi , r12d mov rdi , r15 call hexvar test rax , rax jne hexvar mov rdi , r14 call hexvar lea rdi , [ rbx + rax + num ] call hexvar mov r14 , qword ptr [ rsp + num ] mov r8 , rbp movsx ecx , byte ptr [ rip + hexvar ] mov rbx , rax lea rsi , [ rip + hexvar ] xor eax , eax mov rdx , qword ptr [ r14 ] mov rdi , rbx call hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , rbx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp dword ptr [ rdi + num ] , num je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop xor r9d , r9d mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , r12 mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , r9d lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rdx + hexvar ] mov r12 , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rsp + num ] , rcx lea rcx , [ rip + hexvar ] cmp rax , rcx je hexvar mov r15 , qword ptr [ rax + hexvar ] mov rbp , rdi mov r13 , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ r15 + hexvar ] test rbx , rbx je hexvar add rbx , qword ptr [ r12 + hexvar ] mov rsi , rbx mov edi , num sub r13 , hexvar call qword ptr [ rdx + hexvar ] mov rax , qword ptr [ rbp + num ] mov rdi , r13 lea rsi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp + num ] lea rsi , [ rbx + num ] mov edi , num call qword ptr [ rax + hexvar ] mov r8d , r13d lea rcx , [ rbx + hexvar ] mov rdi , rbp mov dword ptr [ rbx + hexvar ] , hexvar mov rax , qword ptr [ r14 + hexvar ] mov rsi , qword ptr [ rsp + num ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov rsi , qword ptr [ r12 + hexvar ] xor edx , edx add rsi , qword ptr [ r15 + hexvar ] mov rdi , rbp mov r13 , qword ptr [ r12 + hexvar ] call hexvar xor edx , edx test eax , eax je hexvar add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rsi , r13 mov rdi , rbx call hexvar xor edx , edx cmp rax , r13 sete dl jmp hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx jne hexvar mov rdi , r13 call hexvar mov r13 , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rbp + num ] mov rbx , rax mov qword ptr [ r12 + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num jmp hexvar
push r15 push r14 push r13 push r12 push rbp mov rbp , rdi push rbx xor ebx , ebx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar movsx r12d , byte ptr [ rip + hexvar ] mov rdi , rbp mov r13 , rax jmp hexvar nop lea rdi , [ rax + num ] cmp byte ptr [ rdi ] , hexvar lea rax , [ rbx + r13 ] mov esi , r12d cmove rbx , rax call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar lea rdi , [ rbx + rax + num ] call hexvar movsx r14d , byte ptr [ rip + hexvar ] mov r15 , rax mov r12 , rax jmp hexvar nop mov esi , r14d mov rdi , rbp call hexvar test rax , rax je hexvar sub rax , rbp mov rsi , rbp mov rdi , r12 lea rbx , [ rax + num ] mov rdx , rbx add r12 , rbx add rbp , rbx call hexvar cmp byte ptr [ rbp ] , hexvar jne hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r12 add r12 , r13 call hexvar mov esi , r14d mov rdi , rbp call hexvar test rax , rax jne hexvar mov rsi , rbp mov rdi , r12 call hexvar add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp qword ptr [ rip + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r12 push rbp push rbx mov rbx , rdi mov rdi , rax sub rsp , hexvar call hexvar test al , num je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rsp call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsp ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , hexvar mov rbp , qword ptr [ rax + hexvar ] mov rdi , rbp call hexvar test rax , rax jne hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] lea rbp , [ rax + num ] call hexvar mov r12 , rax test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rbp mov rdi , r12 mov rsi , qword ptr [ rax + hexvar ] sub rdx , rsi call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov rbp , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov rcx , r12 mov rdi , rax mov rdx , rbp mov rsi , rbx xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsp + num ] cmp qword ptr [ rip + hexvar ] , rax jne hexvar test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbx jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov r12 , rax jmp hexvar
push r12 push rbp mov rbp , rdi push rbx movsx ebx , byte ptr [ rdi + hexvar ] mov eax , ebx shr ebx , hexvar mov edx , eax and edx , hexvar test al , hexvar jne hexvar or ebx , num mov r12 , qword ptr [ rdi + hexvar ] test dl , dl je hexvar test byte ptr [ r12 + hexvar ] , num jne hexvar test byte ptr [ r12 + hexvar ] , num jne hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax + rax ] test dl , dl je hexvar mov r12 , qword ptr [ rdi + hexvar ] test byte ptr [ r12 + hexvar ] , num jne hexvar test ebx , ebx je hexvar mov r12 , qword ptr [ rbp + hexvar ] test byte ptr [ r12 + hexvar ] , num je hexvar mov esi , ebx mov rdi , r12 call hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi lea rsi , [ rip + hexvar ] mov edx , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar test ebx , ebx je hexvar jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar or qword ptr [ rip + hexvar ] , hexvar movabs rax , hexvar movabs rdx , hexvar and rax , qword ptr [ rip + hexvar ] cmp rax , rdx je hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] test eax , eax jg hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar jmp qword ptr [ rip + hexvar ] nop ret
mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rsi ] mov rdx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rsi , rsi je hexvar mov rcx , qword ptr [ rcx + hexvar ] add rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rax + hexvar ] add rdx , qword ptr [ rsi + hexvar ] cmp rcx , rdx sbb eax , eax cmp rcx , rdx mov edx , num cmova eax , edx ret nop dword ptr [ rax ] xor eax , eax ret
sub rsp , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push r13 mov r13 , rdx mov rax , rdi push r12 mov r12d , ecx push rbp mov rbp , rsi mov rsi , rax push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , r12d mov rdi , rbp mov rbx , rax mov r12 , rsp call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , r13 mov rbp , rax call hexvar mov rcx , rbp xor edx , edx mov rsi , rbx mov rdi , r12 call hexvar mov rcx , qword ptr [ rsp ] test rcx , rcx je hexvar test r13 , r13 je hexvar lea rsi , [ rbp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdx , qword ptr [ rbp + hexvar ] test rdx , rdx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax jne hexvar mov qword ptr [ rdx ] , rcx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov qword ptr [ rbp + hexvar ] , rcx jmp hexvar
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num je hexvar mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num xor esi , esi lea rdi , [ rip + hexvar ] call hexvar or byte ptr [ rip + hexvar ] , hexvar movabs rax , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num or qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
push r13 mov r13 , rsi push r12 mov r12 , rcx push rbp movsxd rbp , edi push rbx lea rsi , [ rbp + num ] movsxd rbx , edx add rbx , hexvar shl rbx , num sub rsp , num mov rdi , qword ptr [ r13 ] call hexvar mov edx , dword ptr [ rip + hexvar ] mov rsi , rbx mov qword ptr [ r13 ] , rax mov dword ptr [ rax + rbp ] , edx movzx edx , word ptr [ rip + hexvar ] mov word ptr [ rax + rbp + num ] , dx mov rdi , qword ptr [ r12 ] call hexvar lea rsi , [ rip + hexvar ] mov qword ptr [ r12 ] , rax lea rcx , [ rax + rbx - hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rcx + num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rip + hexvar ] and rdi , hexvar mov qword ptr [ rcx + hexvar ] , rax sub rcx , rdi sub rsi , rcx add ecx , hexvar shr ecx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r15 xor eax , eax push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar movzx r15d , byte ptr [ rdx + hexvar ] test r15b , num je hexvar mov r13 , qword ptr [ rdx + hexvar ] mov r14 , rdi mov rdi , qword ptr [ rsi + num ] mov rbx , rdx mov rbp , rsi call hexvar mov rdi , r13 mov r12 , rax call hexvar add r12 , rax and r15d , num jne hexvar mov rdi , r14 call hexvar lea rdi , [ r12 + rax + num ] call hexvar mov rdx , qword ptr [ rbp + num ] mov r8 , r14 mov rcx , r13 mov rdi , rax mov r12 , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rsi , rbx mov rdi , r12 call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , qword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edx , eax mov eax , num test edx , edx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test byte ptr [ rdx + hexvar ] , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] mov edx , eax and edx , num cmp dl , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rbx + hexvar ] test al , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r13 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] lea rdi , [ r12 + num ] call hexvar mov rdx , qword ptr [ rbp + num ] lea rsi , [ rip + hexvar ] mov rcx , r13 mov rdi , rax mov r12 , rax xor eax , eax call hexvar mov rsi , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r12 mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov r13 , rax jmp hexvar
push r15 push r14 push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov r14 , qword ptr [ rdi ] mov qword ptr [ rsp + num ] , rdi mov rdi , rsi test r14 , r14 je hexvar call hexvar movsx r12d , byte ptr [ rip + hexvar ] mov r15 , r14 mov rbx , rax mov r13d , r12d jmp hexvar nop dword ptr [ rax ] add rax , num mov r15 , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rbp call hexvar test eax , eax jne hexvar movzx eax , byte ptr [ r15 + rbx ] test al , al je hexvar cmp al , r13b je hexvar mov esi , r12d mov rdi , r15 call hexvar test rax , rax jne hexvar mov rdi , r14 call hexvar lea rdi , [ rbx + rax + num ] call hexvar mov r14 , qword ptr [ rsp + num ] mov r8 , rbp movsx ecx , byte ptr [ rip + hexvar ] mov rbx , rax lea rsi , [ rip + hexvar ] xor eax , eax mov rdx , qword ptr [ r14 ] mov rdi , rbx call hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , rbx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp dword ptr [ rdi + num ] , num je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop xor r9d , r9d mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , r12 mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , r9d lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rdx + hexvar ] mov r12 , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rsp + num ] , rcx lea rcx , [ rip + hexvar ] cmp rax , rcx je hexvar mov r15 , qword ptr [ rax + hexvar ] mov rbp , rdi mov r13 , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ r15 + hexvar ] test rbx , rbx je hexvar add rbx , qword ptr [ r12 + hexvar ] mov rsi , rbx mov edi , num sub r13 , hexvar call qword ptr [ rdx + hexvar ] mov rax , qword ptr [ rbp + num ] mov rdi , r13 lea rsi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp + num ] lea rsi , [ rbx + num ] mov edi , num call qword ptr [ rax + hexvar ] mov r8d , r13d lea rcx , [ rbx + hexvar ] mov rdi , rbp mov dword ptr [ rbx + hexvar ] , hexvar mov rax , qword ptr [ r14 + hexvar ] mov rsi , qword ptr [ rsp + num ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov rsi , qword ptr [ r12 + hexvar ] xor edx , edx add rsi , qword ptr [ r15 + hexvar ] mov rdi , rbp mov r13 , qword ptr [ r12 + hexvar ] call hexvar xor edx , edx test eax , eax je hexvar add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , rbp mov rsi , r13 mov rdi , rbx call hexvar xor edx , edx cmp rax , r13 sete dl jmp hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx jne hexvar mov rdi , r13 call hexvar mov r13 , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rbp + num ] mov rbx , rax mov qword ptr [ r12 + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num jmp hexvar
push r15 push r14 push r13 push r12 push rbp mov rbp , rdi push rbx xor ebx , ebx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar movsx r12d , byte ptr [ rip + hexvar ] mov rdi , rbp mov r13 , rax jmp hexvar nop lea rdi , [ rax + num ] cmp byte ptr [ rdi ] , hexvar lea rax , [ rbx + r13 ] mov esi , r12d cmove rbx , rax call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar lea rdi , [ rbx + rax + num ] call hexvar movsx r14d , byte ptr [ rip + hexvar ] mov r15 , rax mov r12 , rax jmp hexvar nop mov esi , r14d mov rdi , rbp call hexvar test rax , rax je hexvar sub rax , rbp mov rsi , rbp mov rdi , r12 lea rbx , [ rax + num ] mov rdx , rbx add r12 , rbx add rbp , rbx call hexvar cmp byte ptr [ rbp ] , hexvar jne hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r12 add r12 , r13 call hexvar mov esi , r14d mov rdi , rbp call hexvar test rax , rax jne hexvar mov rsi , rbp mov rdi , r12 call hexvar add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp qword ptr [ rip + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r12 push rbp push rbx mov rbx , rdi mov rdi , rax sub rsp , hexvar call hexvar test al , num je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rsp call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsp ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , hexvar mov rbp , qword ptr [ rax + hexvar ] mov rdi , rbp call hexvar test rax , rax jne hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] lea rbp , [ rax + num ] call hexvar mov r12 , rax test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rbp mov rdi , r12 mov rsi , qword ptr [ rax + hexvar ] sub rdx , rsi call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov rbp , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov rcx , r12 mov rdi , rax mov rdx , rbp mov rsi , rbx xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsp + num ] cmp qword ptr [ rip + hexvar ] , rax jne hexvar test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbx jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov r12 , rax jmp hexvar
push r12 push rbp mov rbp , rdi push rbx movsx ebx , byte ptr [ rdi + hexvar ] mov eax , ebx shr ebx , hexvar mov edx , eax and edx , hexvar test al , hexvar jne hexvar or ebx , num mov r12 , qword ptr [ rdi + hexvar ] test dl , dl je hexvar test byte ptr [ r12 + hexvar ] , num jne hexvar test byte ptr [ r12 + hexvar ] , num jne hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax + rax ] test dl , dl je hexvar mov r12 , qword ptr [ rdi + hexvar ] test byte ptr [ r12 + hexvar ] , num jne hexvar test ebx , ebx je hexvar mov r12 , qword ptr [ rbp + hexvar ] test byte ptr [ r12 + hexvar ] , num je hexvar mov esi , ebx mov rdi , r12 call hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi lea rsi , [ rip + hexvar ] mov edx , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar test ebx , ebx je hexvar jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar or qword ptr [ rip + hexvar ] , hexvar movabs rax , hexvar movabs rdx , hexvar and rax , qword ptr [ rip + hexvar ] cmp rax , rdx je hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] test eax , eax jg hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar jmp qword ptr [ rip + hexvar ] nop ret
mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rsi ] mov rdx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rsi , rsi je hexvar mov rcx , qword ptr [ rcx + hexvar ] add rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rax + hexvar ] add rdx , qword ptr [ rsi + hexvar ] cmp rcx , rdx sbb eax , eax cmp rcx , rdx mov edx , num cmova eax , edx ret nop dword ptr [ rax ] xor eax , eax ret
sub rsp , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push r13 mov r13 , rdx mov rax , rdi push r12 mov r12d , ecx push rbp mov rbp , rsi mov rsi , rax push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , r12d mov rdi , rbp mov rbx , rax mov r12 , rsp call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , r13 mov rbp , rax call hexvar mov rcx , rbp xor edx , edx mov rsi , rbx mov rdi , r12 call hexvar mov rcx , qword ptr [ rsp ] test rcx , rcx je hexvar test r13 , r13 je hexvar lea rsi , [ rbp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdx , qword ptr [ rbp + hexvar ] test rdx , rdx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax jne hexvar mov qword ptr [ rdx ] , rcx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov qword ptr [ rbp + hexvar ] , rcx jmp hexvar
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num je hexvar mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num xor esi , esi lea rdi , [ rip + hexvar ] call hexvar or byte ptr [ rip + hexvar ] , hexvar movabs rax , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num or qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx sub rsp , hexvar mov rbx , rsp mov rdi , rbx call hexvar mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 mov r15 , rsi push r14 push r13 mov r13d , hexvar push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov r14 , rsp lea rbp , [ rsp + hexvar ] mov rdi , r14 call hexvar xor ebx , ebx nop word ptr [ rax + rax ] mov rdx , r13 lea rdi , [ rbp + rbx ] mov rcx , r12 mov esi , num sub rdx , rbx call hexvar add rbx , rax cmp rbx , hexvar ja hexvar test rax , rax jne hexvar test rax , rax je hexvar mov rdx , r14 mov esi , hexvar mov rdi , rbp call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar mov r12d , eax test eax , eax jne hexvar test rbx , rbx jne hexvar mov rsi , r15 mov rdi , r14 call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r12d , num jmp hexvar mov rdx , r14 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
mov rcx , qword ptr [ rdi ] mov rdx , qword ptr [ rdi + num ] mov rax , rsi mov qword ptr [ rsi ] , rcx mov qword ptr [ rsi + num ] , rdx ret
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov dword ptr [ rdi + hexvar ] , num ret
push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx sub rsp , hexvar mov rbx , rsp mov rdi , rbx call hexvar mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 mov r15 , rsi push r14 push r13 mov r13d , hexvar push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar mov r14 , rsp lea r12 , [ rsp + hexvar ] mov rdi , r14 call hexvar xor ebx , ebx jmp hexvar nop dword ptr [ rax ] mov rdi , rbp test rax , rax je hexvar call hexvar test eax , eax jne hexvar mov rdx , r13 lea rdi , [ r12 + rbx ] mov rcx , rbp mov esi , num sub rdx , rbx call hexvar add rbx , rax cmp rbx , hexvar jne hexvar mov rdx , r14 mov esi , hexvar mov rdi , r12 call hexvar jmp hexvar nop call hexvar mov edx , eax mov eax , num test edx , edx jne hexvar test rbx , rbx jne hexvar mov rsi , r15 mov rdi , r14 call hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , r14 mov rsi , rbx mov rdi , r12 call hexvar jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
mov edx , dword ptr [ rdi ] mov rax , rsi bswap edx mov dword ptr [ rsi ] , edx mov edx , dword ptr [ rdi + num ] bswap edx mov dword ptr [ rsi + num ] , edx mov edx , dword ptr [ rdi + num ] bswap edx mov dword ptr [ rsi + num ] , edx mov edx , dword ptr [ rdi + hexvar ] bswap edx mov dword ptr [ rsi + hexvar ] , edx mov edx , dword ptr [ rdi + hexvar ] bswap edx mov dword ptr [ rsi + hexvar ] , edx ret
movabs rax , hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , rax movabs rax , hexvar mov qword ptr [ rdi + num ] , rax mov eax , hexvar mov qword ptr [ rdi + hexvar ] , rax ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , qword ptr [ rax ] xor eax , eax call hexvar mov edi , num call hexvar
mov rdx , qword ptr [ rdi + num ] xor eax , eax test rdx , rdx je hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rdx ] sub rcx , rdx mov rdx , qword ptr [ rdx + num ] add rax , rcx test rdx , rdx jne hexvar ret nop dword ptr [ rax + rax ] ret
mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar nop dword ptr [ rax ] cmp rsi , rax jbe hexvar cmp qword ptr [ rax ] , rsi jae hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar xor eax , eax ret nop word ptr cs : [ rax + rax ] mov eax , num ret ret
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
or byte ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 mov qword ptr [ rdi + hexvar ] , r9 jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar nop word ptr [ rax + rax ] mov ebx , dword ptr [ rbp + num ] sub ebx , num js hexvar movsxd rbx , ebx nop dword ptr [ rax + rax ] call qword ptr [ rbp + rbx * num + hexvar ] sub rbx , num test ebx , ebx jns hexvar mov rbp , qword ptr [ rbp ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
mov dword ptr [ rsp - num ] , edi mov dword ptr [ rsp - num ] , esi mov eax , dword ptr [ rsp - num ] mov edx , dword ptr [ rsp - num ] mov ecx , edx rol eax , cl mov dword ptr [ rsp - num ] , eax mov eax , dword ptr [ rsp - num ] ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar test eax , eax je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rax ] movzx edx , byte ptr [ rbp - hexvar ] add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar movzx ebx , byte ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov ecx , ebx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar movzx ebx , byte ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov ecx , ebx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop mov eax , dword ptr [ rbp - hexvar ] not eax and eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar movzx ebx , byte ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] not eax and eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov r12d , hexvar jmp hexvar mov r12d , hexvar lea rdi , [ rip + hexvar ] call hexvar mov r8d , ebx mov ecx , r12d mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar or dword ptr [ rbp - hexvar ] , num jmp hexvar or dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] jmp hexvar nop add qword ptr [ rbp - num ] , num jmp hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx mov edx , hexvar mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax setne al mov byte ptr [ rbp - hexvar ] , al call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax movzx edx , byte ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rcx , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rsi , rbx mov rdi , rcx mov eax , num call hexvar jmp hexvar mov ebx , dword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ r12 + rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , ebx lea rsi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov r12 , rax lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar call hexvar call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar mov r12 , rax lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rsi , rax mov edi , num call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] add rax , num mov rdi , rax call hexvar test rax , rax sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - num ] , hexvar cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] add rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov byte ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar nop jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jg hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , - hexvar jge hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] movzx eax , ax mov rsi , rcx mov edi , eax call hexvar add qword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] bswap eax pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] rol ax , num pop rbp ret
push rbx mov eax , dword ptr [ rdi ] mov rbx , rdi movdqu xmm0 , xmmword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdi + num ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test rsi , rsi je hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp rdx , hexvar ja hexvar lea rcx , [ rip + hexvar ] mov rdi , rcx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] pop rbx mov byte ptr [ rip + hexvar ] , al jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov rdx , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov qword ptr [ rbx + hexvar ] , num jmp hexvar
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov esi , hexvar lea rdx , [ rip + hexvar ] mov word ptr [ rip + hexvar ] , ax lea rcx , [ rip + hexvar ] mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] movzx eax , sil movzx esi , byte ptr [ rdx + num ] mov byte ptr [ rcx + rax ] , num add rdx , num test sil , sil jne hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + hexvar ] nop dword ptr [ rax + rax ] mov byte ptr [ rax ] , num add rax , num cmp rdx , rax jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop word ptr cs : [ rax + rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar ret mov byte ptr [ rip + hexvar ] , num ret
push r14 push r13 mov r13 , rdi mov rdi , rdx push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar add rbx , qword ptr [ rbp ] xor edx , edx xor edi , edi mov r14 , qword ptr [ rip + hexvar ] mov rsi , rsp mov qword ptr [ rip + hexvar ] , rbx call hexvar mov rbx , qword ptr [ rip + hexvar ] sub rbx , qword ptr [ rbp ] cmp byte ptr [ rsp + hexvar ] , num mov qword ptr [ rip + hexvar ] , r14 je hexvar mov rsi , r13 lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , rax add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rsi ] mov dword ptr [ rdi + num ] , num mov esi , num mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + hexvar ] , eax call hexvar mov edx , dword ptr [ rbp ] sub edx , dword ptr [ rbx + hexvar ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx cmp eax , num je hexvar cmp dword ptr [ rbx + hexvar ] , num sbb eax , eax add rsp , num and eax , num pop rbx pop rbp sub eax , num pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
push r14 mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx mov rax , qword ptr [ rsi ] xor esi , esi mov rbx , rdi mov qword ptr [ rdi ] , rax mov eax , dword ptr [ rdx ] mov dword ptr [ rdi + num ] , eax mov rax , qword ptr [ rcx ] mov qword ptr [ rdi + hexvar ] , rax mov eax , dword ptr [ r8 ] mov dword ptr [ rdi + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbx ] mov eax , dword ptr [ rbp ] sub eax , dword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ r13 ] , edx mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ r12 ] , rdx mov edx , dword ptr [ rbx + hexvar ] mov dword ptr [ rbp ] , edx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov eax , hexvar jmp hexvar
push rbx mov ecx , hexvar mov esi , hexvar lea rbx , [ rip + hexvar ] mov rdi , rbx lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , rbx pop rbx ret
push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , num mov rsi , qword ptr [ rip + hexvar ] nop word ptr cs : [ rax + rax ] test rsi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , ebx jl hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi jbe hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi mov rsi , rax test rsi , rsi jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax + hexvar ] , edi jl hexvar push rbx mov edx , num lea rsi , [ rip + hexvar ] test edi , edi jns hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar pop rbx ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , rax pop rbx xor eax , eax jmp hexvar
push rbx pxor xmm0 , xmm0 mov rbx , rdi add rdi , num mov qword ptr [ rdi + hexvar ] , num movaps xmmword ptr [ rdi - num ] , xmm0 movaps xmmword ptr [ rdi + num ] , xmm0 movaps xmmword ptr [ rdi + hexvar ] , xmm0 call hexvar xor edx , edx mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov eax , dword ptr [ rax + hexvar ] xor edx , edx test eax , eax setne dl mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , edx mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbx mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar movzx eax , byte ptr [ rbx ] and eax , hexvar cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] xor eax , eax test rdx , rdx je hexvar mov edx , dword ptr [ rdx + hexvar ] xor eax , eax test edx , edx setne al pop rbx ret nop word ptr [ rax + rax ] cmp al , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rsi + hexvar ] test ecx , ecx je hexvar test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test edx , edx jne hexvar mov edi , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rsi + hexvar ] nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax jae hexvar cmp qword ptr [ rip + hexvar ] , rsi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop word ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar add rsp , num jmp hexvar mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rsi jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar movsx ecx , dl cmp edi , ecx je hexvar lea r9 , [ rip + hexvar ] movzx edx , dl lea rcx , [ rax + num ] cmp byte ptr [ r9 + rdx ] , num je hexvar jmp hexvar nop dword ptr [ rax ] movzx r8d , r10b add rcx , num cmp byte ptr [ r9 + r8 ] , num jne hexvar mov qword ptr [ rip + hexvar ] , rcx movsx r10d , byte ptr [ rcx ] mov rdx , rcx cmp r10d , edi jne hexvar cmp rdx , rax ja hexvar jmp hexvar nop dword ptr [ rax ] sub rdx , num cmp rdx , rax je hexvar movzx ecx , byte ptr [ rdx - num ] cmp cl , hexvar je hexvar cmp cl , num je hexvar sub edx , eax mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] xor edx , edx mov dword ptr [ rsi ] , edx ret nop dword ptr [ rax ] lea rdx , [ rax + num ] lea r9 , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov rcx , rdx nop dword ptr [ rax ] movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 jne hexvar lea rdi , [ rcx + num ] add rdx , num mov qword ptr [ rip + hexvar ] , rdi movzx ecx , byte ptr [ rcx ] cmp cl , hexvar mov byte ptr [ rdx - num ] , cl mov rcx , qword ptr [ rip + hexvar ] jne hexvar movzx edi , byte ptr [ rcx ] cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx movzx r8d , byte ptr [ rcx ] cmp byte ptr [ r9 + r8 ] , num mov rdi , r8 je hexvar sub edx , eax cmp dil , hexvar jne hexvar add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov dword ptr [ rsi ] , edx ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r15 xor r15d , r15d push r14 mov r14 , rsi push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar jmp hexvar nop dword ptr [ rax ] cmp bpl , hexvar je hexvar cmp bpl , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar add r15d , num test r12 , r12 je hexvar movsx edi , bpl mov rsi , r12 call hexvar add r15d , num add r13 , num movzx ebp , byte ptr [ r13 ] mov rbx , r13 cmp bpl , num je hexvar jg hexvar test bpl , bpl jne hexvar cmp r13 , r14 jbe hexvar cmp byte ptr [ r13 - num ] , hexvar jne hexvar lea r15d , [ r15 + r13 + num ] jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbx - num ] , hexvar jne hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar call hexvar mov edx , r15d sub edx , ebx sub rbx , num cmp r14 , rbx jne hexvar test bpl , bpl je hexvar test r12 , r12 je hexvar mov rsi , r12 mov edi , hexvar mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] lea r15d , [ rdx + num ] jmp hexvar nop add rsp , hexvar mov eax , edx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , r15d jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
mov qword ptr [ rip + hexvar ] , rdi ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov edi , dword ptr [ rbx + hexvar ] mov rsi , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret nop word ptr [ rax + rax ] call hexvar mov dword ptr [ rbx + hexvar ] , eax pop rbx ret
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
push r12 mov r12 , rsi push rbp mov ebp , edi push rbx xor ebx , ebx cmp edi , hexvar je hexvar movsxd rdi , edi mov esi , num call hexvar lea ebx , [ rax + num ] lea edx , [ rbx + num ] cmp r12 , hexvar ja hexvar cmp ebp , hexvar lea ecx , [ rdx + num ] lea eax , [ rdx + num ] pop rbx cmove eax , ecx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] xor esi , esi lea edi , [ rax + num ] call hexvar mov edx , dword ptr [ rip + hexvar ] lea edx , [ rbx + rdx + num ] add edx , eax jmp hexvar
push r12 push rbp mov rbp , rsi push rbx mov ebx , edi call hexvar movsxd rdi , eax mov r12 , rdi call hexvar mov ecx , r12d mov rsi , rbp mov edi , ebx mov rdx , rax pop rbx pop rbp pop r12 jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi test al , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , num shr rax , num mov qword ptr [ rbx ] , rax pop rbx ret
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
sub rsp , num call hexvar cmp rax , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov dword ptr [ rip + hexvar ] , edi ret
mov ecx , dword ptr [ rsi ] test ecx , ecx je hexvar mov edx , dword ptr [ rsi + num ] test edx , edx je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi add rsp , - hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , ecx test eax , eax je hexvar mov r12 , rsp lea rsi , [ rip + hexvar ] xor eax , eax mov rdi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , r12 mov rdx , rbp mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , rbx call hexvar sub rsp , - hexvar pop rbx pop rbp pop r12 ret nop cmp edx , dword ptr [ rip + hexvar ] jne hexvar cmp ecx , dword ptr [ rip + hexvar ] jne hexvar ret nop dword ptr [ rax ] mov rsi , rdi mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rax jmp hexvar
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + num ] , rdi jne hexvar lea rbp , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebx , dword ptr [ rax + num ] je hexvar jge hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp dword ptr [ rax + num ] , ebx je hexvar jg hexvar mov rbp , rax mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp ] mov dword ptr [ rax + num ] , ebx mov qword ptr [ rax ] , rdx lea rdx , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test edx , edx je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rdx ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
push rbp mov edx , num lea rsi , [ rip + hexvar ] push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] call hexvar cmp rax , hexvar je hexvar movzx ebx , al cmp rbx , rax jne hexvar test bl , hexvar jne hexvar mov rax , rbx and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar mov byte ptr [ rbp + hexvar ] , bl lea rsi , [ rbp + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ rbp + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] call hexvar mov byte ptr [ rbp + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret mov rax , rbx and eax , hexvar cmp rax , hexvar je hexvar mov byte ptr [ rbp + hexvar ] , bl add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov r12 , qword ptr [ rax ] call hexvar mov rbx , rax cmp rax , hexvar je hexvar movzx ebp , al cmp rbp , rax jne hexvar test bpl , hexvar jne hexvar mov rax , rbp and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar mov edx , num jne hexvar lea rsi , [ r12 + hexvar ] xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ r12 + hexvar ] cmp al , num je hexvar cmp al , num je hexvar mov byte ptr [ r12 + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop call hexvar mov byte ptr [ r12 + hexvar ] , hexvar pop rbx pop rbp pop r12 ret and ebp , hexvar cmp rbp , hexvar je hexvar mov byte ptr [ r12 + hexvar ] , bl pop rbx pop rbp pop r12 jmp hexvar
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
sub rsp , num call hexvar mov edi , hexvar mov dword ptr [ rax + num ] , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + num ] , rcx mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax ] , rcx mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push r12 mov r12 , rdi push rbp push rbx call hexvar mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] add ebx , num mov rbp , rax mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rcx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , rcx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
push rbp mov esi , hexvar mov edi , num push rbx sub rsp , num call hexvar mov esi , hexvar mov edi , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , rbx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rax ] , rbx lea rax , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , hexvar mov word ptr [ rbx + hexvar ] , ax mov rax , rbx mov dword ptr [ rbx + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12d , edx push rbp mov rbp , rdi movzx edi , sil push rbx mov ebx , esi sub rsp , hexvar call hexvar cmp ebx , hexvar je hexvar mov r13d , eax test r12d , r12d jne hexvar and ebx , hexvar cmp ebx , hexvar je hexvar mov esi , r13d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] movdqu xmm0 , xmmword ptr [ rbp ] movdqu xmm1 , xmmword ptr [ rbp + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov byte ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , rsp mov esi , r13d mov qword ptr [ rsp + num ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edi , ebx call hexvar jmp hexvar
push rbx mov esi , num mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx mov edx , num pop rbx mov rdi , rax jmp hexvar
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push r12 push rbp push rbx mov rbx , rdi mov r12 , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov edi , ecx shr edi , num je hexvar movsxd rdi , edi cqo and ecx , num idiv rdi cmp ecx , num je hexvar test ecx , ecx je hexvar cmp ecx , num jne hexvar cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num mov rsi , rax call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] and ecx , num add rcx , rdx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdx , qword ptr [ rbx + hexvar ] lea rdi , [ rbx + rdx + hexvar ] mov edx , num jmp hexvar nop dword ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp or eax , hexvar mov byte ptr [ r12 + rbp + hexvar ] , al mov rdx , qword ptr [ rbx + hexvar ] jmp hexvar nop word ptr [ rax + rax ] cmp rax , hexvar jg hexvar movsxd rbp , ebp mov byte ptr [ r12 + rbp + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] mov byte ptr [ rbx + rdx + hexvar ] , al jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov ebx , dword ptr [ rdi + hexvar ] and ebx , num call hexvar sub eax , ebx pop rbx ret
sub rsp , hexvar mov esi , num mov rdi , rsp call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
mov eax , hexvar mov byte ptr [ rip + hexvar ] , num mov word ptr [ rip + hexvar ] , ax ret
lea eax , [ rdi - hexvar ] cmp eax , hexvar ja hexvar mov edi , edi lea rax , [ rip + hexvar ] mov byte ptr [ rax + rdi ] , sil ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
movzx ecx , byte ptr [ rdi + hexvar ] cmp cl , num ja hexvar mov eax , num shl rax , cl test eax , hexvar jne hexvar test al , hexvar jne hexvar test al , num je hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num ret
push rbp lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi lea rdi , [ rip + hexvar ] sub rsp , num call hexvar test eax , eax je hexvar mov ebp , eax mov edx , num cmp eax , num je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rax , [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rax mov qword ptr [ rsp + hexvar ] , num mov rdi , rsp call hexvar xor esi , esi mov rdi , rax call hexvar add rsp , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax jmp hexvar
sub rsp , hexvar movzx eax , word ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsp and ax , hexvar or ax , hexvar mov word ptr [ rsp + hexvar ] , ax call hexvar add rsp , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rdi , qword ptr [ rax + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rdi je hexvar mov rax , qword ptr [ rax ] test rax , rax jne hexvar ret nop word ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov qword ptr [ rsi ] , rcx mov dword ptr [ rdx ] , eax mov eax , num ret xor eax , eax ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
movzx eax , byte ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsi ] mov byte ptr [ rsi + hexvar ] , al mov rax , qword ptr [ rdi + hexvar ] mov r8 , qword ptr [ rdi ] cmp rax , r8 jae hexvar sub rcx , num mov qword ptr [ rsi + hexvar ] , rcx ret nop push r12 sub rax , r8 mov r12 , rsi push rbp sar rax , num mov rbp , rdi push rbx mov rdx , qword ptr [ rsi + num ] mov rbx , rax sub rdx , rcx sar rdx , num cmp eax , edx ja hexvar jb hexvar lea edx , [ rbx + num ] mov rsi , r8 mov rdi , rcx add rdx , rdx call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov rax , qword ptr [ rbp + hexvar ] sub rax , qword ptr [ rbp ] add rax , qword ptr [ r12 ] mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] sub ebx , edx add edx , num mov rdi , rcx movsxd rbx , ebx add rdx , rdx lea rsi , [ r8 + rbx * num ] call hexvar mov rax , qword ptr [ r12 + num ] add rbx , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 + hexvar ] , rbx mov qword ptr [ r12 + hexvar ] , rax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] sub edx , eax mov eax , eax xor esi , esi lea rdi , [ rcx + rax * num + num ] call hexvar mov r8 , qword ptr [ rbp ] mov rcx , qword ptr [ r12 ] jmp hexvar
mov r9 , qword ptr [ rdi ] sub r9 , qword ptr [ rsi ] mov rax , rdi mov r8 , r9 cmp rdi , rsi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rax + hexvar ] imul rcx , qword ptr [ rax + hexvar ] add rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add r8 , rcx test rax , rax je hexvar cmp rsi , rax je hexvar cmp dword ptr [ rax + hexvar ] , num je hexvar cmp dword ptr [ rsi + hexvar ] , num jne hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] imul rax , qword ptr [ rsi + hexvar ] add rax , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub r9 , rax test rsi , rsi je hexvar cmp rdi , rsi je hexvar cmp dword ptr [ rsi + hexvar ] , num je hexvar xor eax , eax ret nop mov qword ptr [ rdx ] , r9 mov eax , num ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , r8 mov eax , num ret
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
sub rsp , hexvar mov ecx , esi movsxd r9 , edi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar ret
push rbp movsxd r9 , edi mov rbp , rsi mov edi , num push rbx mov rsi , rdx xor r8d , r8d mov rbx , rdx sub rsp , hexvar push num call hexvar add rsp , hexvar mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar push rbx mov ecx , edx mov ebx , esi movsxd r9 , edi mov edx , num xor r8d , r8d mov esi , num mov edi , num sub rsp , num push num call hexvar mov byte ptr [ rax ] , bl pop rax pop rdx pop rbx ret nop dword ptr [ rax + rax ] mov ecx , edi mov rax , - num mov rsi , qword ptr [ rip + hexvar ] shl rax , cl mov rcx , rax lea rax , [ rsi - num ] sub rax , rcx and rax , rcx test edx , edx je hexvar mov rcx , rax movsxd rdx , edx sub rcx , rsi cmp rcx , rdx ja hexvar mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] ret
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] sub rax , qword ptr [ rdx + hexvar ] ret
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rax + hexvar ] mov rbx , rsi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , edi mov rdi , rax mov dword ptr [ rax + hexvar ] , ecx mov qword ptr [ rax + hexvar ] , r8 mov qword ptr [ rax + hexvar ] , r9 mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdi , [ rbp + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ rbp + hexvar ] , rax call hexvar mov rax , r12 pop rbx pop rbp pop r12 ret
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 sub rax , - hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax sub rax , - hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num sub ecx , - hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num ret
mov dword ptr [ rip + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rdi + num ] test eax , eax je hexvar push r13 mov r13 , rdi push r12 xor r12d , r12d push rbp mov rbp , rsi push rbx sub rsp , num nop word ptr [ rax + rax ] mov rdx , qword ptr [ r13 ] mov eax , r12d mov rbx , qword ptr [ rdx + rax * num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] call rbp mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add r12d , num cmp dword ptr [ r13 + num ] , r12d ja hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret ret
push r12 mov r12d , edx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar xor r9d , r9d lea rsi , [ rbx + num ] mov rdx , rbp lea r8 , [ rsp + hexvar ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rsp + hexvar ] cmp qword ptr [ rdx ] , rax jne hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx ] , rcx test r12d , r12d je hexvar cmp qword ptr [ rbx + hexvar ] , rax jae hexvar cmp qword ptr [ rbx + hexvar ] , rax jbe hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rsi , rax lea rdi , [ rbx + hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , rsi sub rsp , num xor r9d , r9d xor r8d , r8d mov rcx , rdx lea rsi , [ rdi + num ] mov rdx , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , num call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi call hexvar xor r9d , r9d xor r8d , r8d lea rsi , [ rbx + num ] mov rcx , rax mov rdx , rbp mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , rax mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rdx + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
push r13 push r12 push rbp mov rbp , rdi mov edi , hexvar push rbx lea r12 , [ rbp * num ] sub rsp , num call hexvar mov rcx , qword ptr [ rip + hexvar ] movsxd rsi , dword ptr [ rip + hexvar ] xor edx , edx lea r13 , [ rax + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov rbx , rax mov rdi , r13 call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rax , rdx sub rax , rcx cmp r12 , rax ja hexvar mov rdi , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r9 , rdx lea rax , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r9 , rcx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rcx cmp rsi , r9 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdx mov rax , rdx mov rdx , r12 xor esi , esi mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rdi call hexvar mov dword ptr [ rbx + num ] , ebp add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r13 mov rsi , r12 call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov esi , hexvar call hexvar test rax , rax je hexvar add rsp , num add rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , rdi mov edx , hexvar lea rdi , [ rip - hexvar ] call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
mov eax , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
xor edx , edx jmp hexvar
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
xor eax , eax cmp qword ptr [ rip + hexvar ] , num setne al ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbx xor esi , esi cmp byte ptr [ rip + hexvar ] , num mov rbx , rdi sete sil call hexvar cmp byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov dword ptr [ rip + hexvar ] , num pop rbx mov qword ptr [ rip + hexvar ] , num add rax , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rbx , rax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar nop dword ptr [ rax ] ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rax pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov ebx , edi mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , ebx call hexvar xor edi , edi pop rbx jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , num mov r12 , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ r12 ] cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx xor ebp , ebp cmp al , hexvar jne hexvar lea rdx , [ r12 + num ] mov ebp , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ r12 + num ] mov r12 , rdx mov rdx , r12 lea rdi , [ rip + hexvar ] test al , al jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar sete cl test cl , cl jne hexvar cmp al , hexvar je hexvar add rdx , num mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rdx ] test al , al je hexvar test ebp , ebp jne hexvar movzx ecx , al cmp byte ptr [ rdi + rcx ] , num setne cl test cl , cl je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test ebp , ebp je hexvar add qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov ebx , edx sub ebx , r12d lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , r12 mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar xor edx , edx test r13d , r13d mov rcx , qword ptr [ rip + hexvar ] sete dl add edx , num mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rcx + hexvar ] , edx jmp hexvar
mov dword ptr [ rip + hexvar ] , num ret
sub rsp , num test edi , edi jne hexvar call hexvar cmp eax , hexvar ja hexvar mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , eax add rsp , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] test edi , edi je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] sub eax , num and eax , hexvar setne al movzx eax , al shl eax , num mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rax + hexvar ] , num ret nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num ret
mov qword ptr [ rip + hexvar ] , rdi ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdx , rax mov rax , qword ptr [ rdx + hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rax + hexvar ] jne hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rdi call hexvar xor edi , edi add rsp , num jmp hexvar nop ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx ret
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax lea rdi , [ rax + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov rax , rbx mov qword ptr [ rbx ] , num mov dword ptr [ rbx + hexvar ] , num pop rbx ret
mov dword ptr [ rip + hexvar ] , edi ret
mov dword ptr [ rip + hexvar ] , edi ret
push r13 mov r13d , edi push r12 mov r12d , esi push rbp mov ebp , edx push rbx mov rbx , rcx sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , r13d mov dword ptr [ rip + hexvar ] , r12d mov dword ptr [ rip + hexvar ] , ebp mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
sub rsp , hexvar push num call hexvar add rsp , hexvar ret
mov rdx , rsi xor eax , eax lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
push rbx xor esi , esi mov ebx , edi call hexvar mov edi , ebx call hexvar xor esi , esi xor edi , edi mov rdx , rax call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea r12 , [ rsp + hexvar ] mov ebp , esi mov rbx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdi , r12 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , r12 mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx test ecx , ecx je hexvar lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] ret
mov eax , dword ptr [ rip + hexvar ] ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp push rbx mov rbx , rdi sub rsp , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num test eax , eax je hexvar add rsp , num pop rbx pop rbp ret nop call hexvar jmp hexvar nop word ptr [ rax + rax ] ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx mov esi , hexvar mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar call hexvar mov rbx , rsp mov r12 , rax mov rsi , rax mov rdi , rbx call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 ret
mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov ecx , dword ptr [ rip + hexvar ] mov ebx , num mov ebp , eax shl ebx , cl cmp ebx , eax jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , ebx mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
mov esi , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi test esi , esi jne hexvar mov edi , hexvar call hexvar lea rcx , [ rip + hexvar ] mov edx , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax ] , rcx mov qword ptr [ rax + rdx ] , rbx mov rdi , rbx call hexvar cmp dword ptr [ rip + hexvar ] , eax jge hexvar mov dword ptr [ rip + hexvar ] , eax pop rbx ret nop dword ptr [ rax ] add esi , num mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , esi movsxd rsi , esi shl rsi , num call hexvar movsxd rdx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rdx * num - num ] jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp push rbx sub rsp , num mov rdx , qword ptr [ rip + hexvar ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , num jne hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movzx edx , byte ptr [ rax ] mov rbx , rax add rax , num cmp dl , hexvar je hexvar cmp dl , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar movzx eax , byte ptr [ rbx ] lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num jmp hexvar nop dword ptr [ rax ] xor ebp , ebp xor ebx , ebx test esi , esi mov eax , esi sete dl movzx edx , dl cmovns eax , edx mov esi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] test esi , esi jns hexvar cmp al , hexvar jne hexvar lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] call hexvar add rsp , num movsx esi , bpl mov rdi , rbx pop rbx pop rbp jmp hexvar
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov rdi , rsp call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] add rsp , hexvar pop rbx ret
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push r12 push rbp mov ebp , edi push rbx mov ebx , esi test edi , edi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , hexvar je hexvar jle hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar pop rbx pop rbp pop r12 ret nop cmp ebx , num jne hexvar pop rbx mov edi , ebp pop rbp pop r12 jmp hexvar mov edi , ebp call hexvar cmp ebx , hexvar je hexvar jg hexvar cmp ebx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov r12 , qword ptr [ rdx ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar
push r13 mov r13d , r8d push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8d , r13d mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
mov esi , num jmp hexvar
xor esi , esi jmp hexvar
mov rsi , rdi mov edx , num xor edi , edi jmp hexvar
push rbx mov rbx , rdi call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , hexvar mov rdi , rsp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , hexvar ret
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx mov edi , num sub rsp , hexvar call hexvar mov rbx , rsp xor edi , edi mov edx , num mov rsi , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar call hexvar add rsp , hexvar pop rbx ret add rax , num xor edi , edi lea rsi , [ rsp + hexvar ] mov edx , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar sub rsp , num xor r9d , r9d xor ecx , ecx push num mov r8 , rax mov edx , num mov esi , num mov edi , num call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl pop rax pop rdx call hexvar add rsp , hexvar pop rbx ret cmp qword ptr [ rsp + hexvar ] , num jns hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
push rbp lea rax , [ rip + hexvar ] lea rbp , [ rip + hexvar ] mov edx , num push rbx lea rsi , [ rip + hexvar ] sub rsp , num test edi , edi cmove rbp , rax cmp edi , num sbb ebx , ebx xor edi , edi call hexvar and ebx , hexvar mov rdx , rbp add ebx , hexvar mov rdi , rax xor eax , eax mov esi , ebx call hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
sub rsp , num lea rdi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
push r13 push r12 mov r12d , edx push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rdi , rbp je hexvar cmp rax , rdi je hexvar cmp qword ptr [ rip + hexvar ] , rdi je hexvar mov r13 , qword ptr [ rdi ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rbp je hexvar mov r8 , qword ptr [ rbx ] mov r9 , qword ptr [ rbx + hexvar ] test r12d , r12d je hexvar mov edx , dword ptr [ rax + hexvar ] and edx , hexvar cmp edx , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] sub eax , num cmp al , num ja hexvar sub rsp , num mov edx , num xor ecx , ecx mov esi , num push num mov edi , num call hexvar mov byte ptr [ rax ] , r12b pop rax pop rdx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbx call hexvar xor r9d , r9d mov r8 , rax jmp hexvar nop dword ptr [ rax + rax ] test r12d , r12d jne hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rax ] mov edx , num xor edi , edi mov qword ptr [ rsp + num ] , r9 lea rsi , [ rip + hexvar ] mov qword ptr [ rsp ] , r8 call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov r9 , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
sub rsp , num mov esi , num call hexvar add rsp , num cdqe ret
sub rsp , num xor esi , esi call hexvar add rsp , num cdqe ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
push rbp push rbx sub rsp , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] add rax , num mov rsi , rsp xor edx , edx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] cmp byte ptr [ rsp + hexvar ] , num lea rsi , [ rdx + hexvar ] je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar
add edi , edi lea rsi , [ rip - hexvar ] jmp hexvar
lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov r12 , rax cmp rax , hexvar jle hexvar call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx mov edx , num mov ebx , edi sub rsp , hexvar test edi , edi je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rcx ] cmp dl , hexvar jne hexvar lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rcx + num ] movzx ecx , dl lea rdi , [ rip + hexvar ] cmp byte ptr [ rdi + rcx ] , num jne hexvar cmp dl , hexvar je hexvar test ebx , ebx lea rax , [ rip + hexvar ] lea rbx , [ rip + hexvar ] mov edx , num cmove rbx , rax lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax test ebx , ebx jne hexvar call hexvar call hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] call hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar jmp hexvar
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov edx , num mov esi , hexvar mov rdi , rax mov rbx , rax call hexvar test eax , eax jne hexvar test ebp , ebp jne hexvar call hexvar mov rdi , rbx call hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar add rsp , hexvar pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar cmp byte ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov esi , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rax + hexvar ] call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
xor esi , esi jmp hexvar
mov esi , num jmp hexvar
xor edi , edi sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] cmp rax , rdi je hexvar cmp dword ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov ebp , r12d nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp rbx , rax je hexvar test rbx , rbx je hexvar add ebp , dword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] add ebp , eax mov rax , qword ptr [ rip + hexvar ] cmp rbx , rax jne hexvar call hexvar add ebp , eax cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp ebp , r12d jb hexvar mov eax , ebp pop rbx pop rbp sub eax , r12d pop r12 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add ebp , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov ebp , edi mov rdi , rsi push rbx sub rsp , hexvar lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rsp mov rsi , rbx call hexvar test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsp ] test rsi , rsi je hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , num mov byte ptr [ rax ] , bpl mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov eax , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] sub rbx , rbp cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
mov rsi , qword ptr [ rdi ] test rsi , rsi je hexvar push r12 lea r12 , [ rip + hexvar ] push rbp push rbx mov rbx , rdi nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , num mov rsi , rbp mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rbx , hexvar mov rsi , qword ptr [ rbx ] test rsi , rsi jne hexvar pop rbx pop rbp pop r12 ret ret mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push r12 mov esi , hexvar mov r12 , rdi push rbp push rbx call hexvar test rax , rax je hexvar mov edi , hexvar mov rbx , rax call hexvar mov rdi , r12 mov rbp , rax call hexvar mov rdx , rbx add rbx , num sub rdx , r12 mov rdi , rbx mov qword ptr [ rbp ] , rax mov byte ptr [ rax + rdx ] , num mov qword ptr [ rbp + hexvar ] , rdx call hexvar mov rdi , rbx mov qword ptr [ rbp + num ] , rax call hexvar pop rbx mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbp mov qword ptr [ rbp + hexvar ] , rax pop rbp pop r12 ret lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar
mov rcx , qword ptr [ rsi + num ] cmp rcx , rdi jbe hexvar mov rsi , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rcx , rdi je hexvar movzx eax , byte ptr [ rsi + rdi ] cmp al , hexvar je hexvar cmp al , num je hexvar cmp al , hexvar jne hexvar lea rax , [ rdi + num ] cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rdi + num ] cmp dl , num je hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rax , num cmp rcx , rax jbe hexvar movzx edx , byte ptr [ rsi + rax ] cmp dl , hexvar je hexvar cmp dl , num je hexvar ret mov rax , rdi ret nop dword ptr [ rax ] mov rax , rcx ret
mov rax , qword ptr [ rsi + num ] cmp rdi , rax jae hexvar mov rcx , qword ptr [ rsi ] jmp hexvar nop add rdi , num cmp rdi , rax je hexvar movzx edx , byte ptr [ rcx + rdi ] cmp dl , hexvar je hexvar cmp dl , num je hexvar mov rax , rdi ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdi ] mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rdi ] ret
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx mov rbp , rax mov rsi , rax call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
mov qword ptr [ rdi + num ] , num ret
add rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi + hexvar ] , rsi jae hexvar push rbx mov rbx , rdi add rsi , hexvar js hexvar bsr rsi , rsi mov ecx , hexvar xor rsi , hexvar sub ecx , esi mov esi , num shl rsi , cl lea rax , [ rsi - hexvar ] sub rsi , hexvar mov qword ptr [ rdi + hexvar ] , rax mov rdi , qword ptr [ rdi ] call hexvar mov qword ptr [ rbx ] , rax pop rbx ret nop dword ptr [ rax ] ret lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + num ] mov rdx , rbp sub rdx , qword ptr [ rax ] sub rbx , rdx cmp rbx , rsi cmova rbx , rsi mov rsi , rbp mov rdx , rbx add rbp , rbx call hexvar mov qword ptr [ rip + hexvar ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
mov rdi , qword ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi mov edi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , num pop rbx ret
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rsp + num ] call hexvar mov eax , dword ptr [ rsp + num ] mov r9 , rbx mov rdx , rbp lea rdi , [ rsp + num ] mov ecx , hexvar lea rsi , [ rip + hexvar ] lea r8d , [ rax + num ] xor eax , eax call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rbx , rax test rsi , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rip + hexvar ] je hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar lea rbp , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax jne hexvar mov edi , hexvar call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov edx , hexvar mov rbx , rax mov rdi , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , rbp call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r9 , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov rbx , rax mov rdi , rax xor eax , eax mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar mov rbp , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax test rbp , rbp je hexvar mov rsi , rbx mov rdi , rbp call hexvar test eax , eax je hexvar mov rdi , rbx xor edx , edx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13 , rax test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , r13 mov rdx , r13 mov rsi , rbx mov edi , r12d call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13 , qword ptr [ rip + hexvar ] mov rbx , rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rax , qword ptr [ rdx ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdx + num ] sub rax , - hexvar cmp qword ptr [ rdx + hexvar ] , rax jne hexvar mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx jne hexvar xor eax , eax ret
mov eax , dword ptr [ rdi + hexvar ] shr eax , num and eax , num ret
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] test esi , esi jne hexvar test rdi , rdi je hexvar cmp rdi , rbp je hexvar mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] test esi , esi je hexvar mov rsi , rbp call hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov qword ptr [ rbx + hexvar ] , rbx mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num movsxd rsi , dword ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] xor edx , edx mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rdi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx lea rsi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , rbx xor eax , eax mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar lea rdx , [ rip + hexvar ] or byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rax + num ] , rdx mov byte ptr [ rip + hexvar ] , num add rsp , num ret call hexvar mov edi , eax call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar lea rdx , [ rip + hexvar ] mov ecx , hexvar pxor xmm0 , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rdi , rdx xor eax , eax rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 add rsp , num ret
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax mov eax , dword ptr [ rbx ] mov dword ptr [ rdi + hexvar ] , eax pop rbx ret nop dword ptr [ rax ] mov eax , dword ptr [ rbx ] mov rdi , qword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , eax pop rbx ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rdi + hexvar ] , rax pop rbx ret mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num sete al ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rsi , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rsi je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax cmp byte ptr [ rdi + hexvar ] , num jne hexvar movzx edx , byte ptr [ rdi ] test dl , num jne hexvar and edx , num mov rax , qword ptr [ rdi + num ] je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx sete al movzx eax , al ret nop cmp qword ptr [ rdi + hexvar ] , num mov eax , num je hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop mov rax , qword ptr [ rdi + hexvar ] lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , num cmp rdx , rcx jne hexvar ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
movzx eax , byte ptr [ rdi ] test al , num je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar or eax , num mov byte ptr [ rdi ] , al ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num ret
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
test byte ptr [ rdi ] , num jne hexvar and byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar and byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi ] , hexvar ret
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] or eax , hexvar mov byte ptr [ rdi ] , al test al , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rax , rdi test byte ptr [ rax + num ] , num je hexvar mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop mov rax , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push rbx mov rsi , qword ptr [ rip + hexvar ] mov rbx , rdi call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
test byte ptr [ rdi ] , num je hexvar lea rax , [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] xor eax , eax cmp rdi , rsi sete al ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] and eax , num movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movdqu xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm1 test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar pop rbx ret nop dword ptr [ rax + rax ] movdqu xmm2 , xmmword ptr [ rsi ] movups xmmword ptr [ rdi + hexvar ] , xmm2 movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movups xmmword ptr [ rdi + hexvar ] , xmm3 and byte ptr [ rdi + num ] , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] and eax , num jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
push rbx mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov rcx , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rdx + hexvar ] mov esi , dword ptr [ rcx + hexvar ] test esi , hexvar je hexvar test eax , hexvar jne hexvar mov r8d , eax or r8d , hexvar mov dword ptr [ rdx + hexvar ] , r8d test al , num je hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] cmp rcx , rax je hexvar and esi , hexvar jne hexvar test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar mov rbx , qword ptr [ rdi + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx pop rbx mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] jmp hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi + num ] test al , num je hexvar mov rdx , qword ptr [ rdi + num ] and eax , hexvar mov byte ptr [ rdi + num ] , al mov eax , dword ptr [ rdx + hexvar ] test al , hexvar je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi + num ] , num jmp hexvar nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax + num ] , num mov rdi , rax add rsp , num jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi + num ] , num jmp hexvar
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rdx je hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar or al , hexvar mov dword ptr [ rdx + hexvar ] , eax ret
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
test byte ptr [ rdi ] , num je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num movzx eax , al ret
mov rax , qword ptr [ rdi + num ] mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp rax , rdx je hexvar lea rax , [ rip + hexvar ] cmp rcx , rax sete al movzx eax , al ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rcx + num ] cmp qword ptr [ rax + hexvar ] , rdx sete al movzx eax , al ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax sete al movzx eax , al ret mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] test rax , rax sete al movzx eax , al ret
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rbx je hexvar mov eax , num add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + num ] mov eax , dword ptr [ rbx + hexvar ] mov edx , eax and edx , num cmp edx , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp rcx , rdx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar test eax , hexvar jne hexvar lea rsi , [ rip + hexvar ] cmp rcx , rsi je hexvar test byte ptr [ rdi ] , num je hexvar cmp rdx , rbx je hexvar mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp byte ptr [ rbp ] , hexvar jne hexvar xor eax , eax cmp byte ptr [ rbp + num ] , hexvar sete al jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar test al , num je hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] mov rbp , qword ptr [ rax + num ] test rbp , rbp je hexvar mov eax , dword ptr [ rax + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar lea rcx , [ rip + hexvar ] mov eax , num cmp rdx , rcx je hexvar mov eax , dword ptr [ rdx + hexvar ] shr eax , hexvar and eax , num ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test esi , esi je hexvar mov eax , num test cl , hexvar jne hexvar and ecx , hexvar mov eax , num jne hexvar mov rdx , qword ptr [ rdx + hexvar ] jmp hexvar
mov rdx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rdi + num ] , rdx jne hexvar mov rax , qword ptr [ rdi + hexvar ] test byte ptr [ rax ] , num je hexvar mov rcx , qword ptr [ rax + num ] cmp rdx , rcx je hexvar mov eax , dword ptr [ rcx + hexvar ] shr eax , num and eax , num ret nop mov rax , rdi test byte ptr [ rdi + num ] , num je hexvar mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop xor eax , eax ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop mov rcx , qword ptr [ rax + num ] jmp hexvar mov rdi , rax jmp hexvar
mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar xor eax , eax cmp qword ptr [ rip + hexvar ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rdx + hexvar ] shr eax , num and eax , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rbp + num ] test byte ptr [ rbp ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rbp call hexvar mov rbp , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rsi , rbp mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rbp , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
cmp rdi , num jbe hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rax , rdx jae hexvar cmp rbx , qword ptr [ rdi + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp qword ptr [ rip + hexvar ] , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] add rcx , num mov qword ptr [ rdx ] , rbx mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rax + rsi ] , num pop rbx ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] add qword ptr [ rax + rdi * num ] , num ret nop dword ptr [ rax ] sub rax , rdi add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num pop rbx ret nop dword ptr [ rax + rax ] mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax lea rdx , [ rsi + hexvar ] mov esi , hexvar jmp hexvar nop word ptr [ rax + rax ] add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rcx , num add rdx , rsi jmp hexvar mov eax , hexvar jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rcx * num ] lea rdx , [ rdi + rsi ] cmp rdi , rdx jae hexvar cmp rbx , qword ptr [ rdi ] je hexvar mov rax , rdi jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax ] , rbx je hexvar add rax , num cmp rax , rdx jb hexvar cmp rcx , qword ptr [ rip + hexvar ] je hexvar mov rax , qword ptr [ rip + hexvar ] add rax , rcx add rcx , num mov qword ptr [ rdx ] , rbx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rdx + rsi ] , num mov byte ptr [ rax ] , num pop rbx ret nop sub rax , rdi mov rdx , rax sar rdx , num add rax , qword ptr [ rip + hexvar ] add qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num pop rbx ret test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov ecx , num xor esi , esi mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , hexvar jmp hexvar add rcx , hexvar lea rsi , [ rcx * num ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax * num ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rsi , [ rcx * num ] add rax , rcx add rcx , num add rdx , rsi jmp hexvar xor edx , edx xor eax , eax jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor esi , esi jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] test rcx , rcx je hexvar lea rdx , [ rcx + rax * num ] cmp rcx , rdx jae hexvar cmp rdi , qword ptr [ rcx ] je hexvar mov rax , rcx jmp hexvar nop word ptr cs : [ rax + rax ] cmp qword ptr [ rax ] , rdi je hexvar add rax , num cmp rax , rdx jb hexvar xor eax , eax ret nop dword ptr [ rax ] sub rax , rcx sar rax , num mov rdx , qword ptr [ rip + hexvar ] movsx eax , byte ptr [ rdx + rax ] ret nop dword ptr [ rax + rax ] test rax , rax je hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop xor eax , eax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
test rsi , rsi je hexvar mov rdi , rsi jmp hexvar nop dword ptr [ rax ] ret
test rdi , rdi je hexvar push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ rbx + num ] , num je hexvar test byte ptr [ rbx ] , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] cmp qword ptr [ rdx + hexvar ] , rbx jne hexvar mov rbx , rax mov rdi , rbx call hexvar test rax , rax jne hexvar cmp rbx , rbp jne hexvar add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test byte ptr [ rsi ] , num jne hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] cmp qword ptr [ rdx ] , rsi jne hexvar mov qword ptr [ rdx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi ] , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdx ] , rdi je hexvar mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdx ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi ] , rax jmp hexvar
sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar test byte ptr [ rsi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rsi + num ] , rax je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdi mov qword ptr [ rdi + hexvar ] , rsi add rsp , num ret nop cmp qword ptr [ rcx ] , rsi jne hexvar mov qword ptr [ rcx ] , rdi mov rax , qword ptr [ rsi + hexvar ] jmp hexvar nop cmp qword ptr [ rdx ] , num jne hexvar cmp qword ptr [ rcx ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdx ] , rdi mov qword ptr [ rcx ] , rdi add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r13 push r12 push rbp mov ebp , esi push rbx sub rsp , num call hexvar mov rdi , rax mov rbx , rax call hexvar mov r12 , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov esi , ebp mov rdi , r12 call hexvar mov rdi , rbx mov rbp , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , r12 call hexvar lea rdi , [ rax + num ] call hexvar movzx edx , byte ptr [ r12 ] lea rsi , [ r12 + num ] mov r13 , rax mov rcx , rax test dl , dl je hexvar lea rdi , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ rdi + rdx ] add rcx , num add rsi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rsi - num ] test dl , dl jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx mov r12 , r13 mov rbx , r13 call hexvar jmp hexvar
lea rdi , [ rip + hexvar ] jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rax call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rdi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rsi , rcx sub rbx , rcx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax jmp hexvar
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test edx , edx jle hexvar lea ecx , [ rdx - num ] movsxd rdx , edx movsxd rax , ecx lea rdx , [ rdi + rdx - num ] mov ecx , ecx add rax , rdi sub rdx , rcx nop word ptr [ rax + rax ] mov byte ptr [ rax ] , sil sub rax , num shr rsi , num cmp rax , rdx jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , r13d call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor r13d , r13d cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13d , eax test eax , eax je hexvar cmp rdi , r12 je hexvar cmp dword ptr [ rdi + hexvar ] , num mov r13d , num cmovle r13d , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop shr eax , num add edx , num test al , num je hexvar cmp r13d , edx cmovl r13d , edx jmp hexvar nop word ptr [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor r13d , r13d jmp hexvar ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea r9 , [ rsp + num ] mov r8 , r14 mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rbp + hexvar ] call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar push rbx mov rbx , rdx mov rdi , qword ptr [ rax ] mov edx , dword ptr [ rdx ] call hexvar test eax , eax je hexvar mov dword ptr [ rbx + num ] , num pop rbx ret nop ret
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar sub rsp , hexvar mov r9 , qword ptr [ rax ] test r9 , r9 je hexvar mov rdx , qword ptr [ r9 + num ] mov rax , qword ptr [ r9 ] mov edi , dword ptr [ rdx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax test edi , edi je hexvar mov rax , r9 mov r8 , rsp jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rdi mov r8 , qword ptr [ rax + hexvar ] mov qword ptr [ rcx + hexvar ] , r8 mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov rdx , qword ptr [ rax + num ] mov ecx , dword ptr [ rdx + hexvar ] test ecx , ecx je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rcx + hexvar ] , num jne hexvar mov qword ptr [ rcx + hexvar ] , rdi jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar mov qword ptr [ rdx + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ r9 + num ] , rdx add rsp , hexvar ret nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , num ret nop dword ptr [ rax + rax ] lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rdx ] mov dword ptr [ rsi + hexvar ] , eax add dword ptr [ rdx ] , num ret
lea rax , [ rip + hexvar ] cmp rdi , rax je hexvar cmp dword ptr [ rdi + hexvar ] , esi jae hexvar mov dword ptr [ rdi + hexvar ] , esi ret
test rdx , rdx jne hexvar ret nop word ptr cs : [ rax + rax ] push rbp mov rbp , rdi push rbx mov rbx , rdx sub rsp , num mov rdi , qword ptr [ rdi ] call hexvar add qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
sub rsp , hexvar push num push r9 mov r9 , rcx mov rcx , rdx mov edx , esi push r8 xor esi , esi xor r8d , r8d call hexvar add rsp , hexvar ret
push r15 mov r15d , r8d push r14 mov r14d , edx push r13 mov r13d , esi push r12 mov r12 , rdi push rbp mov ebp , r9d push rbx mov rbx , rcx sub rsp , num cmp byte ptr [ rcx + hexvar ] , hexvar ja hexvar movzx eax , byte ptr [ rcx + hexvar ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop xor r8d , r8d xor ecx , ecx mov r9 , qword ptr [ rbx + hexvar ] sub rsp , num mov edx , r14d mov esi , r13d mov rdi , r12 push num push rbp push r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov r8 , qword ptr [ rcx + num ] mov rcx , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rcx ] mov r9 , qword ptr [ rcx + hexvar ] xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rcx call hexvar mov byte ptr [ rbx + hexvar ] , num xor r8d , r8d mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov r9 , qword ptr [ rbx + hexvar ] xor r8d , r8d mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar xor r9d , r9d xor r8d , r8d mov rcx , rax jmp hexvar nop word ptr cs : [ rax + rax ] xor r8d , r8d jmp hexvar
sub rsp , hexvar push num mov eax , dword ptr [ rsp + hexvar ] push rax push r9 mov r9 , r8 xor r8d , r8d call hexvar add rsp , hexvar ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar test byte ptr [ rip + hexvar ] , num jne hexvar xor eax , eax ret nop dword ptr [ rax ] push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rax sub rsp , num call hexvar cmp rax , rbp je hexvar xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov esi , num call hexvar test eax , eax jne hexvar mov edx , dword ptr [ rbx + hexvar ] cmp edx , hexvar ja hexvar cmp edx , hexvar jae hexvar cmp edx , hexvar jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov eax , dword ptr [ rax + hexvar ] shr eax , num and eax , num jmp hexvar nop word ptr cs : [ rax + rax ] cmp edx , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test byte ptr [ rax ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] shr eax , num and eax , num jmp hexvar call hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar mov eax , num jmp hexvar
test rdi , rdi je hexvar push r12 lea rsi , [ rip + hexvar ] mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx xor ebx , ebx jmp hexvar nop add ebx , num cmp ebx , hexvar je hexvar mov rsi , qword ptr [ rbp ] add rbp , hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar shl rbx , num lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax + rbx + num ] pop rbx pop rbp pop r12 ret pop rbx mov eax , hexvar pop rbp pop r12 ret mov eax , hexvar ret
push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov rbx , rax call hexvar mov edx , dword ptr [ rbx ] mov dword ptr [ rax ] , edx add rsp , num pop rbx pop rbp ret
push r12 mov r12 , qword ptr [ rip + hexvar ] push rbp push rbx movzx ebx , byte ptr [ r12 ] test bl , bl je hexvar lea rcx , [ rip + hexvar ] movzx eax , bl test byte ptr [ rcx + rax * num ] , hexvar jne hexvar lea rax , [ r12 + num ] jmp hexvar nop dword ptr [ rax + rax ] movzx edx , bl add rax , num test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar mov qword ptr [ rip + hexvar ] , rax movzx ebx , byte ptr [ rax ] mov rsi , rax test bl , bl jne hexvar mov byte ptr [ rsi ] , num lea rbp , [ rip + hexvar ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rbp , hexvar mov rdi , qword ptr [ rbp ] test rdi , rdi je hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] movdqu xmm0 , xmmword ptr [ rbp + num ] mov rdi , rcx mov rsi , qword ptr [ rbp + hexvar ] or rdi , rdx movaps xmmword ptr [ rip + hexvar ] , xmm0 or rdi , rax mov qword ptr [ rip + hexvar ] , rsi jne hexvar mov rax , - num mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bl pop rbx pop rbp pop r12 jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bl pop rbx pop rbp pop r12 jmp hexvar or rcx , qword ptr [ rip + hexvar ] or rdx , qword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rcx mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov rsi , r12 jmp hexvar
push r12 mov r12 , qword ptr [ rip + hexvar ] push rbp push rbx movzx ebx , byte ptr [ r12 ] test bl , bl je hexvar lea rcx , [ rip + hexvar ] movzx eax , bl test byte ptr [ rcx + rax * num ] , hexvar jne hexvar lea rax , [ r12 + num ] jmp hexvar nop dword ptr [ rax + rax ] movzx edx , bl add rax , num test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar mov qword ptr [ rip + hexvar ] , rax movzx ebx , byte ptr [ rax ] mov rsi , rax test bl , bl jne hexvar mov byte ptr [ rsi ] , num lea rbp , [ rip + hexvar ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rbp , hexvar mov rdi , qword ptr [ rbp ] test rdi , rdi je hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp + hexvar ] movdqa xmm0 , xmmword ptr [ rbp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov byte ptr [ rax ] , bl pop rbx pop rbp pop r12 jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bl pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rsi , r12 jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , qword ptr [ rip + hexvar ] movzx ebx , byte ptr [ r13 ] test bl , bl je hexvar lea rcx , [ rip + hexvar ] movzx eax , bl test byte ptr [ rcx + rax * num ] , hexvar jne hexvar lea rax , [ r13 + num ] jmp hexvar nop dword ptr [ rax + rax ] movzx edx , bl add rax , num test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar mov qword ptr [ rip + hexvar ] , rax movzx ebx , byte ptr [ rax ] mov rsi , rax test bl , bl jne hexvar mov byte ptr [ rsi ] , num lea r12 , [ rip + hexvar ] lea rbp , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add r12 , hexvar mov rbp , qword ptr [ r12 ] test rbp , rbp je hexvar mov rsi , r13 mov rdi , rbp call hexvar test eax , eax jne hexvar movdqa xmm0 , xmmword ptr [ r12 + hexvar ] mov rax , qword ptr [ r12 + hexvar ] mov rsi , rbp lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov rsi , r13 jmp hexvar
mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar ret nop dword ptr [ rax + rax ] jmp hexvar
sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret
push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp mov rbp , rdi xor edi , edi push rbx call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar lea rbx , [ rip + hexvar ] lea r12 , [ rip + hexvar ] nop mov rsi , qword ptr [ rbx + num ] test rsi , rsi je hexvar mov edx , num xor edi , edi call hexvar mov rdx , qword ptr [ rbx ] mov rsi , r12 mov rdi , rbp mov rcx , rax xor eax , eax call hexvar add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar lea rbx , [ rip + hexvar ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , qword ptr [ rbx + num ] test rsi , rsi je hexvar mov edx , num xor edi , edi call hexvar mov rdx , qword ptr [ rbx ] mov rsi , r12 mov rdi , rbp mov rcx , rax xor eax , eax call hexvar add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar pop rbx mov rdi , rbp pop rbp mov rsi , rax pop r12 xor eax , eax jmp hexvar
mov dword ptr [ rip + hexvar ] , num mov eax , num mov byte ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num ret
push r13 mov esi , hexvar push r12 mov r12 , rdi push rbp push rbx sub rsp , num call hexvar mov r13 , rax test rax , rax je hexvar mov rbp , rax sub rbp , r12 mov edx , num lea rbx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] add rbx , hexvar mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar mov rdx , qword ptr [ rbx + num ] cmp rdx , rbp jne hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar mov rbp , qword ptr [ rip + hexvar ] lea rax , [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax test rbp , rbp je hexvar mov qword ptr [ rbp ] , num mov rsi , qword ptr [ rbx ] lea rdi , [ rip + hexvar ] mov qword ptr [ rbp + num ] , num mov qword ptr [ rbp + hexvar ] , num call hexvar test r13 , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov rdx , rbp mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar xor eax , eax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , r12 call hexvar mov rbp , rax jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov rbp , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov r12d , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num je hexvar mov rdi , rbx call hexvar mov esi , r12d mov rdi , qword ptr [ rax + num ] mov rbp , rax movzx r13d , byte ptr [ rax + hexvar ] call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar or r13d , hexvar mov rdi , rbx mov byte ptr [ rbp + hexvar ] , r13b call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test byte ptr [ rax + hexvar ] , num je hexvar nop movzx eax , byte ptr [ rbp + hexvar ] and eax , hexvar or eax , num mov byte ptr [ rbp + hexvar ] , al jmp hexvar
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar lea r13 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , r12 call hexvar cmp rax , qword ptr [ rbx ] jae hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp je hexvar mov r12 , qword ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] test r12 , r12 je hexvar test rbx , rbx jne hexvar mov rbp , rbx test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar cmp rax , qword ptr [ rbx ] je hexvar jmp hexvar nop mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbx ] mov rbx , rax cmp rdx , qword ptr [ rax ] jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , r13 lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar jmp hexvar nop cmp qword ptr [ rbx + hexvar ] , num jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop word ptr cs : [ rax + rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx + hexvar ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbx ] mov edx , num mov rsi , r12 xor edi , edi call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop xor edi , edi call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp dword ptr [ rax + num ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop word ptr cs : [ rax + rax ] pop rbx pop rbp pop r12 ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rax , rdx ret nop dword ptr [ rax ] test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rax , rdx ret
mov rdx , qword ptr [ rdi + hexvar ] mov eax , num test rdx , rdx je hexvar push rbx mov rbx , rdi mov rdi , rdx call hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test byte ptr [ rax ] , num je hexvar call hexvar test byte ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx + hexvar ] lea edx , [ rax - hexvar ] cmp edx , num jbe hexvar lea edx , [ rax - hexvar ] cmp edx , hexvar jbe hexvar lea edx , [ rax - hexvar ] cmp edx , hexvar jbe hexvar sub eax , hexvar pop rbx cmp eax , num seta al movzx eax , al ret nop dword ptr [ rax ] movabs rcx , hexvar bt rcx , rdx jae hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] nop dword ptr [ rax ] call hexvar test byte ptr [ rax ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar jmp hexvar nop dword ptr [ rax + rax ] ret
push rbx mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test eax , hexvar jne hexvar test al , hexvar je hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test byte ptr [ rax ] , num je hexvar call hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] nop dword ptr [ rax ] call hexvar test byte ptr [ rax ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] nop dword ptr [ rax ] lea edx , [ rax - hexvar ] cmp edx , hexvar ja hexvar mov eax , hexvar bt rax , rdx jae hexvar xor eax , eax pop rbx ret nop word ptr [ rax + rax ] lea edx , [ rax - hexvar ] cmp edx , num jbe hexvar lea edx , [ rax - hexvar ] cmp edx , hexvar jbe hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov eax , num pop rbx ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test byte ptr [ rax + hexvar ] , num je hexvar jmp hexvar
lea eax , [ rdx - num ] mov r9d , num cmp eax , num ja hexvar lea r8 , [ rip + hexvar ] mov r9d , dword ptr [ r8 + rax * num ] xor r8d , r8d jmp hexvar
push rbp mov r11 , rsi mov r8 , rsi mov esi , num push rbx mov r9 , rdi sar r8 , hexvar sub rsp , num call hexvar mov esi , num lea rbp , [ r9 + num ] mov r10 , rax mov rdi , rbp call hexvar mov rbx , r11 mov rdx , r11 mov rsi , r8 and ah , hexvar sar rbx , hexvar sar rdx , hexvar mov rdi , r9 xor rbx , r8 xor rdx , r8 shl rsi , hexvar shl rbx , hexvar shl rdx , hexvar and esi , hexvar and edx , hexvar and ebx , hexvar or rbx , rdx mov rdx , r11 sar r11 , hexvar sar rdx , num and r11d , hexvar and edx , hexvar or rsi , r11 or rbx , rdx or rsi , r10 mov edx , num xor bh , hexvar or rbx , rax call hexvar add rsp , num mov rsi , rbx mov rdi , rbp pop rbx mov edx , num pop rbp jmp hexvar
cmp esi , hexvar je hexvar xor eax , eax ret nop dword ptr [ rax + rax ] cmp byte ptr [ rdi + hexvar ] , num jne hexvar cmp byte ptr [ rdx + hexvar ] , num jne hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num mov edx , dword ptr [ rip + hexvar ] and edx , hexvar cmp edx , hexvar jbe hexvar mov rdi , rax call hexvar test byte ptr [ rax ] , num jne hexvar mov rax , qword ptr [ rbx ] mov rdi , rax call hexvar test byte ptr [ rax ] , num jne hexvar xor eax , eax add rsp , num pop rbx pop rbp ret mov rdi , qword ptr [ rbx ] call hexvar test byte ptr [ rax + hexvar ] , num je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbp ] mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] sub qword ptr [ rbx + hexvar ] , rax mov eax , num jmp hexvar
mov esi , num mov r9 , rdi call hexvar mov esi , num shl rax , hexvar lea rdi , [ r9 + num ] mov r8 , rax call hexvar or rax , r8 ret
mov eax , esi mov r9 , rdi neg eax cmp eax , hexvar jbe hexvar mov edi , eax call hexvar mov r8d , eax mov eax , esi not eax cmp eax , hexvar jbe hexvar mov edi , eax call hexvar mov rdx , qword ptr [ r9 ] lea rdi , [ rip + hexvar ] mov eax , eax mov rsi , rdx shr rsi , hexvar and esi , hexvar movsxd rcx , dword ptr [ rdi + rsi * num ] add rcx , rdi jmp rcx nop dword ptr [ rax ] mov rax , r8 mov ecx , num nop dword ptr [ rax + rax ] mov esi , hexvar cmp rax , rsi je hexvar shl ecx , hexvar and edx , hexvar movsxd rcx , ecx or rdx , rcx mov qword ptr [ r9 ] , rdx ret nop dword ptr [ rax ] mov rax , r8 mov ecx , num jmp hexvar nop word ptr [ rax + rax ] mov ecx , num jmp hexvar nop mov ecx , num jmp hexvar nop word ptr [ rax + rax ] mov rax , r8 mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , r8 mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov eax , hexvar ret
xor ecx , ecx mov edx , edi rol edx , cl mov eax , edx and eax , hexvar je hexvar test dh , hexvar je hexvar test edx , hexvar jne hexvar lea edi , [ rcx + hexvar ] shr edx , num shl edi , num or edx , edi mov dword ptr [ rsi ] , edx shl ecx , num or eax , ecx ret nop mov r8d , edx and r8d , hexvar test edx , hexvar je hexvar test r8d , r8d je hexvar nop word ptr [ rax + rax ] add ecx , num cmp ecx , hexvar jne hexvar mov eax , hexvar ret nop lea edi , [ rcx + hexvar ] shr edx , hexvar shl ecx , num shl edi , num or eax , ecx or edx , edi mov dword ptr [ rsi ] , edx ret test r8d , r8d je hexvar lea edi , [ rcx + num ] shr edx , hexvar shl edi , num or edx , edi mov dword ptr [ rsi ] , edx jmp hexvar push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rdi , rsi mov rbx , rsi call hexvar lea rcx , [ rip + hexvar ] mov r12 , rax movzx eax , byte ptr [ rax ] mov rdx , r12 test al , al je hexvar nop dword ptr [ rax ] movzx eax , byte ptr [ rcx + rax ] add rdx , num mov byte ptr [ rdx - num ] , al movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov rsi , r12 mov rdi , rbp call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar xor edx , edx mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] xor eax , eax ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov rdi , r12 call hexvar jmp hexvar
push rbx xor esi , esi sub rsp , hexvar lea rbx , [ rsp + num ] mov qword ptr [ rsp + num ] , rdi mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] mov esi , num mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar add eax , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov esi , num mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar add eax , hexvar pop rbx ret
xor esi , esi mov edi , hexvar jmp hexvar
push r15 lea rax , [ rip + hexvar ] lea r15 , [ rip + hexvar ] mov ecx , num push r14 lea r14 , [ rip + hexvar ] push r13 mov r13 , rdi push r12 push rbp mov ebp , esi push rbx sub rsp , num cmp esi , num sbb ebx , ebx and ebx , hexvar add ebx , hexvar test esi , esi cmove r15 , rax lea rax , [ rip + hexvar ] cmove r14 , rax mov rax , qword ptr [ rdi ] lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta r12b sbb r12b , num movsx r12d , r12b test r12d , r12d jne hexvar lea rsi , [ rax + hexvar ] xor edx , edx mov rdi , r15 xor eax , eax call hexvar mov ecx , num xor r9d , r9d push num xor edx , edx mov rdi , rax xor r8d , r8d push r12 mov esi , ebx call hexvar pop rax pop rdx test ebp , ebp je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , r13 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop lea rax , [ rip + hexvar ] xor edx , edx mov rsi , rax mov rdi , r14 xor eax , eax call hexvar cmp r14 , r15 je hexvar test byte ptr [ r13 + hexvar ] , num je hexvar mov rdx , qword ptr [ r13 + hexvar ] mov ecx , hexvar mov r12d , num mov r9 , qword ptr [ rdx + hexvar ] test r9 , r9 jne hexvar mov rbx , qword ptr [ r13 ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop word ptr [ rax + rax ] mov ecx , num xor r12d , r12d xor r9d , r9d jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , hexvar cmp rdi , hexvar jle hexvar lea rax , [ rdi - hexvar ] sar rax , num je hexvar lea rcx , [ rsp + hexvar ] xor edx , edx mov edi , eax lea ebx , [ rdx + num ] and edi , hexvar shr rax , num jne hexvar mov byte ptr [ rsp + rdx + hexvar ] , dil movsxd rbx , ebx lea rbp , [ rsp + hexvar ] jmp hexvar nop word ptr [ rax + rax ] movzx edi , byte ptr [ rbp + rbx ] movsx rdi , dil mov esi , num sub rbx , num call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov esi , num mov edi , hexvar pop rbx pop rbp jmp hexvar or edi , hexvar add rcx , num movsxd rdx , ebx mov byte ptr [ rcx - num ] , dil jmp hexvar cmp rdi , hexvar jg hexvar test rdi , rdi jg hexvar jne hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov esi , num xor edi , edi call hexvar jmp hexvar nop lea rdi , [ rdi - num ] sar rdi , num add rsp , hexvar mov esi , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov esi , num mov edi , hexvar call hexvar lea rdi , [ rbx - hexvar ] add rsp , hexvar mov esi , num pop rbx sar rdi , num pop rbp jmp hexvar nop word ptr [ rax + rax ] mov rbp , rdi neg rbp cmp rdi , - hexvar jge hexvar nop mov esi , num mov edi , hexvar sub rbp , hexvar call hexvar cmp rbp , hexvar jg hexvar lea rdi , [ rbp - num ] sar rdi , num or rdi , hexvar jmp hexvar
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] and byte ptr [ rip + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] lea esi , [ rcx + rbp ] cmp esi , edx jle hexvar add edx , num mov dword ptr [ rip + hexvar ] , edx movsxd rsi , edx test rax , rax je hexvar mov rdi , rax call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add ecx , num movsxd rdx , ecx mov byte ptr [ rax + rdx - num ] , bl shr rbx , num add rdx , num cmp ebp , num je hexvar mov byte ptr [ rax + rdx - num ] , bl mov ecx , edx mov dword ptr [ rip + hexvar ] , ecx add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rsi call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
mov rax , rdi cmp rsi , num jne hexvar mov rsi , rax mov ecx , num lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al cmp eax , num sbb eax , eax and eax , hexvar sub eax , num ret mov eax , hexvar ret
test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] or eax , hexvar mov dword ptr [ rdi + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] test byte ptr [ rax + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rdi + hexvar ] cmp eax , num je hexvar jbe hexvar cmp eax , num je hexvar ret nop test eax , eax je hexvar mov edi , num jmp hexvar nop cmp dword ptr [ rdi + hexvar ] , hexvar mov edx , num cmove eax , edx mov edi , eax jmp hexvar
push rbx add rsp , - hexvar cmp esi , hexvar jg hexvar sub rsp , num movsxd r9 , edi mov ecx , esi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar pop rbx ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rsp call hexvar mov rdi , rbx mov edx , hexvar mov rsi , rax xor eax , eax call hexvar mov rsi , rbx lea rdi , [ rip + hexvar ] xor eax , eax call hexvar
mov rax , rsi ret
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov r12 , qword ptr [ rdi + hexvar ] mov rdi , r12 call hexvar mov rdi , r12 mov r13 , rax call hexvar lea rdx , [ rip + hexvar ] cmp r13 , rdx je hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rdi , r12 call hexvar add rax , qword ptr [ rbx + hexvar ] test rbp , rbp je hexvar movzx edx , byte ptr [ r13 + hexvar ] xor dl , byte ptr [ rbx + hexvar ] and edx , num je hexvar cmp rbx , r13 je hexvar mov edi , num jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar cmp r13 , rbx je hexvar mov ecx , dword ptr [ rbx + hexvar ] lea edx , [ rcx - num ] cmp edx , num ja hexvar mov rcx , qword ptr [ rbx + hexvar ] mov esi , edi shl esi , cl neg esi movsxd rsi , esi test rbp , rbp js hexvar and rbp , rsi test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop neg rbp and rsi , rbp neg rsi mov rbp , rsi jmp hexvar nop test rbx , rbx je hexvar add rsp , num add rax , rbp pop rbx pop rbp pop r12 pop r13 ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov qword ptr [ rdi + hexvar ] , num mov eax , num ret
cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov eax , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov r8 , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] lea rsi , [ r8 + num ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num xor eax , eax test dl , dl je hexvar ret mov byte ptr [ r8 ] , hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rax + num ] , num mov eax , num ret
mov ecx , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rip + hexvar ] , rdi test ecx , ecx je hexvar call hexvar or dword ptr [ rax ] , num mov edx , dword ptr [ rip + hexvar ] mov rdi , rbx test edx , edx je hexvar call hexvar or dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] call hexvar and dword ptr [ rax ] , hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar and dword ptr [ rax ] , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov rdi , rbx call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num or dword ptr [ rax ] , num pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar cmp byte ptr [ rax + num ] , hexvar jne hexvar jmp hexvar
mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax setne al movzx eax , al ret nop dword ptr [ rax ] sub rsp , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rax + hexvar ] xor eax , eax test edx , edx setne al add rsp , num ret
mov rax , qword ptr [ rip + hexvar ] push rbx mov rax , qword ptr [ rax + hexvar ] mov edi , dword ptr [ rax + hexvar ] test edi , edi je hexvar mov esi , dword ptr [ rax + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx jne hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rdx , qword ptr [ rip + hexvar ] test dh , hexvar je hexvar mov rcx , qword ptr [ rip + hexvar ] and edx , hexvar and ecx , hexvar or rcx , rdx jne hexvar mov rsi , qword ptr [ rip + hexvar ] cmp rsi , hexvar ja hexvar mov rdx , rsi and edx , hexvar cmp rdx , hexvar je hexvar mov edx , hexvar lea rcx , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] and rdx , rsi cmp rdx , qword ptr [ rcx ] je hexvar mov rdx , qword ptr [ rcx + hexvar ] add rcx , hexvar test rdx , rdx jne hexvar cmp dword ptr [ rax + hexvar ] , num jle hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num nop dword ptr [ rax ] cmp dword ptr [ rax + hexvar ] , hexvar je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov qword ptr [ rax + hexvar ] , num pop rbx ret nop word ptr [ rax + rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num jmp hexvar lea rcx , [ rip + hexvar ] mov rbx , qword ptr [ rcx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov ecx , num mov esi , hexvar and edi , num mov edx , num mov rax , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ rax + hexvar ] sub ecx , r8d sub edx , r8d rol esi , cl shl edi , cl and esi , dword ptr [ rax + hexvar ] bts edi , edx and esi , hexvar mov rdx , qword ptr [ rax + hexvar ] or esi , edi mov edi , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , esi jmp hexvar
movabs rcx , hexvar push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rax + hexvar ] , edi mov edi , num mov dword ptr [ rax + hexvar ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] xor edx , edx mov edi , ebp mov rbx , qword ptr [ rax + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movabs rdx , hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx add rsp , num pop rbx pop rbp ret
push rbx and esi , hexvar shl edi , num mov rbx , rdx or edi , esi or edi , hexvar sub rsp , hexvar movsxd rsi , edi test rdx , rdx je hexvar mov rdi , rbx mov edx , num call hexvar add rsp , hexvar mov rax , rbx pop rbx ret nop dword ptr [ rax ] mov edi , num mov qword ptr [ rsp + num ] , rsi call hexvar mov edi , num mov rbx , rax call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar
push rbp mov edx , num mov rbp , rsi shr rsi , hexvar push rbx mov rbx , rdi sub rsp , num call hexvar add rsp , num lea rdi , [ rbx + num ] mov rsi , rbp pop rbx mov edx , num pop rbp jmp hexvar
push r13 push r12 mov r12d , esi push rbp mov rbp , rdi push rbx movsx ebx , dx sub rsp , hexvar movzx eax , byte ptr [ rcx + hexvar ] cmp al , num je hexvar ja hexvar cmp al , num jne hexvar test r8d , r8d jne hexvar mov edx , ebx mov esi , r12d mov rdi , rbp call hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] sub eax , hexvar cmp al , num jbe hexvar mov rdi , rcx mov dword ptr [ rsp + num ] , r9d mov dword ptr [ rsp ] , r8d call hexvar sub rsp , num mov edx , ebx mov esi , r12d mov r9d , dword ptr [ rsp + hexvar ] mov rcx , rax mov rdi , rbp push r9 mov r8d , dword ptr [ rsp + hexvar ] mov r9d , r8d xor r8d , r8d call hexvar pop rdx pop rcx jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rcx + hexvar ] lea r13 , [ rsp + hexvar ] xor eax , eax mov dword ptr [ rsp + hexvar ] , r9d lea rsi , [ rip + hexvar ] mov rdi , r13 mov dword ptr [ rsp + num ] , r8d mov qword ptr [ rsp ] , rcx call hexvar mov rdi , r13 call hexvar lea rsi , [ rip + hexvar ] mov r13 , rax mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov rdi , r13 call hexvar mov rcx , qword ptr [ rsp ] mov rdi , r13 mov rsi , qword ptr [ rcx + hexvar ] call hexvar mov rcx , qword ptr [ rsp ] mov r9d , dword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + num ] mov byte ptr [ rcx + hexvar ] , num mov qword ptr [ rcx ] , r13 mov qword ptr [ rcx + hexvar ] , num jmp hexvar
mov esi , num mov edi , num jmp hexvar
mov esi , num mov edi , num jmp hexvar
xor esi , esi mov edi , num jmp hexvar
mov esi , num xor edi , edi jmp hexvar
mov esi , num xor edi , edi jmp hexvar
xor esi , esi xor edi , edi jmp hexvar
mov esi , num mov edi , hexvar jmp hexvar
xor esi , esi mov edi , hexvar jmp hexvar
mov esi , hexvar mov edi , hexvar jmp hexvar
mov esi , num mov edi , num jmp hexvar
mov esi , num mov edi , num jmp hexvar
xor esi , esi mov edi , num jmp hexvar
mov esi , num xor edi , edi jmp hexvar
mov esi , num xor edi , edi jmp hexvar
mov esi , num xor edi , edi jmp hexvar
xor esi , esi xor edi , edi jmp hexvar
mov esi , num mov edi , hexvar jmp hexvar
mov esi , num mov edi , hexvar jmp hexvar
mov esi , num mov edi , hexvar jmp hexvar
xor esi , esi mov edi , hexvar jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , num cmp dword ptr [ rip + hexvar ] , hexvar je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test byte ptr [ rip + hexvar ] , num je hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov esi , num xor edi , edi xor eax , eax call hexvar mov rbp , - hexvar xor ebx , ebx mov edx , eax lea rcx , [ rip + hexvar ] xor r13d , r13d cmp dword ptr [ rcx + rdx * num ] , num sete r13b test r12d , r12d je hexvar mov esi , eax mov r8d , hexvar mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar mov edx , hexvar xor esi , esi mov edi , r13d call hexvar mov rdx , qword ptr [ rip + hexvar ] and edx , hexvar or rdx , rbp or rdx , hexvar mov qword ptr [ rip + hexvar ] , rdx test byte ptr [ rip + hexvar ] , num je hexvar lea eax , [ rbx + rbx ] and ebx , hexvar and edx , hexvar and eax , hexvar or eax , ebx or rdx , rax mov qword ptr [ rip + hexvar ] , rdx add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar mov rbp , - hexvar call hexvar mov edx , hexvar mov esi , num mov edi , num mov ebx , eax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov esi , eax mov r8d , hexvar mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar mov edx , hexvar xor esi , esi mov edi , r13d call hexvar mov rdx , qword ptr [ rip + hexvar ] and edx , hexvar or rdx , rbp jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov edi , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov dword ptr [ rdx ] , num xor eax , eax add rsp , hexvar ret nop dword ptr [ rax ] lea rax , [ rsp + hexvar ] mov ecx , hexvar lea r9 , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov r10 , rax nop dword ptr [ rax ] cmp ecx , hexvar ja hexvar mov r8d , ecx lea eax , [ rcx + num ] mov r8d , dword ptr [ r10 + r8 ] cmp r8d , - num je hexvar cmp eax , hexvar ja hexvar add rax , r10 add ecx , hexvar cmp dword ptr [ rax ] , esi jne hexvar cmp edi , r8d jne hexvar mov dword ptr [ rdx ] , num xor eax , eax add rsp , hexvar ret nop word ptr cs : [ rax + rax ] mov r8d , dword ptr [ r9 ] lea rax , [ r9 + num ] cmp r8d , - num je hexvar lea r9 , [ rax + num ] jmp hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rsp + num ] , eax xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov eax , hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , hexvar jmp hexvar mov ecx , eax mov rax , r9 jmp hexvar
sub rsp , num test byte ptr [ rip + hexvar ] , hexvar jne hexvar cmp dword ptr [ rip + hexvar ] , hexvar je hexvar test byte ptr [ rip + hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] add rsp , num jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , num je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , hexvar je hexvar add rsp , num ret nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test byte ptr [ rip + hexvar ] , num je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar add rsp , num jmp hexvar nop word ptr cs : [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num jne hexvar test eax , eax je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] mov rax , rdi and eax , hexvar test byte ptr [ rip + hexvar ] , num jne hexvar sub rsp , num test rax , rax jne hexvar mov esi , dword ptr [ rip + hexvar ] lea eax , [ rsi - num ] cmp eax , hexvar ja hexvar mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] add esi , esi mov dword ptr [ rip + hexvar ] , num movsxd rsi , esi shl edx , hexvar mov eax , edx movzx edx , byte ptr [ rip + hexvar ] or rax , rdi shr dl , num and edx , num shl edx , hexvar movsxd rdx , edx or rax , rdx mov edx , ecx shl ecx , hexvar shl edx , hexvar and ecx , hexvar and edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] or rax , rsi or rax , rcx mov qword ptr [ rip + hexvar ] , rax test edx , edx je hexvar mov edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr cs : [ rax + rax ] test byte ptr [ rip + hexvar ] , num jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] add rsp , num jmp hexvar nop dword ptr [ rax ] test edi , hexvar je hexvar test rax , rax je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] test rax , rax je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov r8d , hexvar mov esi , hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] cmp edx , num ja hexvar mov edi , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] shl edx , num mov dword ptr [ rip + hexvar ] , num mov esi , dword ptr [ rip + hexvar ] mov r8d , edi mov eax , ecx shl edi , hexvar add ecx , ecx shl r8d , hexvar and eax , hexvar and edi , hexvar and ecx , hexvar and r8d , hexvar or rax , qword ptr [ rip + hexvar ] or rax , r8 mov r8d , esi shl esi , num shl r8d , hexvar and esi , hexvar and r8d , hexvar or rax , r8 or rax , rdi or rax , rsi mov esi , dword ptr [ rip + hexvar ] or rax , rcx or rax , rdx mov edx , eax mov ecx , eax or edx , hexvar test esi , esi jne hexvar mov eax , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov edx , eax or edx , hexvar test eax , hexvar cmovne ecx , edx or ecx , hexvar mov edx , ecx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov edx , hexvar mov esi , num xor eax , eax mov edi , num call hexvar lea rdx , [ rip + hexvar ] xor edi , edi mov esi , num mov eax , eax cmp dword ptr [ rdx + rax * num ] , num mov edx , hexvar sete dil add rsp , num jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov ecx , hexvar mov ebx , eax xor eax , eax mov esi , ebx call hexvar xor edi , edi mov esi , num shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov ecx , hexvar mov ebx , eax xor eax , eax mov esi , ebx call hexvar xor edi , edi mov esi , num shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov rcx , rdx or ch , num cmp eax , num cmove rdx , rcx shr rax , hexvar xor edi , edi mov qword ptr [ rip + hexvar ] , rdx mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov rcx , rdx or cl , hexvar cmp eax , num cmove rdx , rcx shr rax , hexvar xor edi , edi mov qword ptr [ rip + hexvar ] , rdx mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov ecx , hexvar mov ebx , eax xor eax , eax mov esi , ebx call hexvar xor edi , edi mov esi , num shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edx , hexvar mov ecx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar shr rax , hexvar mov rdx , rax cmp rax , hexvar jne hexvar cmp ebx , num je hexvar lea rax , [ rip + hexvar ] xor edi , edi mov esi , num cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar nop mov qword ptr [ rip + hexvar ] , hexvar pop rbx jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num shr rax , hexvar and ecx , hexvar lea rcx , [ rcx + rcx * num ] mov esi , dword ptr [ rdx + rcx * num ] mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx mov qword ptr [ rip + hexvar ] , rsi sete dil mov esi , num jmp hexvar
sub rsp , num mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar xor esi , esi mov rcx , rax shr rcx , hexvar mov rdx , rcx shl edx , hexvar or qword ptr [ rip + hexvar ] , rdx cmp eax , num mov edx , hexvar sete sil xor edi , edi add rsp , num jmp hexvar
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edi , num mov ecx , hexvar mov edx , hexvar mov ebx , eax xor eax , eax mov esi , ebx call hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi je hexvar jle hexvar mov rcx , rax shr rcx , hexvar cmp edi , ecx jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] lea rdx , [ rip + hexvar ] mov r8d , ecx cmp dword ptr [ rdx + rbx * num ] , num pop rbx sete dl xor esi , esi cmp eax , num sete sil movzx edx , dl sub r8d , edi mov edi , num jmp hexvar nop dword ptr [ rax + rax ] and byte ptr [ rip + hexvar ] , hexvar pop rbx jmp hexvar
push rbx mov edx , hexvar mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar xor edi , edi shr rax , hexvar mov rdx , rax imul edx , dword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] shr edx , num cmp dword ptr [ rax + rbx * num ] , num sete dil lea eax , [ rdi * num + num ] cmp eax , edx jbe hexvar mov r8d , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] shl edx , num shl edi , num mov esi , dword ptr [ rip + hexvar ] movsxd rdi , edi mov dword ptr [ rip + hexvar ] , num mov r9d , r8d mov eax , ecx shl r8d , hexvar add ecx , ecx shl r9d , hexvar and eax , hexvar or rax , qword ptr [ rip + hexvar ] and ecx , hexvar and r9d , hexvar and r8d , hexvar or rax , r9 mov r9d , esi shl esi , num shl r9d , hexvar and esi , hexvar and r9d , hexvar or rax , r9 or rax , r8 or rax , rsi mov esi , dword ptr [ rip + hexvar ] or rax , rcx or rax , rdx or rax , rdi mov edx , eax mov ecx , eax or edx , hexvar test esi , esi je hexvar mov edx , eax or edx , hexvar test eax , hexvar cmovne ecx , edx or ecx , hexvar mov edx , ecx mov eax , edx pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret
mov esi , num mov edi , num jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num xor eax , eax mov r8d , hexvar mov ecx , hexvar mov edx , hexvar call hexvar mov edi , num add rsp , num shr rax , hexvar mov rsi , rax jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num xor eax , eax mov r8d , hexvar mov ecx , hexvar mov edx , hexvar call hexvar add rsp , num mov rsi , rax mov edi , eax shr rsi , hexvar jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num xor eax , eax mov r8d , hexvar mov ecx , hexvar mov edx , hexvar call hexvar add rsp , num mov rsi , rax mov edi , eax shr rsi , hexvar jmp hexvar
sub rsp , num mov esi , hexvar mov edi , num xor eax , eax mov r8d , hexvar mov ecx , hexvar mov edx , hexvar call hexvar add rsp , num mov rsi , rax mov edi , eax shr rsi , hexvar jmp hexvar
sub rsp , num test byte ptr [ rip + hexvar ] , num je hexvar mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov eax , eax and edx , hexvar lea r8 , [ rdx + rdx * num ] mov edx , esi shl esi , hexvar shl edx , hexvar and esi , hexvar movzx edx , dx or edx , dword ptr [ rdi + r8 * num ] mov edi , ecx add ecx , ecx and edi , hexvar and ecx , hexvar or edx , edi or edx , esi or edx , ecx lea rcx , [ rip + hexvar ] cmp dword ptr [ rcx + rax * num ] , num sete al movzx eax , al shl eax , num cdqe or rax , rdx mov esi , dword ptr [ rip + hexvar ] mov ecx , eax mov edx , eax mov dword ptr [ rip + hexvar ] , num or ecx , hexvar test esi , esi je hexvar mov ecx , eax or ecx , hexvar test eax , hexvar cmovne edx , ecx mov ecx , edx or ecx , hexvar mov eax , ecx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num and eax , hexvar lea rdx , [ rax + rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax + rdx * num + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
push rbp mov ecx , hexvar mov edx , hexvar mov ebp , edi push rbx mov r9d , hexvar mov r8d , hexvar xor eax , eax mov esi , hexvar mov edi , hexvar sub rsp , num push hexvar push hexvar call hexvar pop rdx pop rcx cmp eax , hexvar je hexvar mov ebx , eax mov esi , eax mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , num xor edx , edx mov esi , num add rsp , num mov edi , ebp pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax jne hexvar xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov qword ptr [ rip + hexvar ] , num mov edx , num mov esi , num jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret mov qword ptr [ rip + hexvar ] , num xor edx , edx xor esi , esi add rsp , num mov edi , ebp pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov qword ptr [ rip + hexvar ] , num mov edx , num xor esi , esi jmp hexvar
push r13 mov r13d , esi push r12 and r13d , num mov r12d , edi push rbp mov ebp , edx push rbx mov ebx , esi sub rsp , num test edx , edx jne hexvar mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rip + hexvar ] test ebx , ebx jne hexvar test r12d , r12d je hexvar or al , hexvar test ebp , ebp jne hexvar mov edx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num test edx , edx je hexvar mov edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar cmp ebx , num je hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar test ebx , ebx jne hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rip + hexvar ] test r12d , r12d jne hexvar or ah , num jmp hexvar mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar test r13b , r13b je hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rip + hexvar ] or rax , hexvar test r12d , r12d je hexvar or al , hexvar jmp hexvar or rax , hexvar jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
sub rsp , hexvar mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , hexvar call hexvar mov edi , eax call hexvar lea rdi , [ rsp + hexvar ] mov ecx , hexvar mov edx , eax xor eax , eax rep stosq qword ptr [ rdi ] , rax lea rax , [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov qword ptr [ rsp ] , rax mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax cmp edx , hexvar ja hexvar mov rdi , qword ptr [ rsp + rdx * num ] test rdi , rdi je hexvar add rsp , hexvar jmp hexvar nop dword ptr [ rax + rax ] add rsp , hexvar ret
push rbx mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , num xor eax , eax call hexvar mov ebx , dword ptr [ rip + hexvar ] shr rax , hexvar cmp ebx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov esi , hexvar mov dword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rip + hexvar ] and eax , hexvar mov r8d , ecx lea rdi , [ rax + rax * num ] bsf eax , ebx cmove eax , esi lea rsi , [ rip + hexvar ] shl r8d , hexvar movzx r8d , r8w or r8d , dword ptr [ rsi + rdi * num ] mov esi , edx and esi , hexvar shl ecx , hexvar add edx , edx sub eax , num or r8d , esi and ecx , hexvar and edx , hexvar shl eax , hexvar or r8d , ecx or r8d , edx mov edx , dword ptr [ rip + hexvar ] or r8d , eax mov eax , r8d or eax , hexvar test edx , edx je hexvar mov eax , r8d or eax , hexvar test r8d , hexvar cmovne r8d , eax mov eax , r8d or eax , hexvar mov qword ptr [ rip + hexvar ] , rax pop rbx ret mov ecx , hexvar mov edx , hexvar mov esi , hexvar xor eax , eax mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8d , ebx pop rbx mov dword ptr [ rip + hexvar ] , num mov rcx , rax and edx , hexvar shr rcx , hexvar lea rsi , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] mov edi , dword ptr [ rdx + rsi * num + num ] xor esi , esi cmp eax , num sete sil xor edx , edx mov qword ptr [ rip + hexvar ] , rdi mov edi , num jmp hexvar
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar shr rax , hexvar cmp eax , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov r8d , eax mov ecx , eax xor esi , esi xor edi , edi sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
sub rsp , num mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num shr rax , hexvar and ecx , hexvar lea rcx , [ rcx + rcx * num ] mov esi , dword ptr [ rdx + rcx * num ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rsi mov esi , num add rsp , num jmp hexvar
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar shr rax , hexvar cmp eax , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov r8d , eax mov ecx , eax mov esi , num mov edi , num sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop dword ptr [ rax ] and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar mov rdi , rax shr rdi , hexvar mov rcx , rdi cmp edi , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] xor esi , esi mov r8d , edi cmp eax , num mov edi , num sete sil sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
sub rsp , num mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num shr rax , hexvar and ecx , hexvar lea rcx , [ rcx + rcx * num ] mov esi , dword ptr [ rdx + rcx * num ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rsi mov esi , num add rsp , num jmp hexvar
sub rsp , num mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov dword ptr [ rip + hexvar ] , num and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rcx * num ] mov edx , ecx or ecx , hexvar or edx , hexvar cmp eax , num cmove rcx , rdx shr rax , hexvar xor edi , edi mov rdx , rax mov qword ptr [ rip + hexvar ] , rcx add rsp , num jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar mov edx , hexvar shr rax , hexvar cmp eax , hexvar mov eax , hexvar cmove edx , eax lea rax , [ rip + hexvar ] xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil xor esi , esi jmp hexvar
sub rsp , num call hexvar add rsp , num jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar mov edx , hexvar mov esi , num shr rax , hexvar cmp eax , hexvar mov eax , hexvar cmove edx , eax lea rax , [ rip + hexvar ] xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax mov edx , hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov r8d , hexvar xor eax , eax mov esi , ebx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rdi , rax and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] mov esi , dword ptr [ rdx + rcx * num + num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rsi xor esi , esi cmp dword ptr [ rdx + rbx * num ] , num sete sil pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov edx , hexvar test byte ptr [ rip + hexvar ] , num jne hexvar xor edi , edi mov esi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov r8d , hexvar xor eax , eax mov esi , ebx call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num shr rax , hexvar and ecx , hexvar lea rcx , [ rcx + rcx * num ] mov ecx , dword ptr [ rdx + rcx * num ] mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil xor esi , esi mov qword ptr [ rip + hexvar ] , rcx jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar xor edi , edi shr rax , hexvar mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil xor esi , esi jmp hexvar
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r12 mov r12 , rdi push rbp mov ebp , esi mov rsi , rdi mov edi , dword ptr [ rip + hexvar ] push rbx shr rsi , hexvar mov ebx , esi call hexvar mov esi , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov edx , esi mov edi , ecx shl esi , hexvar shl edx , hexvar shl edi , hexvar and esi , hexvar and edi , hexvar movzx edx , dx shl ecx , num or edx , edi and ecx , hexvar or edx , esi or rdx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] or rdx , rcx mov ecx , eax add eax , eax and ecx , hexvar and eax , hexvar or rdx , rcx or rax , rdx mov rdx , rax or dh , num cmp r12d , num cmove rax , rdx bsf ebx , ebx mov edx , hexvar cmove ebx , edx sub ebx , num shl ebx , hexvar or rax , rbx mov rdx , rax or rdx , hexvar test ebp , ebp cmovne rax , rdx mov ecx , eax mov edx , eax or ecx , hexvar test esi , esi je hexvar mov ecx , eax or ecx , hexvar test eax , hexvar cmovne edx , ecx mov ecx , edx or ecx , hexvar mov eax , ecx pop rbx pop rbp mov qword ptr [ rip + hexvar ] , rax pop r12 ret
xor edx , edx mov esi , hexvar mov edi , hexvar jmp hexvar
mov edx , num mov esi , hexvar mov edi , hexvar jmp hexvar
xor edx , edx mov esi , hexvar mov edi , hexvar jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov r8d , edi test eax , eax jne hexvar test dil , num je hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar shl eax , hexvar cdqe or qword ptr [ rip + hexvar ] , rax nop dword ptr [ rax + rax ] test r8b , num jne hexvar and r8d , num jne hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar xor edi , edi mov edx , num mov rsi , rax call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
xor edx , edx mov esi , hexvar mov edi , num jmp hexvar
xor edx , edx mov esi , hexvar mov edi , num jmp hexvar
push r13 xor eax , eax mov r13d , esi mov esi , num push r12 mov r12d , edi xor edi , edi push rbp mov ebp , edx mov edx , hexvar push rbx sub rsp , num call hexvar mov edx , ebp mov r8d , r13d mov ecx , hexvar mov ebx , eax or edx , hexvar or r8d , hexvar xor eax , eax mov esi , ebx mov edi , num call hexvar mov rdx , rax shr rdx , hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num and eax , hexvar cmp edx , hexvar mov edx , hexvar lea rcx , [ rax + rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax + rcx * num + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , hexvar cmove edx , eax lea rax , [ rip + hexvar ] xor edi , edi cmp dword ptr [ rax + rbx * num ] , num sete dil add rsp , num xor esi , esi pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr cs : [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num and ecx , hexvar lea rsi , [ rcx + rcx * num ] lea rcx , [ rip + hexvar ] mov ecx , dword ptr [ rcx + rsi * num ] xor esi , esi cmp eax , r12d lea rax , [ rip + hexvar ] sete sil xor edi , edi cmp dword ptr [ rax + rbx * num ] , num mov qword ptr [ rip + hexvar ] , rcx sete dil add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar lea rax , [ rip + hexvar ] xor edi , edi mov edx , hexvar cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil xor esi , esi jmp hexvar
cmp edx , num je hexvar movzx eax , dil cmp edx , hexvar jle hexvar cmp edi , eax je hexvar mov eax , edi and eax , hexvar cmp eax , edi je hexvar mov eax , edi and eax , hexvar cmp eax , edi je hexvar mov eax , edi and eax , hexvar cmp eax , edi je hexvar movzx eax , di shr edi , hexvar cmp eax , edi jne hexvar movzx eax , dil nop dword ptr [ rax ] cmp edi , eax je hexvar test edi , hexvar je hexvar sub rsp , num mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num mov edx , hexvar je hexvar mov eax , edx add rsp , num ret nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov eax , edx add rsp , num ret nop word ptr cs : [ rax + rax ] mov eax , edi shl eax , num or edi , eax movzx eax , dil jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsi ] , edi mov edx , num mov eax , edx ret nop word ptr [ rax + rax ] shr edi , num mov edx , hexvar mov dword ptr [ rsi ] , edi jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsi ] , edi mov edx , num jmp hexvar nop dword ptr [ rax ] shr eax , hexvar mov edx , num mov dword ptr [ rsi ] , eax jmp hexvar nop dword ptr [ rax ] shr eax , num mov edx , num mov dword ptr [ rsi ] , eax jmp hexvar nop dword ptr [ rax ] shr eax , hexvar mov edx , num mov dword ptr [ rsi ] , eax jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov r8d , hexvar xor eax , eax mov esi , ebx call hexvar mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] xor esi , esi mov dword ptr [ rip + hexvar ] , edx mov rdx , rax shr rdx , hexvar cmp eax , num lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ecx sete sil xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar xor esi , esi mov rdx , rax shr rdx , hexvar cmp eax , num lea rax , [ rip + hexvar ] sete sil xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar xor esi , esi mov rdx , rax shr rdx , hexvar cmp eax , num lea rax , [ rip + hexvar ] sete sil xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
mov r8d , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov r9d , r8d mov eax , ecx shl r8d , hexvar add ecx , ecx shl r9d , hexvar and eax , hexvar or rax , qword ptr [ rip + hexvar ] and ecx , hexvar and r9d , hexvar and r8d , hexvar or rax , r9 or rax , r8 or rax , rcx mov rcx , rax or rcx , hexvar test edi , edi cmovne rax , rcx mov rcx , rax or rcx , hexvar test esi , esi cmovne rax , rcx cmp edx , - num je hexvar bsf edx , edx mov ecx , hexvar cmove edx , ecx sub edx , num shl edx , hexvar or rax , rdx mov esi , dword ptr [ rip + hexvar ] mov ecx , eax mov edx , eax mov dword ptr [ rip + hexvar ] , num or ecx , hexvar test esi , esi je hexvar mov ecx , eax or ecx , hexvar test eax , hexvar cmovne edx , ecx or edx , hexvar mov ecx , edx mov eax , ecx mov qword ptr [ rip + hexvar ] , rax ret
mov r9d , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov r8d , dword ptr [ rip + hexvar ] mov r10d , r9d mov eax , ecx shl r9d , hexvar add ecx , ecx shl r10d , hexvar and eax , hexvar or rax , qword ptr [ rip + hexvar ] and ecx , hexvar and r10d , hexvar and r9d , hexvar or rax , r10 mov r10d , r8d shl r8d , num shl r10d , hexvar and r8d , hexvar and r10d , hexvar or rax , r10 or rax , r9 or rax , r8 or rax , rcx mov rcx , rax or rcx , hexvar test edi , edi cmovne rax , rcx mov rcx , rax or rcx , hexvar test esi , esi cmovne rax , rcx cmp edx , - num je hexvar bsf edx , edx mov ecx , hexvar cmove edx , ecx sub edx , num shl edx , hexvar or rax , rdx mov esi , dword ptr [ rip + hexvar ] mov ecx , eax mov edx , eax mov dword ptr [ rip + hexvar ] , num or ecx , hexvar test esi , esi je hexvar mov ecx , eax or ecx , hexvar test eax , hexvar cmovne edx , ecx or edx , hexvar mov ecx , edx mov eax , ecx mov qword ptr [ rip + hexvar ] , rax ret
movdqu xmm1 , xmmword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] pxor xmm0 , xmm0 mov dword ptr [ rip + hexvar ] , hexvar movups xmmword ptr [ rip + hexvar ] , xmm0 movups xmmword ptr [ rip + hexvar ] , xmm1 mov dword ptr [ rip + hexvar ] , eax or word ptr [ rip + hexvar ] , hexvar ret
push rbx mov ecx , hexvar xor edx , edx mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov r8d , hexvar mov esi , eax mov ebx , eax mov edi , num xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar mov edx , dword ptr [ rdx + rcx * num + num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , hexvar pop rbx or qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] mov edx , dword ptr [ rdx + rcx * num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar cmp ebx , hexvar jne hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx jmp hexvar
push rbx xor edx , edx mov ecx , hexvar mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov r8d , hexvar mov ecx , hexvar mov edx , hexvar mov ebx , eax mov esi , eax mov edi , num xor eax , eax call hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar lea rdi , [ rip + hexvar ] pop rbx jmp hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax + rax ] pop rbx jmp hexvar
push rbx mov ecx , hexvar mov edx , num mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov esi , eax xor eax , eax call hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar lea rdi , [ rip + hexvar ] pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax + rax ] pop rbx jmp hexvar
push rbp mov esi , edi xor eax , eax mov ecx , hexvar push rbx mov edx , hexvar mov ebx , edi mov edi , num sub rsp , num mov rbp , qword ptr [ rip + hexvar ] and ebp , hexvar call hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar test rbp , rbp je hexvar add rsp , num lea rdi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop test rbp , rbp je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , num lea rdi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop word ptr [ rax + rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
mov rax , qword ptr [ rip + hexvar ] and eax , hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp rax , hexvar je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] push rbx mov ebx , edi cmp rax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar jne hexvar pop rbx jmp hexvar
mov rax , qword ptr [ rip + hexvar ] and eax , hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp rax , hexvar je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] push rbx mov ebx , edi cmp rax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar jne hexvar pop rbx jmp hexvar
push rbp mov ecx , hexvar mov rbp , rsi push rbx sub rsp , num cmp edi , num je hexvar mov edx , num mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov esi , eax xor eax , eax call hexvar test eax , eax je hexvar mov edi , ebx call rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] xor edx , edx mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov r8d , hexvar mov ecx , hexvar mov edx , hexvar mov ebx , eax mov esi , eax mov edi , num xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rip + hexvar ] , num mov eax , hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] and eax , hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp rax , num je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] push rbx mov ebx , edi cmp rax , num je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar jne hexvar pop rbx jmp hexvar
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rcx + hexvar ] , rdx je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rdi add rsp , num jmp rax nop mov rcx , qword ptr [ rax + hexvar ] test qword ptr [ rcx ] , rdx jne hexvar mov rdx , qword ptr [ rcx + num ] test qword ptr [ rip + hexvar ] , rdx jne hexvar mov rdx , qword ptr [ rcx + hexvar ] test qword ptr [ rip + hexvar ] , rdx je hexvar mov ecx , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] shl edx , hexvar shr ecx , num or edx , ecx movsxd rdx , edx mov qword ptr [ rip + hexvar ] , rdx add rsp , num jmp rax nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp edi , num ja hexvar lea rdx , [ rip + hexvar ] mov edi , edi movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax + rax ] cmp esi , hexvar je hexvar jbe hexvar mov eax , hexvar cmp esi , hexvar je hexvar xor eax , eax cmp esi , hexvar sete al shl eax , num ret nop dword ptr [ rax ] cmp esi , hexvar je hexvar jbe hexvar mov eax , hexvar cmp esi , hexvar je hexvar xor eax , eax cmp esi , hexvar sete al shl eax , hexvar ret nop dword ptr [ rax ] cmp esi , hexvar je hexvar jbe hexvar mov eax , hexvar cmp esi , hexvar je hexvar xor eax , eax cmp esi , hexvar sete al shl eax , hexvar ret nop dword ptr [ rax ] mov eax , hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar je hexvar xor eax , eax cmp esi , num sete al shl eax , hexvar ret mov eax , hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar je hexvar xor eax , eax cmp esi , hexvar sete al shl eax , hexvar ret cmp esi , hexvar je hexvar jbe hexvar mov eax , num cmp esi , hexvar je hexvar xor eax , eax cmp esi , hexvar sete al shl eax , num ret nop dword ptr [ rax ] xor eax , eax ret nop dword ptr [ rax + rax ] mov eax , hexvar ret nop xor eax , eax cmp esi , num sete al shl eax , num ret nop dword ptr [ rax ] xor eax , eax cmp esi , num sete al shl eax , num ret nop dword ptr [ rax ] xor eax , eax cmp esi , num sete al shl eax , hexvar ret nop dword ptr [ rax ] xor eax , eax cmp esi , num sete al ret nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] mov eax , hexvar ret nop word ptr cs : [ rax + rax ] mov eax , hexvar ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar movsxd rcx , dword ptr [ rip + hexvar ] shl eax , num shl edx , hexvar or rcx , qword ptr [ rip + hexvar ] or rax , rcx or rdx , rax mov qword ptr [ rip + hexvar ] , rdx add rsp , num ret nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
xor edi , edi jmp hexvar
cmp dword ptr [ rip + hexvar ] , hexvar push rbx mov rbx , qword ptr [ rip + hexvar ] je hexvar mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] shr rax , hexvar xor rax , num and eax , num cmp edx , hexvar jne hexvar test al , al jne hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar test al , al jne hexvar and ebx , hexvar jne hexvar cmp byte ptr [ rip + hexvar ] , num js hexvar shl edx , hexvar or edx , ecx or qword ptr [ rip + hexvar ] , rdx pop rbx ret nop word ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret
mov dword ptr [ rip + hexvar ] , hexvar ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rcx , hexvar ja hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp eax , num ja hexvar cmp edx , num ja hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar lea rsi , [ rip + hexvar ] shl edx , num movzx ecx , word ptr [ rsi + rcx * num - hexvar ] or eax , edx or rax , rcx mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov r9d , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] test r9d , r9d jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov r10d , dword ptr [ rip + hexvar ] test r10d , r10d jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov r8d , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] test r8d , r8d je hexvar lea rdi , [ rip + hexvar ] mov ecx , dword ptr [ rdi + rcx * num - hexvar ] shl eax , num shl esi , num or eax , edx movsxd rsi , esi or rax , rcx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] or rax , rcx shl edx , num movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] shl edx , num shl ecx , hexvar sub eax , num cdqe or rax , rdx or rax , qword ptr [ rip + hexvar ] or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov edi , num jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar shl edx , hexvar shl eax , num or eax , edx mov edx , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] sub edx , edi movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar jne hexvar test rdx , rdx je hexvar cmp rdx , hexvar jg hexvar movzx ecx , byte ptr [ rip + hexvar ] mov rsi , rax or rsi , hexvar and ecx , num cmp cl , num mov rcx , rdx cmove rax , rsi shl rcx , hexvar shl rdx , num and ecx , hexvar movzx edx , dl or rdx , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar mov rdx , rax shl eax , num and edx , hexvar and eax , hexvar or rdx , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar or rax , qword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp eax , num ja hexvar cmp edx , num ja hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] shl edx , num or eax , edx movzx ecx , word ptr [ rcx + rsi * num - hexvar ] or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov ecx , edx shl eax , num shl ecx , hexvar or eax , ecx mov rcx , qword ptr [ rip + hexvar ] or eax , edx lea rdx , [ rip + hexvar ] or eax , dword ptr [ rdx + rcx * num - hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
test byte ptr [ rip + hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] and qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , eax jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , ecx shl ecx , num shl edx , hexvar movzx ecx , cl and edx , hexvar or edx , ecx or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num mov edx , eax cmovne edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar shl eax , num shl edx , hexvar or rax , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar mov dword ptr [ rip + hexvar ] , hexvar and eax , hexvar or rax , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar movzx eax , word ptr [ rip + hexvar ] and ax , hexvar cmp ax , hexvar je hexvar mov edi , num add rsp , num jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov ecx , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov edi , ecx or rax , qword ptr [ rip + hexvar ] shl edx , hexvar shl edi , hexvar or rax , rdi mov edi , esi shl edi , num or rax , rdi or rax , rdx mov qword ptr [ rip + hexvar ] , rax cmp ecx , esi je hexvar add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
movzx eax , byte ptr [ rip + hexvar ] test al , al jns hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] sub rsp , num test byte ptr [ rip + hexvar ] , num je hexvar test al , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmove edx , dword ptr [ rip + hexvar ] test eax , hexvar jne hexvar test byte ptr [ rip + hexvar ] , hexvar jne hexvar test dl , dl jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar movzx ecx , dl shl eax , hexvar or rax , qword ptr [ rip + hexvar ] or rax , rcx mov ecx , edx sar ecx , num and ecx , hexvar movsxd rcx , ecx or rax , rcx mov ecx , edx sar edx , num sar ecx , num and edx , hexvar and ecx , hexvar or rax , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov ecx , dword ptr [ rip + hexvar ] cmp rax , - num jne hexvar and ecx , hexvar mov rax , qword ptr [ rip + hexvar ] je hexvar cmp rax , - num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov ecx , dword ptr [ rip + hexvar ] mov esi , ecx and esi , hexvar test eax , hexvar jne hexvar cmp esi , hexvar jne hexvar jmp hexvar mov esi , ecx and esi , hexvar jmp hexvar and ecx , hexvar jne hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx and ecx , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl eax , num or rax , rdx cmp dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] mov rsi , rcx shl rsi , num mov rdx , rsi and esi , hexvar and edx , hexvar or rax , rdx movzx edx , cl shl rcx , hexvar or rax , rdx and ecx , hexvar or rax , rcx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] test rcx , rcx je hexvar mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test rcx , rcx jne hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov esi , dword ptr [ rip + hexvar ] cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , hexvar or rax , qword ptr [ rip + hexvar ] shl ecx , num or rax , rdx shl esi , hexvar or rax , rcx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov esi , dword ptr [ rip + hexvar ] cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx shl esi , hexvar or rax , rcx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar je hexvar mov esi , dword ptr [ rip + hexvar ] cmp esi , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar
mov eax , dword ptr [ rip + hexvar ] xor edx , edx mov esi , num mov edi , num shl eax , hexvar or qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num jne hexvar lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] cmp ecx , eax je hexvar mov edx , dword ptr [ rip + hexvar ] cmp ecx , edx jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl edx , num shl eax , hexvar xor esi , esi mov edi , num or eax , edx or qword ptr [ rip + hexvar ] , rax mov edx , num add rsp , num jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbx mov ebx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov ecx , eax mov rdx , qword ptr [ rdx + hexvar ] mov edi , eax and ecx , hexvar mov esi , ecx mov dword ptr [ rdx + hexvar ] , ebx or esi , hexvar mov dword ptr [ rdx + hexvar ] , num mov dword ptr [ rdx + hexvar ] , esi test bl , num jne hexvar test al , num je hexvar test al , num jne hexvar mov dword ptr [ rdx + hexvar ] , num xor ecx , num and eax , hexvar or rax , rcx shl ebx , num or rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop word ptr [ rax + rax ] mov dword ptr [ rdx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] and edi , num jne hexvar xor ecx , hexvar mov dword ptr [ rdx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor ecx , hexvar mov dword ptr [ rdx + hexvar ] , num jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num mov ecx , edx cmovne ecx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar shl edx , num or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar movsxd rax , dword ptr [ rip + hexvar ] or qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov dword ptr [ rip + hexvar ] , num jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov ecx , eax shl edx , num or rcx , qword ptr [ rip + hexvar ] or rdx , rcx shl eax , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar mov eax , dword ptr [ rip + hexvar ] shl eax , num or qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr cs : [ rax + rax ] mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num jne hexvar jmp hexvar
sub rsp , num cmp dword ptr [ rip + hexvar ] , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num je hexvar mov edi , hexvar call hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov dword ptr [ rip + hexvar ] , num call hexvar cmp eax , - num jne hexvar jmp hexvar
mov edi , hexvar jmp hexvar
mov edi , hexvar jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea edi , [ rcx + rax ] cmp edi , hexvar jg hexvar shl edx , num sub eax , num shl esi , hexvar or edx , esi cdqe or rax , qword ptr [ rip + hexvar ] or rax , rdx mov edx , ecx shl ecx , num shl edx , hexvar and ecx , hexvar and edx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , dword ptr [ rip + hexvar ] cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , dword ptr [ rip + hexvar ] add edi , eax cmp edi , hexvar ja hexvar shl edx , num mov ecx , eax shl eax , hexvar shl ecx , num and eax , hexvar shl esi , hexvar or edx , eax and ecx , hexvar or rcx , qword ptr [ rip + hexvar ] movsxd rsi , esi movsxd rax , edx lea edx , [ rdi - num ] or rax , rcx or rax , rdx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov esi , hexvar jmp hexvar nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar
sub rsp , num mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] add ecx , edx cmp ecx , hexvar ja hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov esi , edx shl eax , num or rax , qword ptr [ rip + hexvar ] shl esi , hexvar shl edx , num and esi , hexvar and edx , hexvar or rax , rsi or rax , rdx lea edx , [ rcx - num ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
movsxd rdi , edi lea rax , [ rip + hexvar ] sub rsp , num lea rdx , [ rdi + rdi * num ] shl rdx , num add rax , rdx movzx ecx , byte ptr [ rax + num ] and ecx , num test byte ptr [ rax + num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + rdx + hexvar ] or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax cmp ecx , num je hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp esi , hexvar ja hexvar je hexvar test esi , esi jne hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr cs : [ rax + rax ] or rax , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test ecx , ecx je hexvar cmp ecx , num je hexvar shl ecx , num or rax , rcx jmp hexvar nop dword ptr [ rax ] mov edx , esi shl esi , num shl edx , hexvar movzx esi , sil and edx , hexvar or esi , edx or rax , rsi jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl eax , hexvar shl edx , hexvar or eax , edx or qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov ecx , edx add edx , edx shl eax , hexvar and ecx , hexvar and edx , hexvar shl esi , hexvar or edx , ecx or eax , esi or rax , qword ptr [ rip + hexvar ] movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] mov rdx , rax or rax , qword ptr [ rip + hexvar ] mov ecx , edx shl edx , hexvar shl ecx , hexvar or rax , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl ecx , hexvar shl eax , hexvar or eax , ecx mov ecx , edx shl edx , hexvar and ecx , hexvar or rcx , qword ptr [ rip + hexvar ] and edx , hexvar or rax , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num je hexvar test byte ptr [ rip + hexvar ] , num je hexvar movzx ecx , byte ptr [ rip + hexvar ] and rax , hexvar mov edx , hexvar or rdx , rax test cl , hexvar je hexvar mov edx , hexvar or rdx , rax test cl , hexvar jne hexvar or rdx , hexvar mov rax , rdx or rax , hexvar and ecx , num mov rcx , qword ptr [ rip + hexvar ] cmovne rdx , rax mov eax , dword ptr [ rip + hexvar ] shl rcx , num shl eax , hexvar or rax , rcx movsxd rcx , dword ptr [ rip + hexvar ] or rax , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax + rax ] xor ecx , ecx xor edx , edx mov esi , num mov edi , num jmp hexvar
mov eax , dword ptr [ rip + hexvar ] mov esi , num mov edi , num shl eax , hexvar or qword ptr [ rip + hexvar ] , rax cmp dword ptr [ rip + hexvar ] , num sbb ecx , ecx xor edx , edx and ecx , hexvar add ecx , hexvar jmp hexvar
mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov rdx , rcx shl eax , hexvar or rcx , qword ptr [ rip + hexvar ] or rax , rcx shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl eax , hexvar or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test eax , hexvar je hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar mov rsi , rax and esi , hexvar test eax , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , num je hexvar lea ecx , [ rdx + rdx * num ] shl ecx , num movsxd rcx , ecx mov qword ptr [ rip + hexvar ] , rcx test rsi , rsi jne hexvar neg rcx mov qword ptr [ rip + hexvar ] , rcx test al , num je hexvar movzx eax , byte ptr [ rip + hexvar ] and eax , hexvar or eax , hexvar mov byte ptr [ rip + hexvar ] , al xor ecx , ecx mov edx , num mov esi , num add rsp , num mov edi , num jmp hexvar nop dword ptr [ rax ] cmp edx , num jne hexvar or ah , hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop or rax , hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] or rax , hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] lea eax , [ rdx + rdx * num ] shl eax , num cdqe mov rdx , rax neg rdx test rsi , rsi cmove rax , rdx mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] test rsi , rsi je hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , eax shl eax , hexvar and edx , hexvar and eax , hexvar or rdx , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , eax shl eax , hexvar and edx , hexvar and eax , hexvar or rdx , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
mov edi , num jmp hexvar
xor edi , edi jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar xor ecx , ecx mov edx , num xor esi , esi mov edi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar xor ecx , ecx mov edx , num xor esi , esi mov edi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] mov edi , dword ptr [ rip + hexvar ] mov esi , num shl eax , hexvar or qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test al , num jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar cmp eax , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] cmp eax , edx je hexvar lea ecx , [ rax + num ] cmp edx , ecx je hexvar mov ecx , dword ptr [ rip + hexvar ] cmp edx , ecx je hexvar shl edx , hexvar or rax , qword ptr [ rip + hexvar ] shl ecx , hexvar or rax , rdx or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop lea edx , [ rax + num ] cmp dword ptr [ rip + hexvar ] , edx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num movzx eax , word ptr [ rip + hexvar ] and ax , hexvar cmp ax , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] cmp ecx , edx je hexvar cmp eax , ecx je hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar shl ecx , hexvar shl eax , hexvar or rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , hexvar or rdx , rcx or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num ret
mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num ret
mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx lea edx , [ rcx - num ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar ret nop dword ptr [ rax ] mov edi , num jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx lea edx , [ rcx - num ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar ret nop dword ptr [ rax ] mov edi , num jmp hexvar
mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or rax , qword ptr [ rip + hexvar ] mov rdx , rax or rdx , hexvar test byte ptr [ rip + hexvar ] , num cmovne rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num test byte ptr [ rip + hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , hexvar jne hexvar test al , num jne hexvar test al , hexvar je hexvar xor esi , esi xor edi , edi call hexvar and qword ptr [ rip + hexvar ] , hexvar add rsp , num ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar ret nop word ptr cs : [ rax + rax ] mov edi , num jmp hexvar
test byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] movsxd rdx , dword ptr [ rip + hexvar ] and eax , hexvar or rax , rdx or rax , hexvar mov qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] and eax , hexvar or rax , hexvar mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar shl eax , hexvar shl edx , hexvar or eax , edx or qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] cmp edx , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , num jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
sub rsp , num mov ecx , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] cmp ecx , esi je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] shl ecx , hexvar shl eax , hexvar shl edx , num or edx , eax mov eax , edx or rax , rdi or rax , rsi or rax , rcx mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rdx , rdi and edx , hexvar and eax , hexvar or rax , rdx jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] xor ecx , ecx mov esi , num mov edi , num shl edx , hexvar shl eax , num or eax , edx or qword ptr [ rip + hexvar ] , rax mov edx , num jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar xor esi , esi mov edi , num call hexvar test eax , eax jne hexvar xor esi , esi mov edi , num call hexvar add rsp , num jmp hexvar nop word ptr [ rax + rax ] add rsp , num ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test al , num jne hexvar movzx edx , byte ptr [ rip + hexvar ] and edx , num jne hexvar cmp eax , hexvar je hexvar test byte ptr [ rip + hexvar ] , num je hexvar test dl , dl je hexvar mov edx , dword ptr [ rip + hexvar ] cmp dword ptr [ rip + hexvar ] , edx je hexvar mov rdx , qword ptr [ rip + hexvar ] test dl , hexvar jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] cmp ecx , eax je hexvar cmp ecx , dword ptr [ rip + hexvar ] je hexvar shl eax , hexvar xor esi , esi mov edi , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax add rsp , num jmp hexvar nop lea ecx , [ rax + num ] cmp dword ptr [ rip + hexvar ] , ecx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop lea edx , [ rax + num ] cmp dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , edx jne hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
xor edi , edi jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num mov ecx , dword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] mov edx , ecx mov rbx , rax or rax , qword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov rdx , rax or rdx , hexvar test byte ptr [ rip + hexvar ] , num cmovne rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num je hexvar mov rdx , rax or rdx , hexvar mov qword ptr [ rip + hexvar ] , rdx mov rdx , rax and edx , hexvar test eax , hexvar je hexvar test rdx , rdx je hexvar test bh , hexvar je hexvar bt ebx , ecx mov edx , num lea rsi , [ rip + hexvar ] jb hexvar nop bsf eax , ebx mov ecx , hexvar cmovne ecx , eax cmp ecx , hexvar ja hexvar mov eax , num shl eax , cl cmp ebx , eax jne hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax and edx , hexvar cmp rdx , hexvar jne hexvar cmp ecx , hexvar jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] test rdx , rdx jne hexvar bt ebx , ecx jae hexvar mov eax , num shl eax , cl sub eax , num test eax , ebx je hexvar mov edx , num lea rsi , [ rip + hexvar ] nop dword ptr [ rax ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] and eax , hexvar mov esi , hexvar cmp rdx , hexvar mov edx , hexvar cmovne rdx , rsi shl ecx , hexvar movsxd rcx , ecx or rcx , rax or rcx , rdx mov qword ptr [ rip + hexvar ] , rcx add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] shl eax , num cdqe or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num je hexvar movsxd rdx , dword ptr [ rip + hexvar ] or rax , rdx or rax , hexvar mov qword ptr [ rip + hexvar ] , rax ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , rdi and eax , hexvar cmp rax , hexvar jne hexvar cmp ecx , esi je hexvar mov edx , dword ptr [ rip + hexvar ] shl ecx , hexvar shl esi , hexvar shl edx , num mov eax , edx mov edx , dword ptr [ rip + hexvar ] or rdx , rdi or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , num movsxd rdx , edx or rax , rdx or rax , rcx or rax , rsi mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp esi , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
mov eax , dword ptr [ rip + hexvar ] mov edi , num shl eax , hexvar or qword ptr [ rip + hexvar ] , rax jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , num or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov edx , dword ptr [ rip + hexvar ] shl edx , num movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar or qword ptr [ rip + hexvar ] , rax ret nop dword ptr [ rax + rax ] sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] or qword ptr [ rip + hexvar ] , rax add rsp , num ret
sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar or qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar add rsp , num ret nop dword ptr [ rax ] test al , hexvar je hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar jmp hexvar nop mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar mov edi , hexvar jmp hexvar nop dword ptr [ rax ] mov edi , hexvar jmp hexvar
mov eax , dword ptr [ rip + hexvar ] mov edx , eax shl eax , num and edx , hexvar and eax , hexvar or rdx , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] xor ecx , ecx mov edx , num mov esi , num mov edi , num shl eax , hexvar or qword ptr [ rip + hexvar ] , rax jmp hexvar
movsxd rax , dword ptr [ rip + hexvar ] or qword ptr [ rip + hexvar ] , rax ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] push rbx mov ebx , dword ptr [ rip + hexvar ] mov rcx , rdx and ecx , hexvar cmp rcx , hexvar je hexvar shl ebx , hexvar or ebx , dword ptr [ rip + hexvar ] shl eax , hexvar or rbx , rdx or rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] mov edx , num cmp ebx , eax je hexvar cmp dword ptr [ rip + hexvar ] , ebx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rdx , - num je hexvar test dh , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar and dh , hexvar jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , - num je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar
mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl eax , num shl edx , hexvar or eax , edx or qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] shl eax , hexvar shl edx , hexvar or eax , edx or qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx mov qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or qword ptr [ rip + hexvar ] , rax ret
mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar or qword ptr [ rip + hexvar ] , rax ret
mov edx , edi and edx , hexvar je hexvar xor eax , eax cmp edx , hexvar je hexvar ret nop dword ptr [ rax ] mov edx , edi and edx , hexvar je hexvar xor eax , eax cmp edx , hexvar jne hexvar mov edx , edi and edx , hexvar je hexvar xor eax , eax cmp edx , hexvar jne hexvar and edi , hexvar sete al cmp edi , hexvar sete dl or eax , edx movzx eax , al ret
movsxd rdi , edi lea rdx , [ rip + hexvar ] sub rsp , num lea rax , [ rdi + rdi * num ] shl rax , num add rdx , rax test byte ptr [ rdx + num ] , num je hexvar lea rcx , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax + hexvar ] shl eax , hexvar or rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx ecx , byte ptr [ rdx + num ] test cl , hexvar jne hexvar test cl , hexvar je hexvar and ecx , num je hexvar mov rcx , rax test esi , esi jne hexvar mov rax , rcx and eax , hexvar cmp rax , hexvar je hexvar mov rax , rcx mov rdx , rcx shr rax , hexvar shr rdx , hexvar xor rax , rdx test al , hexvar jne hexvar mov edx , num test ecx , hexvar jne hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar nop word ptr [ rax + rax ] test esi , esi jne hexvar mov rcx , rax or rcx , hexvar mov qword ptr [ rip + hexvar ] , rcx test byte ptr [ rdx + num ] , num je hexvar or rax , hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop or rcx , hexvar mov qword ptr [ rip + hexvar ] , rcx jmp hexvar nop dword ptr [ rax + rax ] xor edi , edi lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp movsxd rbp , edi push rbx lea rax , [ rbp + rbp * num ] lea rbx , [ r12 - hexvar ] sub rsp , num test byte ptr [ r12 + rax * num + num ] , num je hexvar xor ebx , ebx lea r13 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbx , rax movsxd rax , ebx lea rax , [ rax + rax * num ] movzx eax , byte ptr [ r12 + rax * num + num ] test al , num je hexvar test al , num je hexvar lea rax , [ rbx + rbx * num ] cmp dword ptr [ r13 + rax * num ] , hexvar je hexvar lea rax , [ rbx + num ] cmp rbx , rbp jne hexvar lea rbx , [ rip + hexvar ] lea rax , [ rbp + rbp * num ] cmp dword ptr [ rbx + rax * num + hexvar ] , hexvar je hexvar lea rcx , [ rbp + rbp * num ] mov rsi , qword ptr [ rip + hexvar ] shl rcx , num lea rdx , [ r12 + rcx ] movzx eax , byte ptr [ rdx + num ] and eax , num cmp al , num je hexvar shl rax , num and eax , hexvar or rax , rsi mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rdx + num ] , num jne hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov edx , dword ptr [ rbx + rcx + hexvar ] shl edx , num movsxd rdx , edx or rax , rdx or rax , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr cs : [ rax + rax ] mov rax , rsi or rax , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
lea eax , [ rsi - num ] cmp eax , num ja hexvar cmp edi , hexvar jle hexvar test byte ptr [ rip + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or qword ptr [ rip + hexvar ] , hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] cmp esi , num ja hexvar lea rdx , [ rip + hexvar ] mov esi , esi movsxd rax , dword ptr [ rdx + rsi * num ] add rax , rdx jmp rax nop word ptr [ rax + rax ] mov eax , edi and edi , hexvar sar eax , num shl eax , num or edi , eax movsxd rdi , edi or rcx , rdi mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax + rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop mov eax , edi sar edi , num shl eax , num and eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi shl edi , num sar eax , num movzx edi , dil shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] mov eax , edi sar edi , num shl eax , hexvar shl edi , hexvar movzx eax , ax or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop dword ptr [ rax ] or qword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , edi shl edi , hexvar sar eax , num and edi , hexvar shl eax , hexvar or eax , edi cdqe or rcx , rax mov qword ptr [ rip + hexvar ] , rcx ret nop sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi + num ] , rax jne hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rdi + hexvar ] , rdx je hexvar call hexvar mov eax , num ret
push r15 lea r15 , [ rip + hexvar ] push r14 push r13 mov r13 , rdi push r12 push rbp xor ebp , ebp push rbx sub rsp , hexvar mov r12 , qword ptr [ rdi ] mov qword ptr [ rsp + num ] , rsi nop word ptr [ rax + rax ] mov r14 , qword ptr [ r15 ] mov rdi , r14 call hexvar mov rsi , r12 mov rdi , r14 movsxd rbx , eax mov rdx , rbx call hexvar test eax , eax jne hexvar cmp byte ptr [ r12 + rbx ] , hexvar je hexvar add ebp , num add r15 , hexvar cmp ebp , hexvar jne hexvar add rsp , hexvar mov eax , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop lea rdx , [ rbp + rbp * num ] lea rcx , [ rip + hexvar ] lea rdx , [ rcx + rdx * num ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rdx lea rdx , [ r12 + rbx + num ] mov qword ptr [ r13 ] , rdx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r13 mov r13d , ecx push r12 movsxd r12 , esi push rbp mov rbp , rdi push rbx mov rbx , rdx sub rsp , hexvar test rdx , rdx mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] cmove rbx , rax mov rax , qword ptr [ rdi ] mov rdi , rbx mov qword ptr [ rsp + num ] , rax call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num je hexvar and r13d , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rbp ] , rax xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rcx , qword ptr [ rbx + hexvar ] mov eax , hexvar mov rdx , rcx shl rdx , num cmp rdx , hexvar jle hexvar cmp rdx , hexvar jle hexvar movzx edx , word ptr [ rip + hexvar ] lea esi , [ rdx - num ] cmp si , - num jbe hexvar cmp ecx , num jbe hexvar cmp dx , word ptr [ rip + hexvar ] jne hexvar lea rax , [ rip + hexvar ] lea edx , [ rcx - num ] lea rcx , [ rax + rdx * num ] jmp hexvar nop word ptr [ rax + rax ] movzx edx , word ptr [ rax + num ] add rax , num cmp dx , word ptr [ rax - num ] jne hexvar cmp rcx , rax jne hexvar lea rax , [ r12 + r12 * num ] mov ecx , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] shl rax , num add rdx , rax mov dword ptr [ rdx + hexvar ] , ecx mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx lea rdx , [ rip + hexvar ] or byte ptr [ rdx + rax + num ] , hexvar jmp hexvar nop word ptr [ rax + rax ] lea rax , [ r12 + r12 * num ] mov rcx , qword ptr [ rbx + hexvar ] lea rdx , [ rip + hexvar ] movabs rsi , hexvar shl rax , num add rdx , rax mov dword ptr [ rdx + hexvar ] , ecx test rcx , rsi je hexvar shr rcx , hexvar mov dword ptr [ rdx + hexvar ] , ecx lea rdx , [ rip + hexvar ] or byte ptr [ rdx + rax + num ] , hexvar jmp hexvar nop word ptr [ rax + rax ] mov eax , hexvar jmp hexvar
push rbx mov edi , num sub rsp , hexvar call hexvar mov rbx , rsp xor edi , edi mov edx , num mov rsi , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov rcx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rax + hexvar ] xor eax , eax test edx , edx setne al lea rdx , [ rdi + hexvar ] xor r8d , r8d sub rsi , rdx lea r9d , [ rax + hexvar ] mov edx , num call hexvar add rsp , hexvar pop rbx ret
sub rsp , num xor edi , edi call hexvar cmp eax , hexvar jg hexvar cdqe lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rax * num ] , num add rsp , num ret
sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar lea rdi , [ rsp + hexvar ] call hexvar cmp eax , - num je hexvar movsxd rax , dword ptr [ rsp + hexvar ] test al , num jne hexvar add qword ptr [ rip + hexvar ] , rax add qword ptr [ rip + hexvar ] , rax call hexvar add rsp , hexvar ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar mov ebx , eax cmp eax , - num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar add rax , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , - num je hexvar call hexvar mov eax , ebx and eax , hexvar cmp eax , hexvar je hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov edi , ebx mov esi , num or dil , hexvar movsxd rdi , edi call hexvar movsxd rax , dword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebx or byte ptr [ rip + hexvar ] , num sub rcx , rax mov qword ptr [ rip + hexvar ] , rcx add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop mov dword ptr [ rsp + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar lea rdi , [ rsp + num ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov ebx , eax cmp al , hexvar jne hexvar lea rax , [ rbp + num ] mov qword ptr [ rip + hexvar ] , rax mov rdi , qword ptr [ rsp + num ] call hexvar mov byte ptr [ rbp ] , bl mov qword ptr [ rip + hexvar ] , rax call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] cmp dword ptr [ rip + hexvar ] , - num jne hexvar jmp hexvar nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi mov rsi , rsp mov edx , num call hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] cmp rax , hexvar jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , - num jne hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret nop dword ptr [ rax ] cmp dword ptr [ rip + hexvar ] , - num jne hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar mov edi , num add rsp , num jmp hexvar nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r12 mov r12d , hexvar push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar je hexvar xor r12d , r12d cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax cmp byte ptr [ rdx + num ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov edi , num mov rbp , rsp mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , num call hexvar mov rsi , rbp mov edx , num xor edi , edi call hexvar mov edi , num call hexvar mov rsi , r12 mov edx , num mov rdi , rax mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp mov r9d , hexvar mov r8d , num mov edx , num lea rax , [ rdi + hexvar ] sub rbx , rax mov rsi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar
mov edx , dword ptr [ rip + hexvar ] mov eax , num test edx , edx je hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar ret nop dword ptr [ rax ] push rbx lea rdx , [ rip + hexvar ] sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] movsx rax , byte ptr [ rbx - num ] cmp byte ptr [ rdx + rax ] , num jne hexvar nop sub rbx , num movsx rax , byte ptr [ rbx - num ] cmp byte ptr [ rdx + rax ] , num je hexvar cmp byte ptr [ rbx ] , hexvar mov eax , num je hexvar mov rdi , rbx mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar xor eax , eax jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , num call hexvar add rsp , num jmp hexvar nop dword ptr [ rax + rax ] xor edx , edx xor esi , esi mov edi , num call hexvar jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] xor esi , esi call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp dword ptr [ rax + num ] , hexvar je hexvar add rsp , num ret nop dword ptr [ rax + rax ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx add rsp , num ret
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + num ] call hexvar mov rbp , qword ptr [ rsp + num ] lea rsi , [ rip + hexvar ] mov ebx , eax mov rdi , rbp call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num movsx edi , bl call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp ret
sub rsp , num mov edi , hexvar call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov esi , num mov dword ptr [ rip + hexvar ] , num call hexvar add rsp , num jmp hexvar
push rbx call hexvar mov rbx , rax cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov esi , ebx pop rbx mov rdi , rax xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] mov edi , ebx pop rbx jmp hexvar
sub rsp , num mov edi , hexvar call hexvar add rsp , num jmp hexvar
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , edi je hexvar lea ecx , [ rdi - num ] push rbx mov ebx , edi cmp ecx , num jbe hexvar test eax , eax jne hexvar cmp edi , num jne hexvar pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi cmp edi , num mov rdi , rdx sete sil add esi , num call hexvar mov edi , ebx xor esi , esi pop rbx jmp hexvar nop ret
sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
mov rdx , qword ptr [ rdi ] mov eax , hexvar cmp byte ptr [ rdx ] , hexvar jne hexvar push rbp lea rsi , [ rdx + num ] push rbx mov rbx , rsi sub rsp , num movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar test al , al jne hexvar jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar add rsp , num mov eax , hexvar pop rbx pop rbp ret nop cmp al , hexvar jne hexvar mov rbp , rdi mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] sub rdx , rsi call hexvar test rax , rax je hexvar add rbx , num mov eax , dword ptr [ rax + num ] mov qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret ret
push r12 mov r12 , rdi push rbp mov ebp , esi push rbx mov rbx , rdx sub rsp , hexvar cmp esi , num mov rax , qword ptr [ rdi ] setne sil lea rcx , [ rsp + hexvar ] lea rdi , [ rsp + num ] xor edx , edx movzx esi , sil mov qword ptr [ rsp + num ] , rax add esi , num call hexvar cmp eax , - num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov ecx , eax movzx eax , byte ptr [ rsp + hexvar ] cmp al , hexvar je hexvar movzx esi , al mov eax , hexvar cdq idiv ebp cmp esi , eax jge hexvar mov rax , qword ptr [ rsp + hexvar ] shl ecx , num mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ r12 ] , rax lea eax , [ rcx + rsi ] add rsp , hexvar pop rbx pop rbp pop r12 ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , rax nop dword ptr [ rax ] mov eax , hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar jmp hexvar
push r12 push rbp mov ebp , esi push rbx mov rbx , rdi mov r12 , qword ptr [ rdi ] call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test byte ptr [ rdx ] , num jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp edx , ebp je hexvar mov ecx , ebp mov rdx , rax mov rsi , r12 mov rdi , rbx call hexvar cmp eax , - num je hexvar pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] pop rbx mov eax , dword ptr [ rax + num ] pop rbp pop r12 ret mov eax , hexvar jmp hexvar nop mov qword ptr [ rbx ] , r12 jmp hexvar
mov rsi , qword ptr [ rdi ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num lea rcx , [ rip + hexvar ] test byte ptr [ rcx + rax * num ] , hexvar je hexvar lea rdx , [ rip + hexvar ] test byte ptr [ rdx + rax ] , num je hexvar push rbp push rbx mov rbx , rsi sub rsp , num nop dword ptr [ rax ] add rbx , num movzx edx , byte ptr [ rbx ] test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar cmp dl , hexvar je hexvar mov rbp , rdi mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] sub rdx , rsi call hexvar test rax , rax je hexvar mov qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret nop xor eax , eax ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rdi + hexvar ] , num ret
push r14 lea eax , [ rdi - hexvar ] push r13 mov r13 , rdx push r12 push rbp push rbx sub rsp , hexvar cmp eax , hexvar ja hexvar lea rdx , [ rip + hexvar ] mov rbx , rsi movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop mov r14d , hexvar mov r12d , num lea rbp , [ rsp + num ] mov esi , edi mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp call hexvar test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ r13 ] , r14d mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea eax , [ r12 - num ] lea r12 , [ rbx + rax * num + num ] movzx esi , word ptr [ rbp ] mov rdi , rbx mov edx , num add rbx , num add rbp , num call hexvar cmp r12 , rbx jne hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] mov r14d , num mov r12d , num jmp hexvar nop dword ptr [ rax ] mov r14d , num mov r12d , num jmp hexvar nop dword ptr [ rax ] mov dword ptr [ r13 ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] sub r12d , num test byte ptr [ rip + hexvar ] , hexvar je hexvar movsxd r12 , r12d movzx esi , word ptr [ rbp + r12 * num ] mov rdi , rbx mov edx , num sub r12 , num add rbx , num call hexvar test r12d , r12d jns hexvar jmp hexvar nop dword ptr [ rax ] shr r12d , num lea r12 , [ rbx + r12 * num + num ] movzx esi , word ptr [ rbp + num ] mov rdi , rbx mov edx , num add rbp , num call hexvar movzx esi , word ptr [ rbp - num ] lea rdi , [ rbx + num ] mov edx , num add rbx , num call hexvar cmp rbx , r12 jne hexvar jmp hexvar
mov eax , num ret
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] jmp hexvar
mov rdi , rsi jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push r13 mov ecx , num mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov r12 , qword ptr [ rsi ] lea rsi , [ rip + hexvar ] mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta bl sbb bl , num movsx ebx , bl test ebx , ebx jne hexvar mov rdi , r12 call hexvar lea r8 , [ rip + hexvar ] mov ecx , num lea rdi , [ r12 + rax - num ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor edx , edx mov rsi , r8 xor eax , eax call hexvar mov rdi , r13 mov rsi , rax mov r12 , rax call hexvar test rax , rax je hexvar mov ebx , dword ptr [ rax + hexvar ] movabs rdx , hexvar mov rax , rdx mul qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + hexvar ] mov rbp , qword ptr [ rax + hexvar ] shr rdx , num lea edi , [ rdx - num ] test rbp , rbp je hexvar mov rax , qword ptr [ r13 + num ] lea rsi , [ rbp + num ] movsxd rdi , edi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r13 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] call qword ptr [ rax + hexvar ] add rsp , num mov rdi , r12 pop rbx pop rbp pop r12 pop r13 jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp xor esi , esi push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] mov ebp , dword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar add rsp , num mov esi , ebp mov rdi , rbx pop rbx pop rbp jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rsi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num call hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
push r13 mov r13 , rsi push r12 push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdx , qword ptr [ r12 + num ] mov rbx , rax test rdx , rdx je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rdx ] movups xmmword ptr [ rax ] , xmm0 movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r13 call hexvar mov rdi , rbp mov rbx , rax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdi , r13 movzx ebx , byte ptr [ rax + hexvar ] call hexvar mov rdi , rbp and ebx , num mov r12d , ebx movzx ebx , byte ptr [ rax + hexvar ] call hexvar and ebx , hexvar or ebx , r12d mov byte ptr [ rax + hexvar ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdx , qword ptr [ r12 + num ] jmp hexvar
sub rsp , num call hexvar mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num ret
mov edi , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov edx , esi shr edx , num test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar cmp dword ptr [ rax + num ] , edi jne hexvar cmp dword ptr [ rax + hexvar ] , edx jne hexvar mov ecx , esi mov edx , num shl rdx , cl test qword ptr [ rax + hexvar ] , rdx setne al movzx eax , al ret nop ret xor eax , eax ret
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , num jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , qword ptr [ rip + hexvar ] movsx esi , byte ptr [ rbp ] cmp sil , hexvar jne hexvar lea rax , [ rbp + num ] mov qword ptr [ rip + hexvar ] , rax movsx esi , byte ptr [ rbp + num ] mov rbp , rax mov r14 , rbp lea rbx , [ rip + hexvar ] cmp sil , hexvar jne hexvar jmp hexvar nop dword ptr [ rax ] add r14 , num movsx esi , byte ptr [ r14 ] mov rdi , rbx call hexvar test rax , rax je hexvar cmp r14 , rbp je hexvar mov rbx , r14 sub rbx , rbp lea rdi , [ rbx + num ] call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num mov rdi , rax call hexvar mov edx , dword ptr [ rip + hexvar ] mov r12 , rax test edx , edx jne hexvar jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rax + num ] , hexvar jne hexvar mov rdi , r12 call hexvar mov rbp , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax ] call hexvar lea edi , [ rbp + rax - num ] mov rbp , rbx movsxd rdi , edi sub rbp , r12 call hexvar movsxd rbp , ebp mov rsi , r12 mov rdx , rbp mov rdi , rax mov r13 , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdi , [ r13 + rbp ] mov rsi , qword ptr [ rax ] call hexvar lea rsi , [ rbx + num ] mov rdi , rax call hexvar mov rdi , r12 mov r12 , r13 call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov esi , hexvar mov rdi , r12 call hexvar mov rbx , rax test rax , rax jne hexvar mov qword ptr [ rip + hexvar ] , r14 cmp byte ptr [ r14 ] , hexvar jne hexvar add r14 , num mov qword ptr [ rip + hexvar ] , r14 add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 ret lea rdi , [ rsp + hexvar ] call hexvar mov r14 , qword ptr [ rip + hexvar ] mov r12 , rax test rax , rax jne hexvar call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor r12d , r12d call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar jmp hexvar
mov rcx , qword ptr [ rsi + hexvar ] xor eax , eax mov edi , dword ptr [ rcx + hexvar ] cmp dword ptr [ rdx + num ] , edi je hexvar ret nop word ptr [ rax + rax ] mov rsi , qword ptr [ rdx ] mov rdi , qword ptr [ rcx + hexvar ] mov eax , num cmp rsi , rdi je hexvar test rdi , rdi je hexvar test rsi , rsi je hexvar sub rsp , num call hexvar test eax , eax sete al add rsp , num movzx eax , al ret nop dword ptr [ rax ] xor eax , eax ret
push rbx mov ebx , edi nop dword ptr [ rax + rax ] call hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rcx , qword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , num je hexvar movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ebx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar pop rbx jmp hexvar nop lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
sub rsp , num lea rsi , [ rip - hexvar ] xor edi , edi call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
sub rsp , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar or dword ptr [ rax + hexvar ] , hexvar add rsp , num ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test edi , edi jne hexvar lea rsi , [ rip - hexvar ] xor edi , edi jmp hexvar nop dword ptr [ rax ] xor edi , edi jmp hexvar
xor eax , eax cmp qword ptr [ rdi + hexvar ] , num setne al ret
push rbx mov ebx , esi call hexvar mov byte ptr [ rax + hexvar ] , bl pop rbx ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
sub rsp , num call hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret
lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx ] , - hexvar mov dword ptr [ rbx + num ] , hexvar pop rbx ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , word ptr [ rsi ] cmp ecx , edi jg hexvar movsxd r8 , ecx lea r9 , [ rip + hexvar ] sub edi , ecx and edx , dword ptr [ r9 + r8 * num ] mov ecx , edi lea r8d , [ rax - num ] mov eax , edx mov dword ptr [ rip + hexvar ] , r8d shl eax , cl test r8d , r8d je hexvar lea rdx , [ rsi - num ] mov ecx , hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , word ptr [ rsi - num ] sub ecx , edi movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar edx , cl and edx , dword ptr [ r9 + rdi * num ] or eax , edx ret sub ecx , edi movzx eax , dx lea rdx , [ rip + hexvar ] movsxd rdi , edi mov dword ptr [ rip + hexvar ] , ecx sar eax , cl and eax , dword ptr [ rdx + rdi * num ] ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
sub rsp , hexvar xor edi , edi mov rsi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] imul rdx , qword ptr [ rsp + hexvar ] , hexvar add rax , rdx add rax , qword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , qword ptr [ rax ] xor eax , eax call hexvar mov edi , num call hexvar
mov rdx , qword ptr [ rdi + num ] xor eax , eax test rdx , rdx je hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rdx ] sub rcx , rdx mov rdx , qword ptr [ rdx + num ] add rax , rcx test rdx , rdx jne hexvar ret nop dword ptr [ rax + rax ] ret
mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar nop dword ptr [ rax ] cmp rsi , rax jbe hexvar cmp qword ptr [ rax ] , rsi jae hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar xor eax , eax ret nop word ptr cs : [ rax + rax ] mov eax , num ret ret
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
or byte ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 mov qword ptr [ rdi + hexvar ] , r9 jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar nop word ptr [ rax + rax ] mov ebx , dword ptr [ rbp + num ] sub ebx , num js hexvar movsxd rbx , ebx nop dword ptr [ rax + rax ] call qword ptr [ rbp + rbx * num + hexvar ] sub rbx , num test ebx , ebx jns hexvar mov rbp , qword ptr [ rbp ] test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov eax , dword ptr [ rip ] mov edi , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , dword ptr [ rip ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rip ] cmp edx , eax je hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov qword ptr [ rsp ] , rsi cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov eax , hexvar and qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax jmp hexvar add qword ptr [ rsp + hexvar ] , num shr qword ptr [ rsp + hexvar ] , num cmp qword ptr [ rsp + hexvar ] , num jne hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] add qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] shl eax , num sub eax , num mov rdx , qword ptr [ rsp + num ] mov ecx , eax shr rdx , cl mov rax , rdx and eax , num add qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num add rsp , hexvar ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - hexvar ] , al jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdx , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar cmp dword ptr [ rbp - num ] , num setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , - num mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rcx + hexvar ] mov rcx , rdx mov rdx , rax call hexvar test eax , eax jns hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , - num nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , - num mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rdi , rcx call hexvar test eax , eax je hexvar mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov rax , rdx sar rax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + hexvar ] mov rcx , rax mov edx , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov rax , qword ptr [ rax ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar movabs rdi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov r8d , num mov ecx , num lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax sete al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov rdx , qword ptr [ rbp - num ] mov ecx , eax shr rdx , cl mov rax , rdx xor qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar movsx esi , byte ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8d , esi mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax sete al movzx eax , al xor eax , edx test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test al , al je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax call hexvar test eax , eax sete al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , al test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar movzx eax , byte ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar cmp eax , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx add rax , num mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdx , [ rip - hexvar ] jmp hexvar lea rdx , [ rip - hexvar ] mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov edi , hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num cdqe add qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] lea rax , [ rdx + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num cdqe add qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar nop jmp hexvar nop jmp hexvar nop jmp hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - num ] , num mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov ecx , dword ptr [ rbp - hexvar ] push rcx mov r9 , r8 mov r8 , rdi mov ecx , num mov rdi , rax call hexvar add rsp , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov edx , hexvar mov eax , ecx imul edx lea eax , [ rdx + rcx ] sar eax , num mov edx , eax mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax shl edx , num sub edx , eax mov eax , ecx sub eax , edx mov edx , dword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , edx call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , edx call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax je hexvar mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar test eax , eax je hexvar mov byte ptr [ rbp - num ] , num nop cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2ss xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2ss xmm0 , rdx addss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rax + num ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jae hexvar movss xmm0 , dword ptr [ rbp - num ] cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar test rcx , rcx je hexvar mov eax , num test rdx , rdx jns hexvar mov eax , num and eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm1 , dword ptr [ rax + num ] movss xmm0 , dword ptr [ rip + hexvar ] subss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , xmm1 jbe hexvar movss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rip + hexvar ] addss xmm1 , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] comiss xmm0 , xmm1 jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] pxor xmm1 , xmm1 comiss xmm0 , xmm1 jb hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] movaps xmm1 , xmm0 addss xmm1 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmm1 jbe hexvar mov rax , qword ptr [ rbp - num ] movss xmm1 , dword ptr [ rax + num ] movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , xmm1 jb hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax ] movaps xmm1 , xmm0 addss xmm1 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] comiss xmm0 , xmm1 jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movss dword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx test rax , rax setne al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num sub rax , rdx mov rdx , rax movzx eax , byte ptr [ rbp - num ] add rax , rdx mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fcomip st ( num ) fstp st ( num ) jbe hexvar fld xword ptr [ rip + hexvar ] fld xword ptr [ rbp + hexvar ] fcomip st ( num ) fstp st ( num ) jae hexvar fld xword ptr [ rbp + hexvar ] fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] jmp hexvar fld xword ptr [ rbp + hexvar ] fld xword ptr [ rip + hexvar ] fsubp st ( num ) fnstcw word ptr [ rbp - hexvar ] movzx eax , word ptr [ rbp - hexvar ] or ah , hexvar mov word ptr [ rbp - hexvar ] , ax fldcw word ptr [ rbp - hexvar ] fistp qword ptr [ rbp - num ] fldcw word ptr [ rbp - hexvar ] movabs rax , hexvar xor qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar fild qword ptr [ rbp - num ] cmp qword ptr [ rbp - num ] , num jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fld xword ptr [ rbp + hexvar ] fucomip st ( num ) jp hexvar fld xword ptr [ rbp + hexvar ] fucomip st ( num ) fstp st ( num ) je hexvar jmp hexvar fstp st ( num ) mov eax , num jmp hexvar mov eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax fild qword ptr [ rbp - hexvar ] test rax , rax jns hexvar fld xword ptr [ rip + hexvar ] faddp st ( num ) fstp xword ptr [ rbp + hexvar ] fld xword ptr [ rbp + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax sete al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov rdx , qword ptr [ rbp - num ] mov ecx , eax shr rdx , cl mov rax , rdx xor qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx mov edx , hexvar sub edx , eax mov eax , edx sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rbp - num ] add rdx , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r11 , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r10d , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push r8 push rdi push r11 mov r8d , r10d mov rdi , rax call hexvar add rsp , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rax + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rax + hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , - num mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - num ] cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 pop rbp ret
push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov r8 , rdi mov rax , rsi mov rsi , r8 mov rdi , r9 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jge hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - num ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , - num jl hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov eax , eax add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] lea ecx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov r8 , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] or ah , num mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al lea rax , [ rip + hexvar ] mov r8d , dword ptr [ rax ] movsx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9d , r8d mov r8 , rdi mov edi , eax call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num ja hexvar cmp dword ptr [ rbp - hexvar ] , num jae hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax nop cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe neg rax add qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - num ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rsi mov r8 , rcx mov rcx , rdx mov rdx , rdi mov esi , num mov edi , eax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , num mul rdx jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , - num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov dword ptr [ rax ] , hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx mov r12 , rdi jmp hexvar mov r12 , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rax call hexvar mov rdi , rbx call hexvar mov rbx , r12 test rbx , rbx jne hexvar nop pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , rdx lea rax , [ r12 + hexvar ] and rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax test rbx , rbx jne hexvar mov eax , num jmp hexvar lea rax , [ rbx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , r12 mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbx + r12 + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r12 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov word ptr [ rbx + hexvar ] , num mov word ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov rax , rbx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax setb al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar cmp rax , hexvar je hexvar cmp rax , hexvar jg hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar test rax , rax je hexvar jmp hexvar cmp rax , hexvar je hexvar mov edx , hexvar cmp rax , rdx je hexvar cmp rax , hexvar je hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar cmp rax , hexvar je hexvar mov edx , hexvar cmp rax , rdx je hexvar cmp rax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax sete al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rbx , rsi mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov r13 , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + num ] lea rcx , [ rbx + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rax , [ rbx + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov r12 , rax test r12 , r12 je hexvar lea rax , [ rbx + hexvar ] cmp r12 , rax jne hexvar lea rax , [ r12 + num ] movzx eax , byte ptr [ rax ] test al , al je hexvar add r12 , num mov rdi , r12 call hexvar mov r13 , rax lea rdx , [ r13 + num ] lea rax , [ rbx + hexvar ] mov rsi , r12 mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , r13 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax nop add rsp , hexvar pop rbx pop r12 pop r13 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , hexvar and eax , hexvar or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , num and eax , hexvar or eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov esi , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - num ] , - hexvar je hexvar call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + hexvar ] cmp ax , hexvar je hexvar call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , - num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al sete al test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num sete dl cmp dword ptr [ rbp - num ] , num sete al xor eax , edx test al , al je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx mov esi , eax movzx edx , byte ptr [ rbp - num ] mov eax , num sub eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx mov esi , eax movzx edx , byte ptr [ rbp - num ] mov eax , num sub eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov word ptr [ rbp - num ] , ax movzx edx , word ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx mov esi , eax movzx edx , word ptr [ rbp - num ] mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov word ptr [ rbp - num ] , ax movzx edx , word ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx mov esi , eax movzx edx , word ptr [ rbp - num ] mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx or eax , esi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shr rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx or rax , rsi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov ecx , eax shl rsi , cl mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar sub edx , eax mov eax , edx mov rdx , qword ptr [ rbp - num ] mov ecx , eax shr rdx , cl mov rax , rdx or rax , rsi pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , eax ror edx , cl mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , eax rol edx , cl mov eax , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax ror rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax rol rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rax , num and rax , qword ptr [ rbp - num ] test rax , rax sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov byte ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , edx mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , ecx mov dword ptr [ rax + rcx * num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num movzx eax , al add eax , edx and eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num movzx eax , al add eax , edx and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shr al , num movzx edx , al lea rax , [ rip + hexvar ] movsxd rdx , edx mov edx , dword ptr [ rax + rdx * num ] movzx eax , byte ptr [ rbp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax sete al movzx eax , al jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push r14 lea rsi , [ rip + hexvar ] push r13 mov r13 , rdi push r12 push rbp push rbx mov rdi , qword ptr [ rdi + hexvar ] call hexvar test rax , rax je hexvar mov edi , hexvar mov rbp , rax mov r12d , hexvar xor ebx , ebx call hexvar mov qword ptr [ r13 + hexvar ] , rax jmp hexvar nop mov rdx , r12 add rdi , rbx mov rcx , rbp mov esi , num sub rdx , rbx call hexvar mov rdi , rbp mov r14 , rax call hexvar test eax , eax jne hexvar add rbx , r14 mov rdi , rbp call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ r13 + hexvar ] cmp rbx , r12 jne hexvar lea r12 , [ rbx + rbx ] mov rsi , r12 call hexvar mov rdi , rax mov qword ptr [ r13 + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov qword ptr [ r13 + hexvar ] , rbx mov rdi , rbp pop rbx pop rbp pop r12 pop r13 pop r14 jmp hexvar mov rbx , qword ptr [ r13 + hexvar ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbx xor eax , eax call hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar mov rbx , qword ptr [ r13 + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar
mov eax , hexvar push rbx lea r8 , [ rdi + num ] mov rbx , rdi mov word ptr [ rdi ] , ax mov ecx , num mov rsi , r8 mov byte ptr [ rdi + num ] , hexvar lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov word ptr [ rbx + num ] , hexvar mov byte ptr [ rbx + num ] , hexvar pop rbx ret lea rsi , [ rip + hexvar ] mov rdi , r8 call hexvar test eax , eax jne hexvar mov byte ptr [ rbx + num ] , hexvar pop rbx ret
mov rdi , qword ptr [ rdi ] mov rcx , qword ptr [ rsi ] mov eax , dword ptr [ rdi + hexvar ] mov edx , dword ptr [ rcx + hexvar ] and eax , hexvar and edx , hexvar cmp eax , hexvar je hexvar mov eax , hexvar cmp edx , hexvar je hexvar mov eax , num mov rsi , qword ptr [ rcx + hexvar ] cmp qword ptr [ rdi + hexvar ] , rsi ja hexvar mov eax , hexvar jb hexvar mov eax , num mov rcx , qword ptr [ rcx + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx ja hexvar sbb eax , eax ret nop dword ptr [ rax + rax ] mov eax , num cmp edx , hexvar je hexvar ret nop word ptr cs : [ rax + rax ] ret
mov rax , qword ptr [ rdx ] mov qword ptr [ rax ] , rsi add rax , num mov qword ptr [ rdx ] , rax ret
push r13 mov r13 , rdi mov edi , hexvar push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx sub rsp , num call hexvar mov rdi , r12 mov rbx , rax call hexvar mov rdi , rbp mov qword ptr [ rbx ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov qword ptr [ rbx + num ] , rax call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , num mov qword ptr [ rax ] , rbx mov rbx , qword ptr [ rbx + num ] mov rsi , rbx call hexvar mov qword ptr [ rax ] , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , r13 mov rdi , rax xor eax , eax call hexvar
push rbx mov rdi , qword ptr [ rdi ] mov rbx , rsi mov rsi , qword ptr [ rsi ] cmp byte ptr [ rdi ] , hexvar je hexvar xor edx , edx call hexvar test eax , eax je hexvar mov eax , num pop rbx ret nop dword ptr [ rax ] mov dword ptr [ rbx + num ] , num mov eax , num jmp hexvar nop word ptr cs : [ rax + rax ] add rdi , num xor edx , edx call hexvar test eax , eax jne hexvar mov dword ptr [ rbx + num ] , num pop rbx ret
sub rsp , num call hexvar test eax , eax sete al add rsp , num movzx eax , al ret
mov rdi , qword ptr [ rdi ] jmp hexvar
sub rsp , num mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rdi ] call hexvar test eax , eax sete al add rsp , num movzx eax , al ret
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r15 push r14 mov r14d , edx push r13 push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi sub rsp , hexvar mov r13 , rsp mov rdx , r13 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r14d , r14d jne hexvar mov rdi , r12 call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] mov rsi , r13 mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r15 , rax call hexvar mov rdx , r15 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar test r14d , r14d je hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar jmp hexvar
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
push rbp push rbx lea rbx , [ rip + hexvar ] lea rbp , [ rbx + hexvar ] sub rsp , num nop dword ptr [ rax ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , num add rbx , hexvar cmp rbx , rbp jne hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r13 mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov ebx , dword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edx , dword ptr [ r13 + num ] mov rdi , qword ptr [ rip + hexvar ] mov rsi , r12 xor eax , eax call hexvar mov rdx , qword ptr [ r13 + num ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ r13 ] test eax , eax jne hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add ebx , num mov eax , ebx sar eax , hexvar shr eax , hexvar add ebx , eax and ebx , hexvar sub ebx , eax cmp dword ptr [ rip + hexvar ] , ebx je hexvar movsxd rax , ebx lea rax , [ rax + rax * num ] lea r13 , [ rbp + rax * num ] cmp qword ptr [ r13 + hexvar ] , num je hexvar mov edi , dword ptr [ r13 ] call hexvar test rax , rax jne hexvar mov edx , dword ptr [ r13 ] mov rcx , qword ptr [ rip + hexvar ] test edx , edx jne hexvar mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ r13 + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop lea rsi , [ rip + hexvar ] mov rdi , rcx xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r15 mov r15d , edi push r14 mov r14d , esi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp lea rbp , [ rip + hexvar ] push rbx sub rsp , num movsxd rbx , dword ptr [ rip + hexvar ] lea rax , [ rbx + rbx * num ] mov rdi , qword ptr [ rbp + rax * num + hexvar ] test rdi , rdi je hexvar call hexvar lea rax , [ rbx + rbx * num ] mov rdi , r12 lea rbx , [ rbp + rax * num ] mov dword ptr [ rbx ] , r15d mov dword ptr [ rbx + num ] , r14d mov qword ptr [ rbx + num ] , r13 call hexvar mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , num cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov dword ptr [ rip + hexvar ] , eax add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 mov r12 , rdx push rbp push rbx sub rsp , num mov eax , dword ptr [ rdx ] lea edx , [ rax - num ] cmp edx , num ja hexvar mov r13 , qword ptr [ r12 + hexvar ] mov r15 , rdi mov ecx , dword ptr [ rdi + hexvar ] cmp dword ptr [ r13 + hexvar ] , ecx ja hexvar mov rbx , qword ptr [ rdi + hexvar ] mov r14 , rsi test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] test rdi , rdi je hexvar movzx eax , byte ptr [ r14 ] cmp byte ptr [ rdi ] , al jne hexvar mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdx , r12 mov rsi , rbp mov rdi , r15 call hexvar test eax , eax jne hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ r12 ] mov rbp , qword ptr [ rbx + num ] cmp dword ptr [ rbp ] , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test r14 , r14 jne hexvar test rdi , rdi je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ r15 + hexvar ] mov edi , hexvar add eax , num mov dword ptr [ r15 + hexvar ] , eax mov dword ptr [ r13 + hexvar ] , eax call hexvar mov rdx , qword ptr [ r15 + hexvar ] mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax ] , rdx mov qword ptr [ r15 + hexvar ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ r13 + hexvar ] , eax jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
push r15 lea r15 , [ rsi + hexvar ] push r14 push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi add rdi , hexvar lea rax , [ rbx + hexvar ] mov rsi , rax sub rsp , hexvar mov r8 , qword ptr [ rcx + hexvar ] mov rcx , rdx mov rdx , r15 mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ r13 + hexvar ] test rax , rax je hexvar mov r14 , qword ptr [ rax ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r14 , qword ptr [ r14 ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax jne hexvar nop dword ptr [ rax ] xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num je hexvar mov r14 , qword ptr [ r13 + hexvar ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax je hexvar mov r14 , qword ptr [ r14 ] test r14 , r14 jne hexvar mov r8 , qword ptr [ r13 + hexvar ] mov rsi , qword ptr [ rsp + num ] mov rcx , rbp mov rdx , r15 mov rdi , qword ptr [ rsp ] call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax setne al movzx eax , al jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num mov eax , num jne hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov eax , dword ptr [ rdi + hexvar ] mov r14 , qword ptr [ rdi ] mov qword ptr [ rdi + hexvar ] , num add dword ptr [ rdi + hexvar ] , num mov dword ptr [ rdi + hexvar ] , eax test r14 , r14 je hexvar lea rax , [ rsi + hexvar ] mov r12 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ r14 + hexvar ] mov rdi , r12 mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ r14 + num ] mov rsi , qword ptr [ rax + num ] call qword ptr [ rbp ] test eax , eax je hexvar mov r13 , qword ptr [ r14 + num ] test r13 , r13 je hexvar mov rax , qword ptr [ r13 + hexvar ] test rax , rax jne hexvar mov r13 , qword ptr [ r13 ] test r13 , r13 je hexvar mov rsi , qword ptr [ r13 + num ] mov rdi , r12 call qword ptr [ rbp + num ] test eax , eax jne hexvar nop dword ptr [ rax + rax ] xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov r15 , qword ptr [ rax ] test r15 , r15 jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov r15 , qword ptr [ r15 ] test r15 , r15 je hexvar mov rcx , r15 mov rdx , r12 mov rsi , rbp mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar mov rdx , qword ptr [ rsp + num ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + hexvar ] mov rcx , r12 mov r8 , - num call hexvar test eax , eax je hexvar mov r14 , qword ptr [ r14 ] test r14 , r14 jne hexvar mov eax , num jmp hexvar
test rsi , rsi je hexvar mov eax , dword ptr [ rsi + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsi + hexvar ] ret nop dword ptr [ rax ] xor eax , eax ret
test rsi , rsi je hexvar mov eax , dword ptr [ rsi + hexvar ] ret nop dword ptr [ rax ] mov eax , num ret
mov rax , - num test rsi , rsi je hexvar mov edx , dword ptr [ rsi + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ rsi + hexvar ] ret
mov rax , - num test rsi , rsi je hexvar mov edx , dword ptr [ rsi + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ rsi + hexvar ] ret
test rsi , rsi je hexvar mov rax , qword ptr [ rsi ] ret nop dword ptr [ rax ] xor eax , eax ret
test rsi , rsi je hexvar mov rax , qword ptr [ rsi + num ] ret nop word ptr [ rax + rax ] xor eax , eax ret
test rsi , rsi je hexvar sub rsp , num xor edx , edx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] lea edx , [ rcx - num ] cmp edx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] add rsp , num ret nop dword ptr [ rax + rax ] xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] xor eax , eax ret
test rsi , rsi je hexvar sub rsp , num xor edx , edx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] cmp edx , hexvar je hexvar jbe hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num ret nop dword ptr [ rax ] cmp edx , hexvar je hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax ] xor eax , eax ret
test rsi , rsi je hexvar push rbx mov rbx , rdx xor edx , edx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rdx + hexvar ] mov dword ptr [ rbx ] , edx mov rax , qword ptr [ rax + hexvar ] pop rbx mov rax , qword ptr [ rax + hexvar ] ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rdx + hexvar ] mov dword ptr [ rbx ] , edx mov rax , qword ptr [ rax + hexvar ] pop rbx mov rax , qword ptr [ rax + num ] ret nop dword ptr [ rax + rax ] xor eax , eax ret
test rsi , rsi je hexvar sub rsp , num xor edx , edx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] add rsp , num ret nop dword ptr [ rax ] xor eax , eax ret
test rsi , rsi je hexvar mov eax , dword ptr [ rsi + num ] test eax , eax jne hexvar mov eax , dword ptr [ rsi ] cmp eax , num je hexvar test eax , eax je hexvar sub eax , hexvar cmp eax , num ja hexvar mov rax , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rax + num ] test rsi , rsi je hexvar mov eax , dword ptr [ rsi + num ] test eax , eax je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax ] test rsi , rsi jne hexvar xor eax , eax ret nop word ptr [ rax + rax ] ret
test rsi , rsi je hexvar sub rsp , num xor edx , edx call hexvar test rax , rax je hexvar mov eax , dword ptr [ rax ] add rsp , num ret nop dword ptr [ rax ] xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] xor eax , eax ret
mov ecx , dword ptr [ rsi ] cmp ecx , hexvar jbe hexvar mov rax , rsi ret nop dword ptr [ rax + rax ] mov eax , num shl rax , cl test eax , hexvar je hexvar push rbx sub rsp , hexvar test rdx , rdx je hexvar cmp rsi , qword ptr [ rdx + num ] je hexvar mov rax , qword ptr [ rdx ] cmp rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rax + num ] , rsi je hexvar mov r8 , qword ptr [ rax ] cmp r8 , rax je hexvar mov rax , r8 test rax , rax jne hexvar sub ecx , hexvar mov qword ptr [ rsp ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rsi cmp ecx , num jbe hexvar mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar add rsp , hexvar mov rax , rsi pop rbx ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax ] mov rsi , qword ptr [ rdx ] test rsi , rsi je hexvar mov ecx , dword ptr [ rsi ] cmp ecx , num je hexvar sub ecx , hexvar xor ebx , ebx cmp ecx , num jbe hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] jmp hexvar nop dword ptr [ rax ] mov rdx , rsp mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rax + num ] mov rdx , rsp call hexvar jmp hexvar
push r14 push r13 push r12 push rbp push rbx mov r13 , qword ptr [ rdi ] test r13 , r13 je hexvar mov r14 , rsi mov r12d , edx mov rbp , qword ptr [ r13 + num ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rbp ] test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar test r12d , r12d je hexvar mov rax , qword ptr [ rbx + hexvar ] cmp dword ptr [ rax ] , r12d jne hexvar mov rdi , qword ptr [ rbx + num ] movzx eax , byte ptr [ r14 ] cmp byte ptr [ rdi ] , al jne hexvar mov rsi , r14 call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret mov r13 , qword ptr [ r13 ] test r13 , r13 jne hexvar jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , qword ptr [ rdi + num ] test r13 , r13 je hexvar mov r12 , qword ptr [ rdi + hexvar ] mov rbp , rsi test r12 , r12 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r12 , qword ptr [ r12 + num ] test r12 , r12 je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rbx + num ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdi ] , al jne hexvar mov rsi , rbp call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 ret mov r13 , qword ptr [ r13 + num ] test r13 , r13 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r13 , qword ptr [ r13 ] test r13 , r13 je hexvar mov rax , qword ptr [ r13 + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + num ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdi ] , al jne hexvar mov rsi , rbp call hexvar test eax , eax jne hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar jmp hexvar
push r12 push rbp mov ebp , edx push rbx mov r12d , dword ptr [ rsi + num ] mov rbx , rsi test r12d , r12d je hexvar cmp r12d , edx jne hexvar mov dword ptr [ rbx + num ] , ebp mov eax , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , ebp mov edx , r12d mov rsi , rax xor eax , eax call hexvar mov dword ptr [ rbx + num ] , ebp mov eax , num pop rbx pop rbp pop r12 ret
push r14 push r13 push r12 push rbp push rbx test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbp , qword ptr [ rdi + hexvar ] mov rbx , rdx mov r13 , rsi mov r12 , rdi test rbp , rbp je hexvar cmp dword ptr [ rdx ] , hexvar jne hexvar mov rax , qword ptr [ rdx + hexvar ] mov rbp , rbx mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] call hexvar test eax , eax jne hexvar pop rbx mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] xor esi , esi mov edi , hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov rdi , qword ptr [ r12 + hexvar ] mov ecx , num mov rsi , r13 mov qword ptr [ rax ] , num mov edx , num mov r14 , rax mov qword ptr [ rax + num ] , rbx add rdi , hexvar mov qword ptr [ rbp + hexvar ] , rax call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbp pop rbx mov qword ptr [ r14 ] , rax mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor ebp , ebp pop rbx mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar jmp hexvar
push r14 push r13 push r12 push rbp push rbx test rsi , rsi je hexvar test rdx , rdx je hexvar cmp qword ptr [ rdi + num ] , num mov r13 , rdx mov r12 , rsi mov rbx , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar xor esi , esi mov edi , hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] xor edx , edx mov ecx , num mov qword ptr [ rax ] , num mov rsi , r12 mov r14 , rax mov qword ptr [ rax + num ] , r13 add rdi , hexvar mov qword ptr [ rbp + hexvar ] , rax call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbp pop rbx mov qword ptr [ r14 ] , rax mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor ebp , ebp pop rbx mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret
push r14 mov edi , hexvar mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12d , ecx push rbp mov ebp , r8d push rbx mov ebx , r9d call hexvar pxor xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx mov qword ptr [ rax + hexvar ] , - num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 mov edi , hexvar mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12d , ecx push rbp mov ebp , r8d push rbx mov ebx , r9d call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx mov qword ptr [ rax + hexvar ] , rdx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov edi , hexvar mov rbp , rsi push rbx mov rbx , rdx sub rsp , num call hexvar mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , rbx add rsp , num pop rbx pop rbp ret
push r13 mov edi , hexvar mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov ebx , r8d sub rsp , num call hexvar mov qword ptr [ rax ] , r13 mov qword ptr [ rax + num ] , r12 mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rax + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r14 mov edi , hexvar mov r14 , rsi push r13 mov r13 , rdx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx mov ebx , r9d call hexvar mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r13 mov edi , hexvar mov r13 , rsi push r12 mov r12 , rdx push rbp mov ebp , ecx push rbx mov ebx , r8d sub rsp , num call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r13 mov dword ptr [ rax + num ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
test rsi , rsi je hexvar push rbp lea eax , [ rdx - num ] mov rbp , rdi push rbx mov rbx , rsi sub rsp , num cmp eax , num ja hexvar xor esi , esi mov edi , edx call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbx mov rdi , rbp mov rdx , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] xor eax , eax ret
test rsi , rsi je hexvar push rbx mov edi , hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret xor eax , eax ret
test rsi , rsi je hexvar push rbx mov edi , hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret xor eax , eax ret
push r14 push r13 push r12 push rbp push rbx test rsi , rsi je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov ebp , r8d mov r12 , rcx mov r13 , rdx call hexvar mov r14 , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp mov qword ptr [ r14 + hexvar ] , rax pop rbx mov rax , r14 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] xor r14d , r14d pop rbx pop rbp mov rax , r14 pop r12 pop r13 pop r14 ret
push r12 push rbp push rbx test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov rbp , rdx call hexvar mov r12 , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ r12 + hexvar ] , rax mov rax , r12 pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] xor r12d , r12d pop rbx pop rbp mov rax , r12 pop r12 ret
push r12 push rbp push rbx test rsi , rsi je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , edx call hexvar mov rbp , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov dword ptr [ rax + num ] , r12d mov qword ptr [ rbp + hexvar ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] xor ebp , ebp pop rbx mov rax , rbp pop rbp pop r12 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , r9d mov r13 , r8 mov r14 , rcx mov rbp , rdx call hexvar mov r15 , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov qword ptr [ r15 + hexvar ] , rax add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor r15d , r15d jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12 , rcx mov r13 , rdx call hexvar mov rbp , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] add rsp , num xor ebp , ebp pop rbx mov rax , rbp pop rbp pop r12 pop r13 ret
test rsi , rsi je hexvar push rbx mov edi , hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , ecx mov r13 , rdx call hexvar mov rbp , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] add rsp , num xor ebp , ebp pop rbx mov rax , rbp pop rbp pop r12 pop r13 ret
test rsi , rsi je hexvar mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar ret nop push rbx mov edi , hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax pop rbx ret nop xor eax , eax ret
push r12 mov edi , hexvar mov r12 , rsi xor esi , esi push rbp mov rbp , rdx push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , r12 mov qword ptr [ rax + num ] , rbp mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push r14 xor edi , edi test esi , esi mov esi , edx push r13 sete dil mov r14 , rcx mov r13 , r8 push r12 add edi , num mov r12 , r9 push rbp push rbx mov rbp , qword ptr [ rsp + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rax + num ] , num test edx , edx mov qword ptr [ rax ] , r14 cmovne rbp , rbx mov qword ptr [ rax + hexvar ] , r13 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp xor edi , edi mov rbp , rcx push rbx sub rsp , num test esi , esi mov esi , edx sete dil add edi , num call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar pxor xmm0 , xmm0 movups xmmword ptr [ rax + num ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov qword ptr [ rax ] , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
mov edi , num jmp hexvar
mov edi , num jmp hexvar
mov edi , num jmp hexvar
push rbx mov edi , num mov ebx , edx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebx pop rbx ret
xor esi , esi mov edi , num jmp hexvar
push r12 mov edi , num mov r12 , rsi xor esi , esi push rbp mov rbp , rdx push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , r12 mov qword ptr [ rax + num ] , rbp mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
test rsi , rsi je hexvar test rdx , rdx je hexvar push r13 push r12 mov r12d , ecx push rbp mov rbp , r8 push rbx mov rbx , rdx sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar lea edx , [ rcx - num ] cmp edx , num jbe hexvar mov rdx , qword ptr [ rdi + hexvar ] add rax , hexvar xor ecx , ecx lea rdi , [ rdx + hexvar ] test rdx , rdx cmove rdi , rax mov edx , num call hexvar mov r13 , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + num ] , num mov dword ptr [ rax ] , r12d mov qword ptr [ rax + num ] , rbx mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ r13 + hexvar ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor ecx , ecx cmp r12d , num lea rdi , [ rax + hexvar ] sete cl add ecx , num jmp hexvar nop dword ptr [ rax ] xor eax , eax ret
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret
test rsi , rsi je hexvar test rdx , rdx je hexvar push r12 push rbp mov rbp , rdx mov edx , num push rbx mov rbx , rcx call hexvar mov r12 , rax xor eax , eax test r12 , r12 je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , rbx mov qword ptr [ r12 + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] xor eax , eax ret
test rsi , rsi je hexvar sub rsp , hexvar mov edx , num movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar movsd xmm1 , qword ptr [ rsp + num ] movsd qword ptr [ rax + hexvar ] , xmm1 mov eax , num add rsp , hexvar ret nop dword ptr [ rax + rax ] xor eax , eax add rsp , hexvar ret nop xor eax , eax ret
test rsi , rsi je hexvar push rbx mov rbx , rdx mov edx , num call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx mov eax , num pop rbx ret nop dword ptr [ rax + rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax ret
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret
push r12 push rbp push rbx cmp qword ptr [ rdi + num ] , num je hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rbx , rdi mov r12 , rsi mov rbp , rdx test rcx , rcx je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rcx + num ] , rax je hexvar mov edi , hexvar call hexvar mov rdx , - num lea rdi , [ rax + num ] mov rcx , rax mov r8 , rax mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num and rdi , hexvar xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov qword ptr [ r8 + hexvar ] , r12 lea rcx , [ r8 + hexvar ] mov qword ptr [ r8 + hexvar ] , rbp mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r8 + num ] , rax lea rax , [ r8 + hexvar ] nop dword ptr [ rax ] mov qword ptr [ rax ] , rdx add rax , num cmp rax , rcx jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov qword ptr [ rax ] , r8 mov qword ptr [ rbx + hexvar ] , r8 mov eax , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , r8 jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar nop dword ptr [ rax ] add rax , num cmp rax , hexvar je hexvar cmp qword ptr [ rcx + rax * num + hexvar ] , - num jne hexvar lea rax , [ rcx + rax * num ] mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax + hexvar ] , rbp mov eax , num jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax jmp hexvar
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax + num ] test rdx , rdx je hexvar mov qword ptr [ rax + hexvar ] , rsi mov eax , num mov qword ptr [ rdi + hexvar ] , rdx add rsp , num ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num mov rbx , rdi je hexvar mov edi , hexvar mov rbp , rsi call hexvar mov rdx , qword ptr [ rbx + hexvar ] pxor xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov qword ptr [ rax + num ] , rdx mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , - num test rcx , rcx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov eax , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] lea rcx , [ rdx + hexvar ] jmp hexvar
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rax + num ] , num jne hexvar mov qword ptr [ rax + hexvar ] , rsi mov eax , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
test rsi , rsi je hexvar test rdx , rdx je hexvar push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx cmp qword ptr [ rdi + num ] , num mov rbx , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] pxor xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , r14d mov qword ptr [ rax + hexvar ] , r13 test rcx , rcx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar pop rbx xor eax , eax pop rbp pop r12 pop r13 pop r14 ret nop word ptr cs : [ rax + rax ] xor eax , eax ret nop dword ptr [ rax + rax ] lea rcx , [ rdx + num ] jmp hexvar
push r15 lea rax , [ rip + hexvar ] push r14 push r13 push r12 push rbp push rbx mov rbx , rsi sub rsp , num test rsi , rsi cmove rbx , rax test rdx , rdx je hexvar cmp qword ptr [ rdi + num ] , num mov r12 , rdi je hexvar mov edi , hexvar mov r13 , rdx mov r14d , ecx mov r15 , r8 call hexvar pxor xmm0 , xmm0 mov edi , hexvar mov qword ptr [ rax ] , r13 mov rbp , rax movups xmmword ptr [ rax + num ] , xmm0 call hexvar pxor xmm0 , xmm0 xor ecx , ecx mov rdi , qword ptr [ r12 + hexvar ] test r14d , r14d movups xmmword ptr [ rax + hexvar ] , xmm0 mov edx , num mov rsi , rbx movups xmmword ptr [ rax + hexvar ] , xmm0 setne cl add rdi , hexvar mov qword ptr [ rax + hexvar ] , r15 add ecx , num mov qword ptr [ rax + hexvar ] , - num mov qword ptr [ r12 + hexvar ] , rbp mov qword ptr [ r12 + hexvar ] , rax movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rbp + hexvar ] , rax call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbp add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r12 lea rax , [ rip + hexvar ] test rsi , rsi push rbp mov rbp , rsi push rbx cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov rbx , qword ptr [ rax + num ] mov r12 , rdi test rbx , rbx jne hexvar jmp hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdx , qword ptr [ r12 + hexvar ] pxor xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov rcx , qword ptr [ rdx ] mov qword ptr [ rax + num ] , rbp test rcx , rcx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov qword ptr [ r12 + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax jmp hexvar mov rcx , rdx jmp hexvar
push r12 test rsi , rsi mov r12 , rsi lea rax , [ rip + hexvar ] push rbp cmove r12 , rax push rbx mov rbx , rdi mov edi , hexvar call hexvar pxor xmm0 , xmm0 mov edi , hexvar movups xmmword ptr [ rax ] , xmm0 mov rbp , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , r12 call hexvar mov rdx , qword ptr [ rbx + num ] pxor xmm0 , xmm0 mov qword ptr [ rbx + hexvar ] , rbp movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , rbp test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + num ] , rax mov eax , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] cmp qword ptr [ rbx ] , num jne hexvar mov qword ptr [ rbx ] , rax jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov edi , hexvar call hexvar lea rdi , [ rax + num ] mov rcx , rax mov rdx , rax mov qword ptr [ rax ] , num and rdi , hexvar mov qword ptr [ rax + hexvar ] , num xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add rsp , num ret
push r15 mov r15 , rdx push r14 mov r14 , rsi push r13 mov r13 , rdi mov edi , hexvar push r12 push rbp push rbx mov rbx , rcx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx call hexvar mov dword ptr [ rbx ] , num mov rbp , rax test r15 , r15 je hexvar cmp dword ptr [ r15 ] , hexvar jne hexvar mov rdx , qword ptr [ r15 + num ] test rdx , rdx je hexvar lea rax , [ rsp + hexvar ] xor ebx , ebx mov r12d , hexvar mov qword ptr [ rsp ] , rax jmp hexvar nop dword ptr [ rax ] lea ecx , [ rbx + num ] cmp ecx , r12d jae hexvar mov r15 , qword ptr [ r15 + hexvar ] mov qword ptr [ rbp + rbx * num ] , rdx mov ebx , ecx test r15 , r15 je hexvar cmp dword ptr [ r15 ] , hexvar jne hexvar mov rdx , qword ptr [ r15 + num ] test rdx , rdx je hexvar mov r8 , qword ptr [ rsp ] xor ecx , ecx mov rsi , r14 mov rdi , r13 call hexvar mov rdx , rax test rax , rax jne hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax ] , num mov r15 , qword ptr [ r15 + hexvar ] test r15 , r15 jne hexvar nop dword ptr [ rax + rax ] lea rax , [ rbp + rbx * num ] mov qword ptr [ rax ] , num jmp hexvar nop lea esi , [ r12 + hexvar ] mov rdi , rbp mov dword ptr [ rsp + hexvar ] , ecx mov r12 , rsi shl rsi , num mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov rbp , rax jmp hexvar nop mov rdi , rbp call hexvar xor ebp , ebp add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar jmp hexvar mov rax , rbp jmp hexvar
push r12 mov r12d , edx push rbp mov rbp , rsi push rbx mov ecx , dword ptr [ rdi + hexvar ] mov rbx , rdi mov esi , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] cmp ecx , esi jae hexvar mov eax , ecx add ecx , num shl rax , num add rax , rdi mov qword ptr [ rax ] , rbp mov dword ptr [ rax + num ] , r12d mov eax , num mov dword ptr [ rbx + hexvar ] , ecx pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] add esi , hexvar mov dword ptr [ rbx + hexvar ] , esi shl rsi , num call hexvar mov ecx , dword ptr [ rbx + hexvar ] mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax jmp hexvar
push r15 mov eax , num mov r15 , rdi push r14 mov r14 , rsi push r13 mov r13 , r8 push r12 mov r12 , rcx push rbp push rbx mov rbx , rdx sub rsp , hexvar test rbx , rbx mov rbp , qword ptr [ rsi ] lea rdx , [ rsp + num ] cmove rdx , rax call hexvar test eax , eax jne hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ r14 ] mov rsi , rbp mov rdi , r15 sub rdx , rbp call hexvar test eax , eax je hexvar mov eax , num test rbx , rbx je hexvar mov rsi , qword ptr [ rsp + num ] test rsi , rsi je hexvar mov edx , dword ptr [ r12 ] mov ecx , dword ptr [ r13 ] mov rax , qword ptr [ rbx ] lea r8d , [ rdx + num ] cmp r8d , ecx jae hexvar mov qword ptr [ rax + rdx * num ] , rsi mov eax , num mov dword ptr [ r12 ] , r8d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] add ecx , hexvar mov rdi , rax mov dword ptr [ r13 ] , ecx lea rsi , [ rcx * num ] call hexvar mov edx , dword ptr [ r12 ] mov rsi , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rax lea r8d , [ rdx + num ] jmp hexvar
mov rdx , qword ptr [ rdi ] lea r10 , [ rip + hexvar ] xor eax , eax movsx ecx , byte ptr [ rdx ] movzx r8d , cl test byte ptr [ r10 + r8 * num ] , num je hexvar lea r8 , [ rdx + num ] sub ecx , hexvar mov eax , num mov dword ptr [ rsi ] , ecx mov qword ptr [ rdi ] , r8 movzx r9d , byte ptr [ rdx + num ] mov rdx , r9 test byte ptr [ r10 + r9 * num ] , num jne hexvar ret nop dword ptr [ rax + rax ] mov r8 , r9 lea eax , [ rcx + rcx * num ] movsx edx , dl lea r9 , [ r8 + num ] lea ecx , [ rdx + rax * num - hexvar ] movzx eax , byte ptr [ r8 + num ] mov rdx , rax test byte ptr [ r10 + rax * num ] , num jne hexvar mov eax , num cmp dl , hexvar jne hexvar add r8 , num mov qword ptr [ rdi ] , r8 mov dword ptr [ rsi ] , ecx ret
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx pop rbx mov rsi , rax xor eax , eax jmp hexvar
push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi ] cmp byte ptr [ rbp ] , hexvar je hexvar mov dword ptr [ rsi ] , num xor esi , esi call hexvar mov dword ptr [ r12 + num ] , eax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop lea rax , [ rbp + num ] xor esi , esi mov qword ptr [ rdi ] , rax call hexvar mov dword ptr [ r12 ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num xor esi , esi mov rdx , r13 mov rdi , rbx mov qword ptr [ rbx ] , rax call hexvar mov dword ptr [ r12 + num ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbp call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp mov rbp , rdi push rbx mov eax , dword ptr [ rsi + hexvar ] mov rbx , rsi test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov r12d , num test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov edx , dword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rbp test edx , edx cmove edx , r12d call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] pop rbx mov eax , num pop rbp pop r12 ret nop word ptr [ rax + rax ] lea rsi , [ rsi + hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num jmp hexvar
push r14 mov edi , hexvar mov r14 , rsi push r13 mov r13d , edx push r12 mov r12 , rcx push rbp mov rbp , r8 push rbx call hexvar lea rdi , [ rax + num ] mov rcx , rax mov rbx , rax mov qword ptr [ rax + hexvar ] , num and rdi , hexvar xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov edi , num mov qword ptr [ rbx ] , r14 mov dword ptr [ rbx + num ] , r13d mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , rbp mov dword ptr [ rbx + hexvar ] , num call hexvar mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rax ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov edx , num mov rbp , rdi xor edi , edi push rbx mov rbx , rsi lea rsi , [ rip + hexvar ] sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp mov rdx , rbx mov rsi , rax pop rbx xor eax , eax pop rbp jmp hexvar
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx pop rbx mov rsi , rax xor eax , eax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov dword ptr [ rsi ] , num mov rbp , qword ptr [ rdi ] xor eax , eax cmp rbp , rdx jae hexvar cmp byte ptr [ rbp ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov r12 , rdi mov rbx , rsi call hexvar xor edx , edx mov rsi , r12 mov rdi , rbp mov dword ptr [ rax ] , num mov r13 , rax call hexvar cmp rax , - num jne hexvar mov edx , dword ptr [ r13 ] test edx , edx je hexvar test rbx , rbx je hexvar mov dword ptr [ rbx ] , num xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax call hexvar xor eax , eax jmp hexvar
push rbp mov rbp , rdi push rbx movsxd rbx , esi lea edi , [ rbx + num ] movsxd rdi , edi sub rsp , num call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov byte ptr [ rax + rbx ] , num add rsp , num pop rbx pop rbp ret
mov eax , num ret
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] cmp rax , - num je hexvar mov rdx , qword ptr [ rdi + num ] lea rsi , [ rdx + rax + num ] mov rax , qword ptr [ rdi ] mov rdi , rbp mov rax , qword ptr [ rax + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , - num mov rax , qword ptr [ rbx + hexvar ] cmp rax , - num je hexvar mov rdx , qword ptr [ rbx + num ] mov rdi , rbp lea rsi , [ rdx + rax + num ] mov rax , qword ptr [ rbx ] mov rax , qword ptr [ rax + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , - num mov eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax cmp eax , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] cmp rcx , - num jne hexvar sub rbp , qword ptr [ rbx + hexvar ] mov eax , num mov qword ptr [ rbx + hexvar ] , rbp add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor r8d , r8d xor edx , edx mov esi , hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
push r14 push r13 push r12 push rbp push rbx mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar cmp qword ptr [ rdi + hexvar ] , - num mov rbx , rdi jne hexvar lea rdi , [ rdi + hexvar ] mov r12 , rsi mov r14d , edx call hexvar mov rdi , r12 mov r13 , rax call hexvar mov rdi , r13 mov rbp , rax call hexvar lea rdi , [ rbp + rax + num ] call hexvar cmp r14d , num mov r8 , r13 mov rdx , r12 sbb ecx , ecx mov rdi , rax lea rsi , [ rip + hexvar ] mov rbp , rax and ecx , hexvar xor eax , eax add ecx , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] xor ecx , ecx xor edx , edx mov r8 , rbp mov esi , hexvar mov rdi , rbx mov qword ptr [ rbx + hexvar ] , rax call hexvar test eax , eax je hexvar mov rdi , rbp call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdx push r13 mov r13 , rsi push r12 mov r12 , rdi add rdi , hexvar push rbp push rbx call hexvar mov rdi , r13 mov rbx , rax call hexvar mov rdi , rbx mov rbp , rax call hexvar lea rdi , [ rbp + rax + hexvar ] call hexvar mov r8 , r14 mov rcx , rbx mov rdx , r13 lea rsi , [ rip + hexvar ] mov rdi , rax mov rbp , rax xor eax , eax call hexvar mov rdi , rbx call hexvar xor ecx , ecx xor edx , edx mov r8 , rbp mov esi , hexvar mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbp call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r12 mov r12 , rdi mov rdi , rsi push rbp mov rbp , rsi push rbx sub rsp , hexvar movsd qword ptr [ rsp + num ] , xmm0 call hexvar lea rdi , [ rax + hexvar ] call hexvar movsd xmm0 , qword ptr [ rsp + num ] mov rdx , rbp lea rsi , [ rip + hexvar ] mov rdi , rax mov rbx , rax mov eax , num call hexvar xor ecx , ecx xor edx , edx mov r8 , rbx mov esi , hexvar mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 ret
push r13 mov r13 , rdx push r12 mov r12 , rdi mov rdi , rsi push rbp mov rbp , rsi push rbx sub rsp , num call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rcx , r13 mov rdx , rbp lea rsi , [ rip + hexvar ] mov rdi , rax mov rbx , rax xor eax , eax call hexvar xor ecx , ecx xor edx , edx mov r8 , rbx mov esi , hexvar mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 mov r13 , rsi push r12 mov r12 , rdi add rdi , hexvar push rbp push rbx sub rsp , num call hexvar mov rdi , r13 mov rbx , rax call hexvar mov rdi , rbx mov rbp , rax call hexvar lea rdi , [ rbp + rax + num ] call hexvar mov rcx , rbx mov rdx , r13 lea rsi , [ rip + hexvar ] mov rdi , rax mov rbp , rax xor eax , eax call hexvar mov rdi , rbx call hexvar xor ecx , ecx xor edx , edx mov r8 , rbp mov esi , hexvar mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbp call hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r15 push r14 push r13 mov r13 , rsi push r12 push rbp push rbx mov rbx , rdi add rdi , hexvar sub rsp , num mov rax , qword ptr [ rdi ] mov r12 , qword ptr [ rax + hexvar ] mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rdi , r13 mov rbp , rax call hexvar mov rdi , rbp mov r15 , rax call hexvar lea rdi , [ r15 + rax + hexvar ] call hexvar mov r15 , rax test r12 , r12 jle hexvar mov rdi , rax mov rcx , rbp mov rdx , r13 xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar xor ecx , ecx xor edx , edx mov r8 , r15 mov esi , hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov rdi , r15 call hexvar xor ecx , ecx mov edx , num mov rsi , r13 lea rdi , [ rbx + hexvar ] call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , r14d add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop mov r12 , qword ptr [ rbx + hexvar ] mov r8 , rbp mov rdx , r13 mov rdi , r15 lea rsi , [ rip + hexvar ] lea rax , [ r12 + num ] mov rcx , r12 mov qword ptr [ rbx + hexvar ] , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rax call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar xor eax , eax jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar lea r8 , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , num call hexvar mov rsi , rax xor eax , eax test rsi , rsi js hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov r9d , r8d mov r8d , ecx mov ecx , num push num push num call hexvar add rsp , hexvar ret
sub rsp , num mov eax , dword ptr [ rsp + hexvar ] push rax push r9 mov r9d , r8d mov r8d , ecx xor ecx , ecx call hexvar add rsp , hexvar ret
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov rbp , rdi mov rbx , qword ptr [ rax + hexvar ] mov rdi , rsi mov r12 , rsi call hexvar mov r13 , rax test rbx , rbx je hexvar mov rdi , rbx call hexvar mov rdi , rbx lea rsi , [ r13 + rax + num ] call hexvar mov rbx , rax mov rdi , rbx call hexvar mov rdx , r12 lea rsi , [ rip + hexvar ] lea rdi , [ rbx + rax ] xor eax , eax call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , rbx add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdi , [ rax + num ] call hexvar mov rbx , rax mov byte ptr [ rax ] , num jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
push r15 mov r15 , rsi push r14 push r13 mov r13d , ecx push r12 mov r12 , rdi add rdi , hexvar push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi ] mov dword ptr [ rsp + hexvar ] , edx mov ebp , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbx , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar mov edx , dword ptr [ rsp + hexvar ] mov r14 , rax test edx , edx setne al add eax , hexvar mov byte ptr [ r14 ] , al cmp r13d , num je hexvar test r13d , r13d jne hexvar mov byte ptr [ r14 + num ] , hexvar lea rdi , [ r14 + num ] mov rcx , rbx mov rdx , r15 xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov ecx , edx lea eax , [ rcx + num ] cmp qword ptr [ rdi + rax * num ] , num mov rdx , rax lea rbx , [ rax * num ] jne hexvar lea r13d , [ rcx + num ] lea esi , [ rcx + num ] shl r13 , num shl rsi , num call hexvar mov rdx , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + rbx ] , r14 mov qword ptr [ rax + r13 ] , num mov qword ptr [ rdx + hexvar ] , rax test ebp , ebp je hexvar mov dword ptr [ rdx + hexvar ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop cmp r13d , num jne hexvar mov byte ptr [ r14 + num ] , hexvar jmp hexvar mov r13d , num xor ebx , ebx mov esi , hexvar jmp hexvar nop mov byte ptr [ r14 + num ] , hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar
push r15 push r14 mov r14d , ecx push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi add rdi , hexvar sub rsp , hexvar mov rax , qword ptr [ rdi ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar mov r12 , rax mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , r12 mov r15 , rax call hexvar mov rdi , r13 mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rsp + hexvar ] lea rdx , [ rsi + r15 + hexvar ] mov r15 , qword ptr [ rsp + hexvar ] add r15 , rdx lea rdi , [ r15 + rax ] call hexvar mov r15 , rax cmp r14d , num je hexvar test r14d , r14d je hexvar cmp r14d , num jne hexvar lea r8 , [ rip + hexvar ] mov rax , qword ptr [ rbx + hexvar ] sub rsp , num mov rcx , rbp mov r9 , r12 lea rsi , [ rip + hexvar ] mov rdi , r15 mov rdx , qword ptr [ rax + hexvar ] push r13 xor eax , eax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , r15 pop rdx pop rcx mov esi , dword ptr [ rsp + hexvar ] test esi , esi je hexvar mov dword ptr [ rax + hexvar ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] lea r8 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea r8 , [ rip + hexvar ] jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar call hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea r12 , [ rdi + hexvar ] mov r13d , dword ptr [ rax + hexvar ] mov rdi , r12 mov r15d , dword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rdx call hexvar mov rdi , rax mov rbp , rax call hexvar mov rdi , rbx mov r14 , rax call hexvar lea rdi , [ r14 + rax + num ] call hexvar mov rcx , rbx mov rdx , rbp lea rsi , [ rip + hexvar ] mov rdi , rax mov r14 , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rsp + num ] mov r8d , r15d mov ecx , r13d mov rsi , r14 mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14d , ecx push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , r8d test edx , edx jne hexvar mov byte ptr [ rsp + hexvar ] , num xor r12d , r12d xor ebp , ebp lea r13 , [ rsp + hexvar ] cmp r14d , num mov ecx , dword ptr [ rsp + hexvar ] mov rdi , r13 sbb edx , edx and edx , num add edx , hexvar mov esi , dword ptr [ rdi ] add rdi , num lea eax , [ rsi - hexvar ] not esi and eax , esi and eax , hexvar je hexvar mov esi , eax shr esi , hexvar test eax , hexvar cmove eax , esi lea rsi , [ rdi + num ] cmove rdi , rsi mov esi , eax add sil , al lea rsi , [ rip + hexvar ] sbb rdi , num xor eax , eax call hexvar mov r8d , dword ptr [ rsp + hexvar ] mov ecx , r12d mov rdx , rbp lea rdi , [ rbx + hexvar ] mov rsi , r13 call hexvar test eax , eax je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop lea r8 , [ rsp + hexvar ] xor ecx , ecx call hexvar mov rbp , rax test rax , rax jns hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] lea r13 , [ rsp + hexvar ] mov rdx , rax xor eax , eax mov r12d , num lea rsi , [ rip + hexvar ] mov rdi , r13 call hexvar jmp hexvar
push r15 mov r15 , r8 push r14 mov r14 , rsi push r13 mov r13d , ecx push r12 mov r12 , rdi push rbp mov ebp , edx push rbx sub rsp , num mov rsi , qword ptr [ rdi + hexvar ] cmp rbp , rsi jb hexvar test rsi , rsi jne hexvar mov esi , hexvar cmp rbp , num ja hexvar mov esi , hexvar mov ebx , hexvar jmp hexvar nop dword ptr [ rax ] mov rsi , rbx lea rbx , [ rsi + rsi ] cmp rbp , rbx jae hexvar add rsi , rbx shl rsi , num mov rdi , qword ptr [ r12 + hexvar ] call hexvar mov rcx , qword ptr [ r12 + hexvar ] mov rdx , rbx xor esi , esi mov qword ptr [ r12 + hexvar ] , rax sub rdx , rcx lea rcx , [ rcx + rcx * num ] lea rdx , [ rdx + rdx * num ] lea rdi , [ rax + rcx * num ] shl rdx , num call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , qword ptr [ r12 + hexvar ] lea rdx , [ rbp + rbp * num ] lea rax , [ rax + rdx * num ] cmp qword ptr [ rax ] , num jne hexvar mov rdx , qword ptr [ r12 + hexvar ] mov qword ptr [ rax ] , rdx add rdx , num mov qword ptr [ r12 + hexvar ] , rdx mov qword ptr [ rax + num ] , r14 mov dword ptr [ rax + hexvar ] , r13d test r13d , r13d jne hexvar mov edx , dword ptr [ r15 ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 ] , edx jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] xor r8d , r8d xor ecx , ecx mov esi , hexvar mov edx , dword ptr [ rax + hexvar ] jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] xor r8d , r8d xor ecx , ecx mov esi , hexvar mov edx , dword ptr [ rax + hexvar ] jmp hexvar
push r14 mov r14d , num push r13 push r12 mov r12 , rdi push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] lea rbx , [ rdi + hexvar ] mov rdi , rbx mov r13d , dword ptr [ rax + hexvar ] call hexvar mov rbp , rax test r13d , r13d jne hexvar mov rax , qword ptr [ r12 + hexvar ] xor r14d , r14d mov eax , dword ptr [ rax + hexvar ] test eax , eax setne r14b mov rdi , rbx call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdi , r12 mov r13 , rax call hexvar lea rdi , [ r13 + rax + num ] call hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] mov rdi , rax mov r13 , rax xor eax , eax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar xor r8d , r8d xor edx , edx mov ecx , r14d mov rsi , r13 mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , r13 call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r15 mov r15 , rdi push r14 push r13 mov r13d , esi push r12 lea r12 , [ rdi + hexvar ] push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rdi , r12 mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rbx , rax test r13d , r13d jne hexvar mov byte ptr [ rax ] , num xor r13d , r13d mov rdi , rbx call hexvar mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + rax ] xor eax , eax call hexvar mov rdi , rbp call hexvar xor r8d , r8d mov ecx , r14d mov rdx , r13 mov rsi , rbx mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov r13 , qword ptr [ r15 + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rbx mov r14d , num lea rax , [ r13 + num ] mov rdx , r13 mov qword ptr [ r15 + hexvar ] , rax xor eax , eax call hexvar jmp hexvar
push r15 mov r15d , ecx push r14 push r13 push r12 lea r12 , [ rdi + hexvar ] push rbp mov rbp , rdi push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdi , r12 mov qword ptr [ rsp + num ] , rsi mov ebx , dword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx call hexvar mov r14 , rax mov rax , qword ptr [ rbp + hexvar ] test ebx , ebx je hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rax + hexvar ] mov rdi , r12 mov dword ptr [ rsp + hexvar ] , eax call hexvar mov rdi , r14 mov r13 , rax call hexvar mov rdi , r13 mov rbx , rax call hexvar lea rdi , [ rbx + rax + hexvar ] call hexvar mov rbx , rax test r15d , r15d jne hexvar mov byte ptr [ rax ] , num xor r15d , r15d mov rdi , rbx call hexvar mov rbp , qword ptr [ rsp + hexvar ] mov r9 , r13 mov rdx , r14 mov rcx , qword ptr [ rsp + num ] lea rdi , [ rbx + rax ] lea rsi , [ rip + hexvar ] xor eax , eax mov r8 , rbp call hexvar mov rdi , r14 call hexvar mov rdi , r13 call hexvar mov rax , qword ptr [ rsp + num ] xor r8d , r8d cmp rax , rbp jle hexvar mov ecx , dword ptr [ rsp + hexvar ] mov rdx , r15 mov rsi , rbx mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] sub rbp , rax lea r8 , [ rbp + num ] imul r8d , dword ptr [ rsp + hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] xor ecx , ecx test edx , edx setne cl mov dword ptr [ rsp + hexvar ] , ecx jmp hexvar nop dword ptr [ rax + rax ] mov r15 , qword ptr [ rbp + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rbx lea rax , [ r15 + num ] mov rdx , r15 mov qword ptr [ rbp + hexvar ] , rax xor eax , eax call hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar
push r15 mov r15 , rsi push r14 push r13 push r12 push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdi , rbx mov qword ptr [ rsp + num ] , rdx mov r13d , dword ptr [ rax + hexvar ] mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r8 , qword ptr [ rsp + num ] mov rcx , r15 mov rdx , rbp lea rsi , [ rip + hexvar ] mov rdi , rax mov r12 , rax xor eax , eax call hexvar mov rdi , rbp call hexvar xor edx , edx mov r8d , r14d mov ecx , r13d mov rsi , r12 mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , r12 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lea rcx , [ rdi + hexvar ] mov edx , num mov esi , hexvar lea r8 , [ rdi + hexvar ] jmp hexvar
push r15 lea r15 , [ rdi + hexvar ] push r14 mov r14d , esi push r13 mov r13 , rdi push r12 push rbp push rbx xor ebx , ebx sub rsp , num test esi , esi jg hexvar jmp hexvar nop dword ptr [ rax + rax ] call hexvar add ebx , num mov rdi , rax call hexvar cmp r14d , ebx je hexvar mov rax , qword ptr [ r13 + hexvar ] mov rdi , r15 mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + num ] call hexvar mov rdx , rbp lea rsi , [ rip + hexvar ] mov rdi , rax mov r12 , rax xor eax , eax call hexvar mov rdi , rbp call hexvar xor ecx , ecx xor edx , edx mov r8 , r12 mov esi , hexvar mov rdi , r13 call hexvar test eax , eax je hexvar mov rdi , r12 add ebx , num call hexvar cmp r14d , ebx jne hexvar add rsp , num lea rcx , [ r13 + hexvar ] mov rdi , r13 xor edx , edx pop rbx lea r8 , [ r13 + hexvar ] pop rbp mov esi , hexvar pop r12 pop r13 pop r14 pop r15 jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lea rcx , [ rdi + hexvar ] mov edx , num mov esi , hexvar lea r8 , [ rdi + hexvar ] jmp hexvar
lea eax , [ rsi - num ] mov edx , esi mov rsi , - hexvar cmp eax , num ja hexvar lea rcx , [ rip + hexvar ] mov rsi , qword ptr [ rcx + rax * num ] jmp hexvar
push r13 mov r8d , esi mov r13d , esi lea rsi , [ rip + hexvar ] push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rbp , qword ptr [ rdi + hexvar ] mov r12 , rsp lea rax , [ rbp + num ] mov rcx , rbp mov rdx , rbp mov qword ptr [ rdi + hexvar ] , rax mov rdi , r12 xor eax , eax call hexvar lea rdi , [ rbx + hexvar ] mov rdx , rbp mov rsi , r12 lea r8d , [ r13 + r13 ] mov ecx , num call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r15 lea eax , [ rsi - num ] push r14 push r13 push r12 push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , hexvar cmp eax , hexvar ja hexvar lea r12 , [ rdi + rax * num ] mov rsi , qword ptr [ r12 + hexvar ] test rsi , rsi jne hexvar xor edx , edx mov esi , num call hexvar test eax , eax jne hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor edx , edx mov esi , num call hexvar test eax , eax je hexvar lea r14 , [ rbx + hexvar ] mov rdi , r14 call hexvar mov r13 , qword ptr [ rbx + hexvar ] mov r15 , rax lea rax , [ r13 + num ] mov qword ptr [ rbx + hexvar ] , rax mov rbx , rsp mov r8d , ebp mov rcx , r15 mov rdx , r13 lea rsi , [ rip + hexvar ] mov rdi , rbx xor eax , eax call hexvar mov rdi , r15 call hexvar mov r8d , ebp mov rdx , r13 mov rsi , rbx mov rdi , r14 mov ecx , num call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea r14 , [ rbx + hexvar ] mov rdi , r14 call hexvar mov r13 , qword ptr [ rbx + hexvar ] mov r15 , rax lea rax , [ r13 + num ] mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ r12 + hexvar ] , r13 jmp hexvar nop dword ptr [ rax ] mov edx , ebp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
mov qword ptr [ rdi + hexvar ] , rsi mov r8 , rsi xor ecx , ecx xor edx , edx mov esi , hexvar jmp hexvar
push r13 xor eax , eax mov r13d , edx mov rdx , rsi push r12 mov r12 , rsi lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar lea rdi , [ rbx + hexvar ] mov r8d , r13d mov rdx , r12 mov rsi , rbp xor ecx , ecx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , - num mov dword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov esi , hexvar mov rdi , rbx mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax je hexvar mov rdi , rax jmp hexvar
movzx edx , byte ptr [ rdi ] xor eax , eax cmp dl , hexvar je hexvar test dl , dl je hexvar nop cmp dl , hexvar je hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] test dl , dl je hexvar cmp dl , hexvar jne hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] cmp dl , hexvar je hexvar test dl , dl jne hexvar mov eax , num ret nop word ptr cs : [ rax + rax ] movzx edx , byte ptr [ rdi + num ] cmp dl , hexvar je hexvar add rdi , num test dl , dl jne hexvar jmp hexvar nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] lea rdx , [ rdi + num ] cmp al , hexvar je hexvar test al , al je hexvar mov rdi , rdx jmp hexvar ret xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar mov rdi , rbp mov r13 , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea r13 , [ r13 + rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rax , r13 jb hexvar mov rcx , rbp mov rdx , r12 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rbp , qword ptr [ rip + hexvar ] add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] test rax , rax jne hexvar mov rdi , r13 shr rdi , num add rdi , r13 mov qword ptr [ rip + hexvar ] , rdi call hexvar mov rbp , qword ptr [ rbx ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp xor edx , edx mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] cmp byte ptr [ rdx ] , num jne hexvar add rsp , hexvar pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax xor eax , eax call hexvar
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
push rbp mov esi , hexvar mov rbp , rdi push rbx sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax mov byte ptr [ rax + rbx ] , hexvar lea rax , [ rax + rbx + num ] movabs rdx , hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , rdx add rsp , num mov rax , rcx pop rbx pop rbp ret nop dword ptr [ rax ] mov edi , num call hexvar mov rcx , rax jmp hexvar
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar mov rbx , rax lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push r13 push r12 push rbp mov rbp , rsi push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rdi , rbp mov rsi , rax xor eax , eax call hexvar call hexvar mov rdx , qword ptr [ rax ] mov r13 , rax test rdx , rdx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rsi , r12 mov rdi , rbp xor eax , eax add rbx , num call hexvar mov rdx , qword ptr [ rbx - num ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx je hexvar lea rbp , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num mov rsi , rbp xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar pop rbx ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rax call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rdx , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
sub rsp , num call hexvar mov edi , num call hexvar
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rax call hexvar test rbx , rbx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov r8 , rbp mov rcx , rbx xor eax , eax mov rdi , qword ptr [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov rcx , rbp pop rbx lea rsi , [ rip + hexvar ] xor eax , eax pop rbp jmp hexvar
sub rsp , num mov rsi , rdi lea rdx , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi call hexvar
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar mov eax , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al test edi , hexvar je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret
xor eax , eax test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num je hexvar mov edx , num mov eax , edx add rdx , num cmp qword ptr [ rdi + rdx * num - num ] , num jne hexvar ret nop dword ptr [ rax ] ret
test rsi , rsi je hexvar push r15 push r14 mov r14 , rdi push r13 movabs r13 , hexvar push r12 push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al je hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movzx edx , al movsx r15d , al test byte ptr [ r12 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt r13 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r15d call hexvar cmp eax , - num jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r14 , num mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar xor eax , eax jmp hexvar nop mov eax , num ret
test rdi , rdi je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
test rdi , rdi je hexvar test rsi , rsi je hexvar push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , rsi call hexvar mov r14 , qword ptr [ rip + hexvar ] mov r15d , eax mov rsi , qword ptr [ r14 + num ] test rsi , rsi je hexvar xor ebx , ebx xor ecx , ecx jmp hexvar nop dword ptr [ rax ] lea ecx , [ rbx + num ] lea rsi , [ rcx + rcx * num ] mov rbx , rcx mov rsi , qword ptr [ r14 + rsi * num + num ] test rsi , rsi je hexvar lea rcx , [ rcx + rcx * num ] lea rbp , [ r14 + rcx * num ] cmp dword ptr [ rbp + hexvar ] , r15d jne hexvar cmp dword ptr [ rbp + hexvar ] , r13d jne hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax ] , hexvar mov eax , num jmp hexvar nop dword ptr [ rax + rax ] xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor eax , eax ret
test rdi , rdi je hexvar test rsi , rsi je hexvar push r15 mov r15 , rsi push r14 push r13 push r12 mov r12 , rdi mov rdi , rsi push rbp xor ebp , ebp push rbx sub rsp , num call hexvar mov r13 , qword ptr [ rip + hexvar ] mov r14d , eax mov rbx , r13 jmp hexvar nop add ebp , num add rbx , hexvar cmp ebp , hexvar je hexvar cmp dword ptr [ rbx + num ] , r14d jne hexvar mov rsi , qword ptr [ rbx ] mov rdi , r15 call hexvar test eax , eax jne hexvar shl rbp , num mov qword ptr [ r12 ] , hexvar lea rax , [ rbp + r13 ] mov qword ptr [ r12 + num ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor eax , eax ret
mov r8 , rcx cmp esi , hexvar ja hexvar test rdi , rdi je hexvar mov ecx , esi mov eax , num shl rax , cl movabs rcx , hexvar test rax , rcx jne hexvar movabs rcx , hexvar test rax , rcx jne hexvar nop dword ptr [ rax ] xor eax , eax ret nop dword ptr [ rax + rax ] xor eax , eax test r8 , r8 jne hexvar mov dword ptr [ rdi ] , esi mov eax , num mov qword ptr [ rdi + num ] , rdx mov qword ptr [ rdi + hexvar ] , r8 mov dword ptr [ rdi + num ] , num ret
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov byte ptr [ rax + rbx ] , num add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] sar eax , num movzx edx , al mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] sar eax , hexvar movzx edx , al mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rdx , [ rip - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] neg eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov rdi , rcx mov eax , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r9 , rsi mov r8d , num mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al leave ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , edx mov dword ptr [ rsp + hexvar ] , ecx mov qword ptr [ rsp ] , r8 cmp qword ptr [ rsp ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rip ] test rax , rax jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp ] lea rdi , [ rax + hexvar ] mov rax , qword ptr [ rsp ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rsp ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rsp ] lea rsi , [ rax + num ] mov rax , qword ptr [ rsp ] add rax , hexvar mov r9d , num mov r8 , rdi mov rdi , rax mov eax , num call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rsp ] mov r9 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsp ] mov r8 , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] sub rsp , num push rdi mov rdi , rax call num add rsp , hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rax , qword ptr [ rsp ] mov edx , dword ptr [ rsp + hexvar ] mov dword ptr [ rax + num ] , edx mov eax , num jmp hexvar nop mov rax , qword ptr [ rsp ] mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
