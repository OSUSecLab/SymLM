,
,
,
,
,
,
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp nop pop rbp ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] lea rsi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax - num ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar rdx , cl mov rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax - num ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar rdx , cl mov rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov eax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe shl rax , num add rax , rcx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] test al , al setne al pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar or al , byte ptr [ rbp - num ] movzx eax , al test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov edi , num call hexvar
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar nop add rsp , num pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx xor ebx , ebx call hexvar jmp hexvar
,
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov dword ptr [ rax ] , num call hexvar mov edi , eax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov edi , num call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rax ] , num jmp hexvar call hexvar mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
,
,
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 sub rax , - hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax sub rax , - hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num sub ecx , - hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
,
,
,
,
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
sub rsp , num mov rdx , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rdx + num ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp dl , num sbb rax , rax add rsp , num and rax , hexvar add rax , hexvar ret nop dword ptr [ rax ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar cmp dword ptr [ rip + hexvar ] , hexvar mov eax , hexvar mov edx , num cmovne rax , rdx add rsp , num ret nop test dl , dl jne hexvar mov eax , hexvar add rsp , num ret nop test dl , dl jne hexvar mov eax , hexvar add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
,
mov rdi , qword ptr [ rdi ] jmp hexvar
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
,
,
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
,
cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov eax , dword ptr [ rdi + hexvar ] shr eax , num setne al movzx eax , al add eax , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
,
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
,
,
,
,
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , qword ptr [ rip + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx je hexvar lea rbp , [ rip + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num mov rsi , rbp xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] test rdx , rdx jne hexvar mov rsi , qword ptr [ rip + hexvar ] add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al sete al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov esi , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edi , ecx call rax mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov esi , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edi , ecx call rax mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cvtsi2sd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx edx , al cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num movsd xmm0 , qword ptr [ rbp - num ] mov r8d , edx mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , hexvar mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - num ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , hexvar jbe hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , edx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , ebx add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax + num ] mov edx , hexvar mov eax , ecx imul edx mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov esi , hexvar mov edx , num div rsi imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , edx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num setne al movzx eax , al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num je hexvar test eax , eax je hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar nop nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - num ] cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call rcx leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rax ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax call hexvar mov dword ptr [ rax ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar call hexvar pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rsi , - num lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , num call hexvar mov byte ptr [ rbp - num ] , al lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar movzx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar test eax , eax jns hexvar mov eax , num jmp hexvar movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - num ] , al je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , rdx cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edi , eax call hexvar test rax , rax js hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm1 , rax mov rax , qword ptr [ rbp - hexvar ] cvtsi2sd xmm0 , rax movsd xmm2 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm2 addsd xmm0 , xmm1 movsd qword ptr [ rip + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 jmp hexvar nop jmp hexvar nop add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rip + hexvar ] , xmm0 nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov edi , hexvar call hexvar cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 pop rbp ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num lea rax , [ rip + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rsi , - num lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jl hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov edi , eax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8 , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edi , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov rcx , rbx mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovle eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ebx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp ebx , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - hexvar ] , num mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , ecx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov rsi , rax mov edi , edx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jl hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
,
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
movzx eax , byte ptr [ rdi ] test al , al je hexvar cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar mov edx , num cmp al , hexvar jne hexvar movsx eax , byte ptr [ rdi + num ] lea ecx , [ rax - hexvar ] cmp cl , num ja hexvar cmp byte ptr [ rdi + num ] , num jne hexvar lea eax , [ rax + rdx * num - hexvar ] ret nop dword ptr [ rax ] xor edx , edx cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar push rbx mov edx , hexvar mov rbx , rdi lea rdi , [ rdi + num ] sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rcx , qword ptr [ rsp + num ] mov edx , eax test rcx , rcx je hexvar cmp byte ptr [ rcx ] , num jne hexvar cmp byte ptr [ rbx ] , hexvar je hexvar cmp eax , hexvar ja hexvar add rsp , hexvar mov eax , edx pop rbx ret nop word ptr cs : [ rax + rax ] mov edx , num jmp hexvar nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , num jbe hexvar cmp eax , hexvar ja hexvar lea edx , [ rax + hexvar ] cmp edx , hexvar jbe hexvar test dl , num je hexvar add rsp , hexvar mov eax , hexvar pop rbx ret nop word ptr cs : [ rax + rax ] mov edx , num jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar je hexvar nop dword ptr [ rax + rax ] mov eax , hexvar ret nop word ptr cs : [ rax + rax ] cmp byte ptr [ rdi + num ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num mov eax , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar ja hexvar lea edx , [ rax + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rdi + num ] , num mov eax , hexvar jne hexvar ret
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 add rax , hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax add rax , hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num add ecx , hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
,
,
,
,
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
,
,
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar push rbx test edi , edi jle hexvar call hexvar mov ebx , eax test eax , eax je hexvar jle hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num movsxd r9 , ebx mov edx , num xor r8d , r8d push num mov esi , num mov edi , num xor ecx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] pop rax mov esi , ebx pop rdx pop rbx jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov eax , num mov ecx , ebx shl eax , cl sub eax , num cdqe test qword ptr [ rip + hexvar ] , rax jne hexvar pop rbx ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx mov rdi , rax xor eax , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
,
mov rdi , qword ptr [ rdi ] jmp hexvar
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
,
,
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar push rbx mov ecx , edx mov ebx , esi movsxd r9 , edi mov edx , num xor r8d , r8d mov esi , num mov edi , num sub rsp , num push num call hexvar mov byte ptr [ rax ] , bl pop rax pop rdx pop rbx ret nop dword ptr [ rax + rax ] mov ecx , edi mov rax , - num mov rsi , qword ptr [ rip + hexvar ] shl rax , cl mov rcx , rax lea rax , [ rsi - num ] sub rax , rcx and rax , rcx test edx , edx je hexvar mov rcx , rax movsxd rdx , edx sub rcx , rsi cmp rcx , rdx ja hexvar mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
,
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
sub rsp , hexvar mov ecx , esi movsxd r9 , edi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
test edx , edx jle hexvar lea eax , [ rdx - num ] lea rax , [ rdi + rax + num ] nop dword ptr [ rax ] add rdi , num mov byte ptr [ rdi - num ] , sil shr rsi , num cmp rdi , rax jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
,
,
test edx , edx jle hexvar lea ecx , [ rdx - num ] movsxd rdx , edx movsxd rax , ecx lea rdx , [ rdi + rdx - num ] mov ecx , ecx add rax , rdi sub rdx , rcx nop word ptr [ rax + rax ] mov byte ptr [ rax ] , sil sub rax , num shr rsi , num cmp rax , rdx jne hexvar ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
,
,
,
,
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] sub edx , eax mov eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdi , rax mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rsi lea rdx , [ rcx + rdi ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdi , rax mov rsi , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rsi lea rdx , [ rcx + rdi ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num sub rax , hexvar add rax , rcx mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov ebx , edi test rax , rax je hexvar call rax mov edi , ebx call hexvar
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] xor edi , edi mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov edx , num lea rax , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbp mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl je hexvar nop word ptr [ rax + rax ] add rdi , num cmp dl , hexvar movzx edx , byte ptr [ rdi ] cmove rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] ret
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + num ] cmp rax , num je hexvar cmp rax , num jb hexvar cmp rax , num je hexvar cmp rax , num je hexvar mov rax , qword ptr [ rsp + hexvar ] movzx edx , word ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx eax , word ptr [ rax ] shr ax , num mov edx , eax mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx edx , word ptr [ rax + num ] mov rax , qword ptr [ rsp + hexvar ] add rax , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rsp + hexvar ] movzx eax , word ptr [ rax + num ] shr ax , num mov edx , eax mov rax , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl nop add rsp , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , num call hexvar
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar mov dword ptr [ rax ] , hexvar mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + num ] , eax mov rax , rbx mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , edx push rbx mov rbx , rsi call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , ebp pop rbx pop rbp pop r12 ret
push r12 mov r12d , edi mov edi , hexvar push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , r12d mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num cmp dword ptr [ rbx + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] cmp dword ptr [ rbp + hexvar ] , num jne hexvar lea edx , [ r12 - hexvar ] cmp edx , num jbe hexvar cmp r12d , hexvar je hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] jmp hexvar
,
,
sub rsp , num movsxd rsi , esi call hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar nop dword ptr [ rax ] and byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar ret
,
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi je hexvar mov rsi , rbx call hexvar mov rdx , rax test rax , rax je hexvar lea rsi , [ rax + hexvar ] lea rdi , [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , num and rdi , hexvar mov rcx , rsi mov qword ptr [ rax + hexvar ] , num xor eax , eax sub rcx , rdi add ecx , hexvar shr ecx , num rep stosq qword ptr [ rdi ] , rax mov dword ptr [ rdx + hexvar ] , num movabs rax , hexvar mov qword ptr [ rdx + hexvar ] , rax lea rax , [ rdx + hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , hexvar mov rcx , qword ptr [ rax + num ] mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rcx ] , rsi cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rax + num ] , rsi mov rax , qword ptr [ rip + hexvar ] je hexvar lea rcx , [ rax - hexvar ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rsi lea rax , [ rdx + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov rax , rdx pop rbx ret nop dword ptr [ rax ] mov rdi , rbx mov esi , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] test rax , rax mov rdi , rax jne hexvar add rsp , hexvar xor eax , eax pop rbx ret
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
push r14 xor ecx , ecx mov r14d , edx push r13 mov r13 , rdi push r12 push rbp mov ebp , esi mov rsi , rdi lea rdi , [ rip + hexvar ] push rbx call hexvar mov rbx , rax test rax , rax je hexvar mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar test r14d , r14d je hexvar cmp ebp , hexvar jne hexvar xor edi , edi mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov r13 , r12 movups xmmword ptr [ rax ] , xmm0 mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx ] , rax mov rbx , rax mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , ebp add rbx , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop test eax , eax js hexvar test ebp , ebp je hexvar mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp r12 , qword ptr [ rax + hexvar ] jne hexvar mov rbx , rax mov eax , dword ptr [ rbx + hexvar ] cmp eax , ebp jne hexvar jmp hexvar nop dword ptr [ rax ] test r14d , r14d jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] test r14d , r14d je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ecx , ecx mov edx , num mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar cmp rbp , qword ptr [ rbx + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + num ] , rbp je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ r12 + hexvar ] , rbx and byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rbp lea rax , [ rip + hexvar ] cmp r13 , rax je hexvar test byte ptr [ r13 + hexvar ] , hexvar jne hexvar or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp mov rbp , rdi push rbx lea rbx , [ rip + hexvar ] sub rsp , num mov rdi , qword ptr [ rax + hexvar ] mov rsi , rbp add rbx , num call hexvar cmp qword ptr [ rbx ] , num je hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rax , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret nop ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax nop dword ptr [ rax ] xor eax , eax ret
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push rbp mov edx , num mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ecx , num lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx ret
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rax , rdx add rax , rax sub rcx , rax mov rdx , rcx mov eax , edx add eax , hexvar sub qword ptr [ rbp - num ] , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] add rax , num mov rdi , rax call hexvar test rax , rax sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
,
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push r14 mov rcx , rdi mov edx , hexvar mov esi , num push r13 mov r13 , rdi lea rdi , [ rip + hexvar ] push r12 push rbp push rbx call hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar lea r14 , [ rip + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar nop mov rax , qword ptr [ rbp ] xor ebx , ebx test rax , rax je hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] add ebx , num test rax , rax jne hexvar mov rsi , r13 mov edi , hexvar call hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbp mov r8d , ebx mov rsi , r14 mov rdi , r13 xor eax , eax call hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp jne hexvar mov r12 , qword ptr [ r12 + hexvar ] test r12 , r12 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret ret
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
,
,
,
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rdx ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] ret
,
,
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop word ptr [ rax + rax ] mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] ret
push rbx xor esi , esi sub rsp , hexvar lea rbx , [ rsp + num ] mov qword ptr [ rsp + num ] , rdi mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] mov esi , num mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar add eax , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov esi , num mov rdi , rbx call hexvar cmp eax , - num je hexvar add rsp , hexvar add eax , hexvar pop rbx ret
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov rcx , rdx sub rcx , rax cmp rcx , num jbe hexvar cmp rdx , rax je hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rax ] , bpl add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] xor edi , edi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rbx + hexvar ] mov esi , num call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar
,
,
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
push rbp push rbx mov rbx , rdi sub rsp , num mov rcx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rcx mov rdx , rbp add rax , rbp sub rdi , rsi not rdx and rax , rdx mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax sub rdx , rsi cmp rdx , rdi jbe hexvar mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , rcx mov qword ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx + hexvar ] mov r9 , r8 sub rax , - hexvar mov rdi , rcx not r9 mov qword ptr [ rbx + hexvar ] , rax sub rdi , rsi cmp rax , rdx jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rdx , rcx mov qword ptr [ rbx + hexvar ] , rax sub rdx , rax mov qword ptr [ rbx + hexvar ] , num cmp rdx , hexvar jbe hexvar mov rdx , rax sub rax , - hexvar mov r9 , - num xor r8d , r8d mov qword ptr [ rbx + hexvar ] , rax cmp rax , rdx je hexvar add rax , r8 and rax , r9 mov r10 , rax sub r10 , rsi cmp r10 , rdi ja hexvar mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax lea rdi , [ rdx + num ] mov qword ptr [ rbx + hexvar ] , rcx mov rcx , rdx movsxd rbp , ebp and rdi , hexvar xor eax , eax mov qword ptr [ rbx + hexvar ] , rbp sub rcx , rdi mov qword ptr [ rdx ] , num sub ecx , - hexvar mov qword ptr [ rdx + hexvar ] , num shr ecx , num rep stosq qword ptr [ rdi ] , rax mov rax , rdx add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx jmp hexvar nop word ptr cs : [ rax + rax ] or byte ptr [ rdi + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
,
,
,
,
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push rbp mov rbp , rsi mov esi , num push rbx mov rbx , rdi sub rsp , num call hexvar mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rbx ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov byte ptr [ rdx + rax ] , bpl add rsp , num pop rbx pop rbp ret
push rbx xor esi , esi mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , edi je hexvar lea ecx , [ rdi - num ] push rbx mov ebx , edi cmp ecx , num jbe hexvar test eax , eax jne hexvar cmp edi , num jne hexvar pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi cmp edi , num mov rdi , rdx sete sil add esi , num call hexvar mov edi , ebx xor esi , esi pop rbx jmp hexvar nop ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
test byte ptr [ rdi ] , num jne hexvar or byte ptr [ rdi ] , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar or byte ptr [ rax ] , hexvar add rsp , num ret nop mov rdi , qword ptr [ rdi + hexvar ] or byte ptr [ rdi ] , hexvar ret
,
mov rdi , qword ptr [ rdi ] jmp hexvar
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbx mov edx , num mov rbx , rdi mov rsi , rdi xor edi , edi call hexvar movzx edx , byte ptr [ rbx + hexvar ] cmp dl , num jbe hexvar cmp dl , num je hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov byte ptr [ rbx + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
cmp qword ptr [ rip + hexvar ] , - num je hexvar ret nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax js hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax ret
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
,
,
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
test byte ptr [ rdi ] , num jne hexvar mov qword ptr [ rdi + hexvar ] , rsi and byte ptr [ rdi + num ] , hexvar ret nop mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi test byte ptr [ rdi ] , num je hexvar cmp rax , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jns hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rdi ] , edx ret mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rdi , rdi jne hexvar ret nop word ptr [ rax + rax ] test rdi , rdi je hexvar mov dword ptr [ rdi ] , num xor eax , eax ret
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push rbx mov rsi , rdi mov rbx , rdi xor edx , edx xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbx ] test edx , edx jle hexvar movzx ecx , byte ptr [ rax ] jmp hexvar nop dword ptr [ rax ] sub edx , num je hexvar test cl , cl jne hexvar mov dword ptr [ rbx ] , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor eax , eax pop rbx ret
,
push rbx mov rbx , rdi cmp edx , num je hexvar jle hexvar cmp edx , num je hexvar cmp edx , num jne hexvar test esi , esi js hexvar mov dword ptr [ rip + hexvar ] , esi test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , rbx mov eax , num pop rbx ret nop word ptr [ rax + rax ] test edx , edx je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax ] xor eax , eax pop rbx ret nop dword ptr [ rax ] cmp esi , - num jne hexvar cmp esi , - num jne hexvar test rbx , rbx je hexvar cmp byte ptr [ rbx ] , num jne hexvar and edx , num je hexvar mov rax , qword ptr [ rip + hexvar ] pop rbx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax xor eax , eax ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
,
,
,
cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov eax , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num ret push rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx jne hexvar mov rbx , rdi test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx test rax , rax je hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , rbx call hexvar mov dword ptr [ rip + hexvar ] , num add rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx ] mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + num ] add rsp , num xor edx , edx pop rbx add rsi , rbp pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
,
push rbx mov rbx , rsi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar call hexvar mov rdi , rax mov rax , qword ptr [ rax + num ] test byte ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rdi + num ] , rbx pop rbx ret nop mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 mov r13 , rsi push r12 push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdx , qword ptr [ r12 + num ] mov rbx , rax test rdx , rdx je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rdx ] movups xmmword ptr [ rax ] , xmm0 movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r13 call hexvar mov rdi , rbp mov rbx , rax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdi , r13 movzx ebx , byte ptr [ rax + hexvar ] call hexvar mov rdi , rbp and ebx , num mov r12d , ebx movzx ebx , byte ptr [ rax + hexvar ] call hexvar and ebx , hexvar or ebx , r12d mov byte ptr [ rax + hexvar ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdx , qword ptr [ r12 + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
test byte ptr [ rdi ] , num jne hexvar movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax and byte ptr [ rdi + num ] , hexvar ret nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar mov qword ptr [ rdi + hexvar ] , rsi ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , word ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rsi and ax , hexvar or eax , num mov word ptr [ rdi + hexvar ] , ax test byte ptr [ rdi ] , num je hexvar cmp rdx , qword ptr [ rdi + num ] je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] and byte ptr [ rdi + num ] , hexvar ret
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
sub rsp , hexvar mov ecx , esi movsxd r9 , edi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar ret
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi ] , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdx ] , rdi je hexvar mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rdx ret nop dword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi ] , rax jmp hexvar
cmp qword ptr [ rip + hexvar ] , rdi je hexvar sub rsp , num call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret nop word ptr [ rax + rax ] cmp dword ptr [ rip + hexvar ] , esi jne hexvar mov qword ptr [ rip + hexvar ] , num ret
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar sub rsp , num call hexvar mov rax , qword ptr [ rax + num ] add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] ret
,
,
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov rdx , rbp mov rdi , rbx lea r9 , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rcx , rax call hexvar test rax , rax je hexvar add rsp , hexvar lea rax , [ rip + hexvar ] pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov r8 , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rdx , r8 sub rdx , rcx cmp rdx , hexvar jbe hexvar mov rsi , qword ptr [ rbx + hexvar ] add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r10 , r8 lea rdx , [ rcx + rdi ] not rdi mov rcx , qword ptr [ rbx + hexvar ] and rdx , rdi mov rdi , rdx sub r10 , rcx mov qword ptr [ rbx + hexvar ] , rdx sub rdi , rcx cmp rdi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , r8 mov rdx , r8 mov qword ptr [ rbx + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + hexvar ] , r12 mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi + num ] , rbp mov rcx , qword ptr [ rdx ] mov qword ptr [ rsi ] , rcx mov qword ptr [ rdx ] , rsi add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] lea rdi , [ rbx + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] mov edx , num xor edi , edi mov qword ptr [ rsp + hexvar ] , rax lea rsi , [ rip + hexvar ] lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov edi , num call hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
push rbx and esi , hexvar shl edi , num mov rbx , rdx or edi , esi or edi , hexvar sub rsp , hexvar movsxd rsi , edi test rdx , rdx je hexvar mov rdi , rbx mov edx , num call hexvar add rsp , hexvar mov rax , rbx pop rbx ret nop dword ptr [ rax ] mov edi , num mov qword ptr [ rsp + num ] , rsi call hexvar mov edi , num mov rbx , rax call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test qword ptr [ rdi + num ] , rax jne hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] test qword ptr [ rdi + hexvar ] , rdx je hexvar call hexvar mov eax , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , num add rsp , num jmp hexvar
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 push r12 mov r12d , esi push rbp mov rbp , rdi push rbx movsx ebx , dx sub rsp , hexvar movzx eax , byte ptr [ rcx + hexvar ] cmp al , num je hexvar ja hexvar cmp al , num jne hexvar test r8d , r8d jne hexvar mov edx , ebx mov esi , r12d mov rdi , rbp call hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] sub eax , hexvar cmp al , num jbe hexvar mov rdi , rcx mov dword ptr [ rsp + num ] , r9d mov dword ptr [ rsp ] , r8d call hexvar sub rsp , num mov edx , ebx mov esi , r12d mov r9d , dword ptr [ rsp + hexvar ] mov rcx , rax mov rdi , rbp push r9 mov r8d , dword ptr [ rsp + hexvar ] mov r9d , r8d xor r8d , r8d call hexvar pop rdx pop rcx jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rcx + hexvar ] lea r13 , [ rsp + hexvar ] xor eax , eax mov dword ptr [ rsp + hexvar ] , r9d lea rsi , [ rip + hexvar ] mov rdi , r13 mov dword ptr [ rsp + num ] , r8d mov qword ptr [ rsp ] , rcx call hexvar mov rdi , r13 call hexvar lea rsi , [ rip + hexvar ] mov r13 , rax mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov rdi , r13 call hexvar mov rcx , qword ptr [ rsp ] mov rdi , r13 mov rsi , qword ptr [ rcx + hexvar ] call hexvar mov rcx , qword ptr [ rsp ] mov r9d , dword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + num ] mov byte ptr [ rcx + hexvar ] , num mov qword ptr [ rcx ] , r13 mov qword ptr [ rcx + hexvar ] , num jmp hexvar
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r12 push rbp mov ebp , esi push rbx mov rbx , rdi mov r12 , qword ptr [ rdi ] call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test byte ptr [ rdx ] , num jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp edx , ebp je hexvar mov ecx , ebp mov rdx , rax mov rsi , r12 mov rdi , rbx call hexvar cmp eax , - num je hexvar pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] pop rbx mov eax , dword ptr [ rax + num ] pop rbp pop r12 ret mov eax , hexvar jmp hexvar nop mov qword ptr [ rbx ] , r12 jmp hexvar
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rdx + num ] mov qword ptr [ rdi ] , rdx test eax , eax mov qword ptr [ rip + hexvar ] , rcx movzx esi , byte ptr [ rdx ] setne r9b test byte ptr [ r8 + rsi ] , num jne hexvar mov rax , rsi cmp sil , num jne hexvar test r9b , r9b jne hexvar cmp al , hexvar je hexvar mov rdi , rcx mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop word ptr cs : [ rax + rax ] test r9b , r9b je hexvar mov rcx , rdx lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rdx - num ] mov rdi , rdx mov rax , rsi movzx esi , byte ptr [ r8 + rsi ] test sil , num jne hexvar cmp al , num je hexvar and esi , num je hexvar lea rdi , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdi movzx eax , byte ptr [ rcx + num ] mov rcx , rdx mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num ret nop mov qword ptr [ rdi ] , rcx mov edx , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] cmp dl , hexvar jne hexvar test sil , sil je hexvar mov rcx , rdi lea rdi , [ rcx + num ] cmp dl , hexvar mov qword ptr [ rip + hexvar ] , rdi movzx edx , byte ptr [ rdi - num ] sete sil test dl , dl jne hexvar sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor eax , eax lea rcx , [ rdi - num ] mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rdi - num ] , num add rsp , num ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , edi je hexvar lea ecx , [ rdi - num ] push rbx mov ebx , edi cmp ecx , num jbe hexvar test eax , eax jne hexvar cmp edi , num jne hexvar pop rbx ret nop dword ptr [ rax + rax ] xor esi , esi cmp edi , num mov rdi , rdx sete sil add esi , num call hexvar mov edi , ebx xor esi , esi pop rbx jmp hexvar nop ret
,
lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar push rbx mov ecx , edx mov ebx , esi movsxd r9 , edi mov edx , num xor r8d , r8d mov esi , num mov edi , num sub rsp , num push num call hexvar mov byte ptr [ rax ] , bl pop rax pop rdx pop rbx ret nop dword ptr [ rax + rax ] mov ecx , edi mov rax , - num mov rsi , qword ptr [ rip + hexvar ] shl rax , cl mov rcx , rax lea rax , [ rsi - num ] sub rax , rcx and rax , rcx test edx , edx je hexvar mov rcx , rax movsxd rdx , edx sub rcx , rsi cmp rcx , rdx ja hexvar mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rbx , rax mov qword ptr [ rdx + hexvar ] , rbx pop rbx ret
test byte ptr [ rdi ] , num je hexvar mov eax , num mov rdx , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rdx je hexvar ret nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] shr al , num and eax , num ret
,
,
,
,
push rbp mov ebp , esi xor esi , esi push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rax ] cmp sil , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx esi , byte ptr [ rax + num ] mov rax , rdx lea rbp , [ rip + hexvar ] movzx edx , sil cmp byte ptr [ rbp + rdx ] , num je hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax - num ] cmp byte ptr [ rbp + rax ] , num je hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] movsx ebx , sil lea rsi , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar mov edx , num jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
,
test byte ptr [ rdi ] , num jne hexvar lea rax , [ rdi + hexvar ] ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar add rsp , num lea rax , [ rax + hexvar ] ret nop mov rdi , qword ptr [ rdi + hexvar ] lea rax , [ rdi + hexvar ] ret
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - num ] , num mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov ecx , dword ptr [ rbp - hexvar ] push rcx mov r9 , r8 mov r8 , rdi mov ecx , num mov rdi , rax call hexvar add rsp , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar movabs rdi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar movabs rdi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov rbx , rsi xor esi , esi sub rsp , hexvar call hexvar test eax , eax js hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbx mov r12d , eax xor eax , eax call hexvar mov r13d , eax call hexvar mov r14 , rax test r13d , r13d js hexvar mov rbp , rsp jmp hexvar nop dword ptr [ rax + rax ] movsxd rbx , eax mov rsi , rbp mov edi , r13d mov rdx , rbx call hexvar cmp rax , rbx jne hexvar mov edx , hexvar mov rsi , rbp mov edi , r12d call hexvar mov ebx , eax test eax , eax jg hexvar mov edi , r12d mov ebp , dword ptr [ r14 ] call hexvar mov edi , r13d call hexvar test ebx , ebx jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov ebx , dword ptr [ r14 ] mov edi , r12d call hexvar mov edi , r13d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , dword ptr [ rax ] mov edi , r12d call hexvar mov dword ptr [ r14 ] , ebx mov ebx , hexvar jmp hexvar mov dword ptr [ r14 ] , ebp mov ebx , hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx pop rbx mov rsi , rax xor eax , eax jmp hexvar
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rax + num ] , num jne hexvar mov qword ptr [ rax + hexvar ] , rsi mov eax , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num add rsp , num ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar xor eax , eax add rsp , num ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 xor eax , eax mov r13d , edx mov rdx , rsi push r12 mov r12 , rsi lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar lea rdi , [ rbx + hexvar ] mov r8d , r13d mov rdx , r12 mov rsi , rbp xor ecx , ecx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
