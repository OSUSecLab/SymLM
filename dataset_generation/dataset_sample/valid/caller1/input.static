,
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
,
,
,
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] bswap rax ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] rol ax , num movzx eax , ax ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi + num ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] bswap eax mov eax , eax ret nop mov edx , dword ptr [ rdi + num ] movzx eax , byte ptr [ rdi ] bswap edx shl rax , hexvar mov edx , edx or rax , rdx ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi ] mov edx , dword ptr [ rdi + num ] shl rax , hexvar shl rcx , hexvar or rax , rcx bswap edx mov edx , edx or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx ecx , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi + num ] shl rcx , hexvar shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rdi ] bswap edx mov edx , edx shl rcx , hexvar or rax , rcx or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
,
,
push rbp mov rbp , rdi push rbx sub rsp , num call hexvar lea rbx , [ rax + num ] mov rdi , rbx call hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rbp , rsi test rsi , rsi je hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov ebp , num mov ebx , num jmp hexvar mov rdi , rbx imul rdi , rbp call hexvar
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax mov edi , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax mov edi , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax mov edi , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov r9d , num mov r8 , rdx lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov r9d , num mov r8 , rcx lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , num mov esi , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] or eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rax ] , edx mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , num shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movzx eax , word ptr [ rbp - num ] and ax , hexvar cmp ax , hexvar sete al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - num ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax jne hexvar call hexvar call hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] setnp al mov edx , num pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] cmovne eax , edx movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar pxor xmm0 , xmm0 comisd xmm0 , xmmword ptr [ rbp - hexvar ] seta al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 comisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq xmm1 , qword ptr [ rip + hexvar ] xorpd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] add edx , num movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num sub rax , hexvar pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar xor qword ptr [ rbp - hexvar ] , rax sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al test rax , rax je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num add rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx shl rdx , num mov rdi , rdx call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num cmp qword ptr [ rbp - hexvar ] , num cmovg rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar setg al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rdi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx ] movsxd rdx , edx lea rsi , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + num ] mov rdx , rdi mov rdi , rcx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] neg eax cdqe cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sar rax , hexvar mov rdx , rax xor rdx , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] neg eax mov edx , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop pop rbp ret
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cqo mov rax , rdx xor rax , qword ptr [ rbp - hexvar ] sub rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar movzx eax , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar neg qword ptr [ rbp - hexvar ] jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shr rdx , cl mov rax , rdx and eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne al movzx edx , al mov rcx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax setg al movzx eax , al test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx nop leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov edi , num call rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] add rdx , num mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - num ] sub rdx , num mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num setne al movzx eax , al neg rax mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] and rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] shl rax , num sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax - num ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar rdx , cl mov rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax shl rdx , cl mov rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] and eax , hexvar mov eax , eax mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] shr al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] lea rsi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rdi , rcx call rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe sub rdx , rax mov rax , rdx mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and eax , hexvar mov rdx , - num mov ecx , eax shl rdx , cl mov rax , rdx and qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar bsf rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num sub rax , num shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] and eax , num mov esi , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + num ] mov edx , esi mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbx ] , eax nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] or rax , rdx test rax , rax sete al movzx eax , al sub qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax cmovge rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - num ] test rax , rax setne al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax - num ] movabs rdx , hexvar mov rax , rcx imul rdx sar rdx , num mov rax , rcx sar rax , hexvar sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] bsr rax , rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] xor eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + num ] test rax , rax cmovs rax , rdx sar rax , num mov rdx , rax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov eax , eax add rax , rdx add rax , hexvar pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] and eax , num mov esi , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + num ] mov edx , esi mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbx ] , eax nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jg hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] and eax , num mov esi , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + num ] mov edx , esi mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbx ] , eax nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rdx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - num ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num sar rax , num mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jg hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num and rax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar add rax , rax leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - num ] , rax cmovge rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx add rax , rax add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovle rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx cqo idiv rcx add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , num lea rcx , [ rax + rax ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num cqo idiv qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rax add rax , rdx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovge rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rax ] , num sub qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] shl rax , num add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] neg rax mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shr rax , num cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar mov byte ptr [ rbp - num ] , al mov edi , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar call hexvar call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar mov byte ptr [ rbp - num ] , al mov edi , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar call hexvar call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar call hexvar mov byte ptr [ rbp - num ] , al jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov byte ptr [ rbp - num ] , al and byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar call hexvar mov byte ptr [ rbp - num ] , al mov edi , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar call hexvar call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar or al , byte ptr [ rbp - num ] movzx eax , al test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num call hexvar or al , byte ptr [ rbp - num ] movzx eax , al test eax , eax setne al mov byte ptr [ rbp - num ] , al mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jge hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov edi , num call hexvar jmp hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] movsxd rdx , edx shl rdx , num sub rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num ja hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num jbe hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num ja hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , num jbe hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx movzx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9 , rcx mov r8 , rdx mov ecx , num mov edx , num mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov edi , num call hexvar
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar nop jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r9 , rdi lea r8 , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar test eax , eax jns hexvar call hexvar nop leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov edx , num mov esi , num call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
,
,
,
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
,
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rdi , rbx pop rbx mov esi , eax jmp hexvar
,
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
cmp qword ptr [ rip + hexvar ] , num push rbx je hexvar mov rbx , rsi xor esi , esi call hexvar test rax , rax je hexvar test rbx , rbx je hexvar mov rdx , rbx lea rsi , [ rip - hexvar ] mov rdi , rax pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax mov rdx , rbx xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + hexvar ] xor esi , esi call hexvar mov rdi , rcx test rcx , rcx jne hexvar pop rbx ret mov edi , num call hexvar
,
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar or dword ptr [ rdi + hexvar ] , hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx xor edx , edx call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar pop rbx ret mov edi , num call hexvar
push r15 push r14 mov r14d , edx push r13 push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi sub rsp , hexvar mov r13 , rsp mov rdx , r13 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r14d , r14d jne hexvar mov rdi , r12 call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] mov rsi , r13 mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r15 , rax call hexvar mov rdx , r15 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar test r14d , r14d je hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop xor eax , eax ret
push r13 mov r13d , r8d push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , rdx mov rdi , rbx sub rsp , num call hexvar test rax , rax je hexvar add rsp , num mov ecx , r13d mov edx , r12d mov rdi , rbp pop rbx lea r8 , [ rip - hexvar ] pop rbp mov rsi , rax pop r12 pop r13 jmp hexvar mov rdi , rbx call hexvar
,
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar jmp rax nop ret
,
,
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
,
,
,
push r14 push r13 push r12 push rbp mov rbp , rdi push rbx mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar lea rdi , [ rax + num ] call hexvar mov rsi , qword ptr [ rbp ] mov r13 , rax mov rdi , rax call hexvar mov rdi , r13 call hexvar test rax , rax je hexvar mov r12 , rax mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp + num ] mov rdi , r12 mov rsi , qword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov esi , num mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov eax , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rbx + hexvar ] not eax and edx , hexvar shr eax , hexvar shl eax , num or eax , edx mov byte ptr [ rbx + hexvar ] , al mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar or dword ptr [ rbx + hexvar ] , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar or dword ptr [ rbx + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar or byte ptr [ rbx + hexvar ] , num mov rsi , r14 mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , num mov rdi , rbp mov qword ptr [ rip + hexvar ] , num call hexvar xor edx , edx mov rsi , r13 mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar pop rbx mov rdi , r12 pop rbp pop r12 pop r13 pop r14 jmp hexvar nop dword ptr [ rax + rax ] test byte ptr [ rbp + hexvar ] , num je hexvar jmp hexvar mov rdi , r13 call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov edi , num call hexvar
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
mov rsi , rdi mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp xor edx , edx mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] cmp byte ptr [ rdx ] , num jne hexvar add rsp , hexvar pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
push r13 mov r13d , r8d push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , rdx mov rdi , rbx sub rsp , num call hexvar test rax , rax je hexvar add rsp , num mov ecx , r13d mov edx , r12d mov rdi , rbp pop rbx lea r8 , [ rip - hexvar ] pop rbp mov rsi , rax pop r12 pop r13 jmp hexvar mov rdi , rbx call hexvar
,
sub rsp , num call hexvar mov edi , num call hexvar
,
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov eax , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] not rax cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx cmp rax , rdx jae hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , num mov esi , num mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov esi , num mov edi , num mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov rbx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al add rax , rax add rax , rbx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov esi , num mov edi , num mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] push num push rbx mov r9 , r12 mov r8 , rcx mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] not rax cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx cmp rax , rdx jae hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al mov r8d , dword ptr [ rip + hexvar ] movsx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9d , r8d mov r8 , rdi mov edi , eax call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] or eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] push num push rbx mov r9 , r12 mov r8 , rcx mov rcx , rdx lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar nop lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push num mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jl hexvar mov eax , num leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , num mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - num ] , - num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , num sete al movzx eax , al test rax , rax je hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] cmp al , num jne hexvar cmp byte ptr [ rbp - num ] , hexvar jbe hexvar cmp byte ptr [ rbp - num ] , hexvar ja hexvar cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , - num jne hexvar movzx eax , byte ptr [ rbp - num ] sub eax , hexvar cdqe jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx add rax , rax mov rdx , rax movzx eax , byte ptr [ rbp - num ] add rax , rdx mov edx , hexvar cmp rax , hexvar cmovg rax , rdx sub rax , hexvar jmp hexvar mov rax , - num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rsi , ecx mov rcx , qword ptr [ rbp - hexvar ] add rcx , rsi shl rcx , num add rdx , rcx mov rdx , qword ptr [ rdx ] add rdx , num mov rsi , rax mov rdi , rdx call hexvar test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rbp - num ] add rdx , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea r9 , [ rip - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax mov edi , hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rcx mov edx , r8d mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , num mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , hexvar mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , num mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num or edx , num mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] add rax , hexvar and edx , hexvar mov byte ptr [ rax ] , dl mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
,
,
,
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
,
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
,
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
,
,
,
,
,
,
,
,
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
,
,
,
,
,
,
,
push r13 mov rax , rdi push r12 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi cmp byte ptr [ rdi ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rsi , rbx mov rdi , rax call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov rax , qword ptr [ rsp + num ] lea rdi , [ rsp + num ] mov r12 , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdi , qword ptr [ rsp + num ] mov r13d , eax call hexvar mov rbp , rax test rax , rax je hexvar mov rdi , rax call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar xor eax , eax mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , r13b mov qword ptr [ rip + hexvar ] , r12 add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdi , rbp call hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax js hexvar mov edx , dword ptr [ rip + hexvar ] cmp rax , rdx jae hexvar lea rdx , [ rax + rax * num ] lea rax , [ rip + hexvar ] lea rax , [ rax + rdx * num ] test byte ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rdx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
,
,
push r12 push rbp mov ebp , edi push rbx mov ebx , esi test edi , edi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , hexvar je hexvar jle hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar pop rbx pop rbp pop r12 ret nop cmp ebx , num jne hexvar pop rbx mov edi , ebp pop rbp pop r12 jmp hexvar mov edi , ebp call hexvar cmp ebx , hexvar je hexvar jg hexvar cmp ebx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov r12 , qword ptr [ rdx ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx pop rbx mov rdx , rax lea rdi , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r12 mov r12 , rdi push rbp push rbx mov rbp , qword ptr [ rax ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] xor esi , esi mov edi , ebx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp je hexvar mov esi , dword ptr [ rbp + hexvar ] mov rdi , r12 call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , ebx call hexvar jmp hexvar nop dword ptr [ rax ] add ebx , num shr eax , num test al , num je hexvar jmp hexvar nop dword ptr [ rax + rax ] pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
,
push rbp movsxd r9 , edi mov rbp , rsi mov edi , num push rbx mov rsi , rdx xor r8d , r8d mov rbx , rdx sub rsp , hexvar push num call hexvar add rsp , hexvar mov rdx , rbx mov rsi , rbp pop rbx mov rdi , rax pop rbp jmp hexvar
push rbx mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + hexvar ] sub rsp , num push qword ptr [ rsp + hexvar ] call hexvar pop rax mov rax , rbx pop rdx pop rbx ret
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push rbp mov rbp , rsi push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movdqu xmm0 , xmmword ptr [ rip + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rbx + hexvar ] , edi lea rdi , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , ecx mov qword ptr [ rbx + hexvar ] , r8 mov qword ptr [ rbx + hexvar ] , r9 mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , esi movups xmmword ptr [ rbx + hexvar ] , xmm0 call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax add rsp , num pop rbx pop rbp jmp hexvar
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
,
,
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx call hexvar mov rbp , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov rdx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx + num ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rbx , qword ptr [ rbx + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop mov rbx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rbx + num ] cmp qword ptr [ rcx + num ] , num je hexvar mov rdx , rax mov rax , rcx test byte ptr [ rbx ] , num je hexvar cmp rax , rdx je hexvar mov rsi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar test byte ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbx + num ] , rax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rsp + num ] call hexvar mov eax , dword ptr [ rsp + num ] mov r9 , rbx mov rdx , rbp lea rdi , [ rsp + num ] mov ecx , hexvar lea rsi , [ rip + hexvar ] lea r8d , [ rax + num ] xor eax , eax call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
xor edx , edx jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
,
,
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
,
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
,
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
,
,
,
push r12 push rbp push rbx sub rsp , hexvar cmp esi , num je hexvar jle hexvar cmp esi , num je hexvar cmp esi , num jne hexvar xor edx , edx mov rax , - num cmp dword ptr [ rip + hexvar ] , num mov rsi , rdi je hexvar nop word ptr [ rax + rax ] movabs rcx , hexvar test rdi , rcx je hexvar and rax , rsi mov rbx , rax mov rax , rdx and rax , rsi je hexvar cmp rax , rdx jne hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop cmp esi , num jne hexvar cmp dword ptr [ rip + hexvar ] , num mov rdx , - hexvar mov eax , hexvar mov rsi , rdi jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar movabs rcx , hexvar test rdi , rcx jne hexvar btc rdi , hexvar lea rsi , [ rdi - hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov rbp , rsp lea r12 , [ rsp + hexvar ] mov rdi , rbp call hexvar mov rsi , rbx mov rdi , r12 call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] movabs rdx , hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , - hexvar mov eax , hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
push rbp push rbx lea rbx , [ rip + hexvar ] sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] shr eax , num mov edi , dword ptr [ rbx + rax * num ] test edi , edi jne hexvar movabs rcx , hexvar lea rax , [ rsp + rax * num + num ] lea rdi , [ rsp + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rbp shr eax , num mov edi , edx mov dword ptr [ rbx + rax * num ] , edx mov esi , dword ptr [ rip + hexvar ] neg esi movsxd rsi , esi call hexvar movsxd rsi , dword ptr [ rip + hexvar ] mov edi , dword ptr [ rip + hexvar ] call hexvar add rsp , hexvar pop rbx pop rbp ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rsp + num ] call hexvar mov eax , dword ptr [ rsp + num ] mov r9 , rbx mov rdx , rbp lea rdi , [ rsp + num ] mov ecx , hexvar lea rsi , [ rip + hexvar ] lea r8d , [ rax + num ] xor eax , eax call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax + num ] , hexvar jne hexvar add rax , num mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar test byte ptr [ rsp + hexvar ] , num je hexvar mov rdx , rax test ebx , ebx je hexvar test rax , rax je hexvar test al , num jne hexvar xor eax , eax nop dword ptr [ rax ] shr rdx , num add eax , num test dl , num je hexvar cmp rdx , num jne hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar mov rax , - num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] lea rbx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rdx , rdi mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rcx , [ rsp + num ] lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
cmp qword ptr [ rip + hexvar ] , num je hexvar push rbp push rbx mov rbx , rdi sub rsp , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num test eax , eax je hexvar add rsp , num pop rbx pop rbp ret nop call hexvar jmp hexvar nop word ptr [ rax + rax ] ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar
,
,
,
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
,
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
,
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
,
,
,
sub rsp , num cmp dword ptr [ rip + hexvar ] , num jne hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
mov esi , num jmp hexvar
,
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
,
,
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
,
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
,
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
,
,
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
sub rsp , num mov esi , num call hexvar add rsp , num cdqe ret
,
,
,
lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
,
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov ecx , dword ptr [ rip + hexvar ] mov ebx , num mov ebp , eax shl ebx , cl cmp ebx , eax jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , ebx mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
,
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
,
,
,
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
,
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rsi + num ] call hexvar mov rsi , qword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , qword ptr [ rbx + num ] add rdi , qword ptr [ rbx ] call hexvar mov rax , qword ptr [ rbp + num ] add qword ptr [ rbx + num ] , rax add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r12 mov r12 , rdi push rbp push rbx mov rbp , qword ptr [ rax ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] xor esi , esi mov edi , ebx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp je hexvar mov esi , dword ptr [ rbp + hexvar ] mov rdi , r12 call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , ebx call hexvar jmp hexvar nop dword ptr [ rax ] add ebx , num shr eax , num test al , num je hexvar jmp hexvar nop dword ptr [ rax + rax ] pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
,
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
,
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov ebx , edi nop dword ptr [ rax + rax ] call hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rax ] test rdx , rdx je hexvar mov rcx , qword ptr [ rdx + num ] cmp dword ptr [ rcx + num ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , num je hexvar movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , ebx mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar pop rbx jmp hexvar nop lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
push rbx mov rbx , rdi call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push rbx mov rbx , rdi call hexvar mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
mov rax , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rax call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
push rbp push rbx sub rsp , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] add rax , num mov rsi , rsp xor edx , edx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] cmp byte ptr [ rsp + hexvar ] , num lea rsi , [ rdx + hexvar ] je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
,
push rbx mov rbx , rsi test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rdi , rax movdqu xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rdi + hexvar ] , rax pop rbx ret mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
,
,
,
,
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
,
,
push r13 mov r13 , rcx mov ecx , r8d push r12 mov r12d , esi xor esi , esi push rbp mov rbp , rdi push rbx mov ebx , edx mov edi , ebx sub rsp , num mov edx , dword ptr [ rip + hexvar ] call hexvar add rsp , num mov rcx , r13 mov edx , ebx mov esi , r12d pop rbx mov rdi , rbp mov r9d , eax pop rbp xor r8d , r8d pop r12 pop r13 jmp hexvar
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
push r13 mov r13 , rdx push r12 mov r12 , rdi push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] mov byte ptr [ rbx ] , al call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rdx , rbx jae hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov byte ptr [ rbx ] , num test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdx ] mov byte ptr [ r13 ] , dl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , num lea rdx , [ rip + hexvar ] sub rax , rdx mov byte ptr [ rbp + hexvar ] , num movabs rdx , hexvar sar rax , num imul rax , rdx mov qword ptr [ rbp + hexvar ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] lea rbx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] seta al sbb al , num xor r13d , r13d test al , al jne hexvar jmp hexvar nop dword ptr [ rax ] add rbx , hexvar mov rdi , qword ptr [ rbx - hexvar ] add r13d , num test rdi , rdi je hexvar mov rsi , r12 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ r13 + r13 * num ] mov byte ptr [ rbp + hexvar ] , num mov qword ptr [ rbp ] , num lea rdx , [ rax + rdx * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rbp + num ] , num movzx eax , word ptr [ rax + rdx * num + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov eax , num jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar nop mov rdi , rbp call hexvar mov eax , num jmp hexvar
,
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] cmp rax , rdi je hexvar cmp dword ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov ebp , r12d nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp rbx , rax je hexvar test rbx , rbx je hexvar add ebp , dword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] add ebp , eax mov rax , qword ptr [ rip + hexvar ] cmp rbx , rax jne hexvar call hexvar add ebp , eax cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp ebp , r12d jb hexvar mov eax , ebp pop rbx pop rbp sub eax , r12d pop r12 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add ebp , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r15 push r14 push r13 mov r13d , esi push r12 push rbp push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] test ecx , ecx je hexvar lea rcx , [ rip + hexvar ] movzx esi , dl cmp byte ptr [ rcx + rsi ] , num jne hexvar nop add rax , num movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num mov r14 , rdx je hexvar mov byte ptr [ rax ] , num mov rsi , qword ptr [ rip + hexvar ] mov r15 , rax movzx edx , byte ptr [ rsi ] mov rax , rsi cmp dl , hexvar je hexvar cmp byte ptr [ rcx + rdx ] , num jne hexvar test ebx , ebx je hexvar xor ebp , ebp mov r12 , rsp nop mov esi , ebx mov rdi , r12 call hexvar test r13d , r13d je hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov byte ptr [ rsp + hexvar ] , num mov edx , eax mov esi , ebx mov rdi , r12 add ebp , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , num je hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor r14d , r14d xor r15d , r15d lea rcx , [ rip + hexvar ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] jmp hexvar nop word ptr [ rax + rax ] movsx esi , r14b mov rdi , r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar and ebp , num je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov r14d , edx jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push r15 push r14 push r13 mov r13d , esi push r12 push rbp push rbx mov ebx , edi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] test ecx , ecx je hexvar lea rcx , [ rip + hexvar ] movzx esi , dl cmp byte ptr [ rcx + rsi ] , num jne hexvar nop add rax , num movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num mov r14 , rdx je hexvar mov byte ptr [ rax ] , num mov rsi , qword ptr [ rip + hexvar ] mov r15 , rax movzx edx , byte ptr [ rsi ] mov rax , rsi cmp dl , hexvar je hexvar cmp byte ptr [ rcx + rdx ] , num jne hexvar test ebx , ebx je hexvar xor ebp , ebp mov r12 , rsp nop mov esi , ebx mov rdi , r12 call hexvar test r13d , r13d je hexvar cmp byte ptr [ rsp + hexvar ] , num jne hexvar mov byte ptr [ rsp + hexvar ] , num mov edx , eax mov esi , ebx mov rdi , r12 add ebp , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , num je hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] xor r14d , r14d xor r15d , r15d lea rcx , [ rip + hexvar ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] jmp hexvar nop word ptr [ rax + rax ] movsx esi , r14b mov rdi , r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar and ebp , num je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov r14d , edx jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push r13 mov r13d , r8d push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8d , r13d mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax call hexvar mov rdx , rbp mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax call hexvar mov rdx , rbp mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
,
,
xor esi , esi jmp hexvar
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
,
mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] jmp hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rbx , rax mov rax , qword ptr [ rsi + num ] test byte ptr [ rsi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rsi call hexvar mov rsi , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
,
,
push r12 mov r12 , rdx push rbp mov rbp , rsi push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar call hexvar lea rsi , [ rbx + num ] mov r8 , rsp mov rdx , rbp lea r9 , [ rsp + num ] mov rcx , rax mov rdi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , r12 add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov rax , rdi sub rax , rdx cmp rax , hexvar jbe hexvar mov rcx , qword ptr [ rbx + hexvar ] add rdx , hexvar mov qword ptr [ rbx + hexvar ] , rdx cmp rdx , rcx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r10 , rdi lea rax , [ rdx + rsi ] not rsi mov rdx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r10 , rdx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rdx cmp rsi , r10 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdi mov rax , rdi mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , r12 mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rcx + num ] , rbp mov rdx , qword ptr [ rax ] mov qword ptr [ rcx ] , rdx mov qword ptr [ rax ] , rcx add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar
,
push r13 push r12 push rbp mov rbp , rdi mov edi , hexvar push rbx lea r12 , [ rbp * num ] sub rsp , num call hexvar mov rcx , qword ptr [ rip + hexvar ] movsxd rsi , dword ptr [ rip + hexvar ] xor edx , edx lea r13 , [ rax + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov rbx , rax mov rdi , r13 call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rax , rdx sub rax , rcx cmp r12 , rax ja hexvar mov rdi , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r9 , rdx lea rax , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r9 , rcx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rcx cmp rsi , r9 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdx mov rax , rdx mov rdx , r12 xor esi , esi mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rdi call hexvar mov dword ptr [ rbx + num ] , ebp add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r13 mov rsi , r12 call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
,
,
,
lea rdx , [ rip + hexvar ] mov rax , rsi cmp rsi , rdx je hexvar test byte ptr [ rsi + hexvar ] , hexvar jne hexvar sub rdx , hexvar cmp rsi , rdx jne hexvar ret nop word ptr [ rax + rax ] mov rsi , qword ptr [ rsi + hexvar ] add qword ptr [ rip + hexvar ] , rsi mov rdx , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax ] jmp hexvar
,
,
push rbp mov rbp , rsi xor eax , eax push rbx mov rbx , rdx mov rdx , rdi lea rdi , [ rip + hexvar ] sub rsp , num mov esi , dword ptr [ rip + hexvar ] call hexvar mov edi , dword ptr [ rip + hexvar ] mov rsi , rbp call hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rsi , rbx call hexvar add rsp , num mov edi , hexvar pop rbx pop rbp jmp hexvar
,
,
,
,
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
,
,
,
,
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
,
,
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx lea rdx , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
push rbp mov esi , num push rbx mov rbx , rdi sub rsp , hexvar call hexvar test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp ret nop lea rbp , [ rsp + num ] mov esi , num mov rdi , rbx mov rdx , rbp call hexvar test eax , eax jne hexvar call hexvar cmp eax , hexvar je hexvar mov rdx , rbp mov esi , num mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbx ] call hexvar call hexvar cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , rbx call hexvar mov edx , hexvar mov esi , num mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx ] call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar
,
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar pop rbx ret call hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rax call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar add rsp , hexvar ret
,
,
sub rsp , num call hexvar mov edi , num call hexvar
,
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov edx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov r8 , rcx mov ecx , edx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov ecx , num mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , esi mov esi , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe and rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rdx , cl mov rax , rdx or esi , eax mov edx , esi mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] lea ecx , [ rax + num ] mov dword ptr [ rip + hexvar ] , ecx cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov ecx , eax mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ebx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , ebx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edi , hexvar call hexvar mov eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , edx call rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov esi , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edi , ecx call rax mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar test al , al je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] jmp hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar add eax , num movsxd rbx , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov qword ptr [ rbp - hexvar ] , r9 mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , r8d mov qword ptr [ rbp - hexvar ] , r9 mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num leave ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rax , num mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] sub eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdx + num ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] call rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si edx , xmm0 mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar test al , al je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] jmp hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , edx mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] jmp hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edi , ecx call rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rdx , rax mov rax , rdx mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , esi mov esi , ecx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , rdx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , - num mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdi , rax call hexvar test al , al je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jbe hexvar movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov ecx , hexvar mov edx , hexvar lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rbp - num ] movzx eax , al mov dword ptr [ rip + hexvar ] , eax mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar xor eax , num test al , al je hexvar mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , ecx call hexvar xor eax , num test al , al je hexvar mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp eax , - num jne hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar jmp hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rax mov rdx , rbx mov edi , num mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cdqe imul rax , rdx mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe imul rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] test rax , rax cmovs rax , rdx sar rax , hexvar mov rdi , rax call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdq idiv ecx mov eax , edx test eax , eax jne hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - num ] , al je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , num leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - hexvar ] , num ja hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar nop jmp hexvar nop jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num nop leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar test eax , eax jns hexvar mov edi , num call hexvar mov edi , num call hexvar test eax , eax jns hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rbx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax jns hexvar mov edi , num call hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , hexvar jbe hexvar mov edi , num call hexvar
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rip + hexvar ] , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rax + hexvar ] subsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jbe hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar call hexvar nop leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov byte ptr [ rip + hexvar ] , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov r12 , rax mov ebx , dword ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov edx , ebx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov r12 , rax mov ebx , dword ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov edx , ebx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov r12 , rax mov ebx , dword ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov edx , ebx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , num call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movsd qword ptr [ rax + hexvar ] , xmm0 nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov byte ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx jmp rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov ecx , hexvar mov edx , hexvar lea rsi , [ rip - hexvar ] mov edi , eax call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add rax , num mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp push rbx sub rsp , num mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp eax , - num jne hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar nop pop rbp ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , num mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp add rsp , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp add rsp , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar cmp qword ptr [ rbp - hexvar ] , num js hexvar lea rcx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , rax je hexvar mov byte ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rsi , rcx lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov r12 , rax mov ebx , dword ptr [ rbp - hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov edx , ebx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cvtsi2sd xmm0 , eax call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar call hexvar movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - num ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar test al , al je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jp hexvar pxor xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov eax , num jmp hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov esi , num mov edi , hexvar call hexvar mov eax , num jmp hexvar lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax call hexvar mov esi , num mov edi , hexvar call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cvtsi2sd xmm0 , eax call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 jp hexvar pxor xmm1 , xmm1 ucomisd xmm0 , xmm1 je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar movsd xmm0 , qword ptr [ rip + hexvar ] call hexvar jmp hexvar call hexvar movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - num ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] call hexvar leave ret
push rbp mov rbp , rsp mov edi , hexvar call hexvar cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] add eax , hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rax + hexvar ] subsd xmm0 , xmm1 movapd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jbe hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] lea ebx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar add eax , ebx add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ebx , hexvar mov edx , num div rbx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , r12 mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov eax , num leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , eax lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] or eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al and eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al movzx eax , al add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al je hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rdi , rcx call rax test eax , eax jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne al leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rip + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar mov rsi , - num lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp eax , - num jne hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , num mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] not eax shr al , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar mov ebx , eax movzx eax , byte ptr [ rbp - hexvar ] movsx eax , al mov edi , eax call hexvar cmp ebx , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movzx eax , al and eax , num test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe lea rdx , [ rax + num ] mov eax , hexvar sub rax , num add rax , rdx mov ecx , hexvar mov edx , num div rcx imul rax , rax , hexvar sub rsp , rax mov rax , rsp add rax , hexvar shr rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al je hexvar add dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar sete al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rsi mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov edi , eax call hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rbp - num ] add rdx , hexvar mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , r12 mov rcx , rdx mov rdx , rbx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx cdqe mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , eax cdqe mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe cmp qword ptr [ rbp - num ] , rax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rcx mov r8 , rdi mov ecx , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - num ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] or eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax jle hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov ecx , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] push - num push qword ptr [ rbp - hexvar ] lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] push - num push rdx lea r9 , [ rip + hexvar ] mov r8d , num mov rcx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar add rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rdx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , hexvar mov edi , eax mov eax , num call hexvar test eax , eax jns hexvar mov eax , num jmp hexvar movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov r12 , qword ptr [ rax ] lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
,
,
,
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
,
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
,
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
,
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
,
,
,
,
,
,
,
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
push r12 mov r12 , rsi push rbp mov rbp , rdi mov edi , hexvar push rbx call hexvar movdqu xmm0 , xmmword ptr [ r12 ] movdqu xmm1 , xmmword ptr [ r12 + hexvar ] mov edx , num mov qword ptr [ rax + num ] , rbp mov esi , dword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax ] , num mov rdi , qword ptr [ rip + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 call hexvar cmp qword ptr [ r12 + hexvar ] , num mov rbp , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] xor edx , edx test rcx , rcx je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + num ] call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax ] , rbx mov qword ptr [ rbp + hexvar ] , rbx pop rbx pop rbp pop r12 ret
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
sub rsp , num call hexvar mov edi , hexvar mov dword ptr [ rax + num ] , hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + num ] , rcx mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax ] , rcx mov qword ptr [ rdx + hexvar ] , rax add rsp , num ret
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
push r15 mov r15d , r8d push r14 mov r14d , edx push r13 mov r13d , esi push r12 mov r12 , rdi push rbp mov ebp , r9d push rbx mov rbx , rcx sub rsp , num cmp byte ptr [ rcx + hexvar ] , hexvar ja hexvar movzx eax , byte ptr [ rcx + hexvar ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop xor r8d , r8d xor ecx , ecx mov r9 , qword ptr [ rbx + hexvar ] sub rsp , num mov edx , r14d mov esi , r13d mov rdi , r12 push num push rbp push r15 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov r8 , qword ptr [ rcx + num ] mov rcx , qword ptr [ rbx ] jmp hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rcx ] mov r9 , qword ptr [ rcx + hexvar ] xor ecx , ecx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rcx call hexvar mov byte ptr [ rbx + hexvar ] , num xor r8d , r8d mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov r9 , qword ptr [ rbx + hexvar ] xor r8d , r8d mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor r9d , r9d xor r8d , r8d xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar xor r9d , r9d xor r8d , r8d mov rcx , rax jmp hexvar nop word ptr cs : [ rax + rax ] xor r8d , r8d jmp hexvar
,
,
push r12 push rbp mov ebp , edi push rbx mov ebx , esi test edi , edi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rdx + hexvar ] and eax , hexvar cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar cmp ebx , hexvar je hexvar jle hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar xor edi , edi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar pop rbx pop rbp pop r12 ret nop cmp ebx , num jne hexvar pop rbx mov edi , ebp pop rbp pop r12 jmp hexvar mov edi , ebp call hexvar cmp ebx , hexvar je hexvar jg hexvar cmp ebx , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] mov r12 , qword ptr [ rdx ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r12 xor eax , eax call hexvar jmp hexvar
push rbx mov rsi , qword ptr [ rip + hexvar ] mov rbx , rdi call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
push rbp lea r8 , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rdi , r8 je hexvar mov eax , dword ptr [ rdi + hexvar ] and eax , hexvar cmp eax , num je hexvar test ebx , ebx je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test rsi , rsi je hexvar cmp edx , num jbe hexvar mov edi , ebx mov edx , edx call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , hexvar mov esi , ebx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test ebx , ebx jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , edx add rdx , rsi test rsi , rsi jne hexvar test ebx , ebx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar mov dword ptr [ rsp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov esi , ecx mov edi , ebx call hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop add rsi , num cmp byte ptr [ rsi - num ] , num jne hexvar cmp rsi , rdx jne hexvar xor edx , edx xor esi , esi test ebx , ebx je hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , ecx cmp rdi , r8 je hexvar mov rbp , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test edx , edx je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , byte ptr [ rsi ] mov edi , ebx mov edx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar mov edx , ecx xor esi , esi mov edi , ebx call hexvar jmp hexvar
push rbp lea r8 , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rdi , r8 je hexvar mov eax , dword ptr [ rdi + hexvar ] and eax , hexvar cmp eax , num je hexvar test ebx , ebx je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test rsi , rsi je hexvar cmp edx , num jbe hexvar mov edi , ebx mov edx , edx call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , hexvar mov esi , ebx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test ebx , ebx jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , edx add rdx , rsi test rsi , rsi jne hexvar test ebx , ebx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar mov dword ptr [ rsp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov esi , ecx mov edi , ebx call hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop add rsi , num cmp byte ptr [ rsi - num ] , num jne hexvar cmp rsi , rdx jne hexvar xor edx , edx xor esi , esi test ebx , ebx je hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , ecx cmp rdi , r8 je hexvar mov rbp , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test edx , edx je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , byte ptr [ rsi ] mov edi , ebx mov edx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar mov edx , ecx xor esi , esi mov edi , ebx call hexvar jmp hexvar
push rbp lea r8 , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rdi , r8 je hexvar mov eax , dword ptr [ rdi + hexvar ] and eax , hexvar cmp eax , num je hexvar test ebx , ebx je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test rsi , rsi je hexvar cmp edx , num jbe hexvar mov edi , ebx mov edx , edx call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , hexvar mov esi , ebx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test ebx , ebx jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , edx add rdx , rsi test rsi , rsi jne hexvar test ebx , ebx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar mov dword ptr [ rsp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov esi , ecx mov edi , ebx call hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop add rsi , num cmp byte ptr [ rsi - num ] , num jne hexvar cmp rsi , rdx jne hexvar xor edx , edx xor esi , esi test ebx , ebx je hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , ecx cmp rdi , r8 je hexvar mov rbp , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test edx , edx je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , byte ptr [ rsi ] mov edi , ebx mov edx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar mov edx , ecx xor esi , esi mov edi , ebx call hexvar jmp hexvar
,
,
sub rsp , hexvar mov ecx , esi movsxd r9 , edi xor r8d , r8d push num mov edx , num mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rax ] , num add rsp , hexvar ret
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
,
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar lea rdx , [ rip + hexvar ] mov ecx , hexvar pxor xmm0 , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rdi , rdx xor eax , eax rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 add rsp , num ret
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
push r15 mov r15d , ecx push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp ] mov rbx , qword ptr [ rip + hexvar ] mov r10d , dword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea rdi , [ rbx + hexvar ] lea rcx , [ r12 + rbp ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , r10d mov dword ptr [ rbx + hexvar ] , r15d mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , rax call hexvar mov rdi , rbp mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , hexvar mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov edx , num mov esi , hexvar mov rdi , rax mov rbx , rax call hexvar test eax , eax jne hexvar test ebp , ebp jne hexvar call hexvar mov rdi , rbx call hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
,
,
push rbp mov ebp , edi mov rdi , rsi push rbx sub rsp , hexvar lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rsp mov rsi , rbx call hexvar test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rsp ] test rsi , rsi je hexvar lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , num mov byte ptr [ rax ] , bpl mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar mov eax , num pop rbx pop rbp ret
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
,
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
,
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
,
,
,
,
,
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea rdx , [ rbp + hexvar ] lea r9 , [ rsp + num ] mov rdi , qword ptr [ rip + hexvar ] mov r8 , r14 call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea rdx , [ rbp + hexvar ] lea r9 , [ rsp + num ] mov rdi , qword ptr [ rip + hexvar ] mov r8 , r14 call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx xor esi , esi xor edi , edi call hexvar add rsp , hexvar pop rbx ret
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea r12 , [ rsp + hexvar ] mov ebp , esi mov rbx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdi , r12 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , r12 mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx mov rbx , rdx call hexvar test rbp , rbp je hexvar mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov r8d , r12d mov rcx , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar mov edi , num call hexvar xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ecx , r12d mov rdx , rbp mov rsi , rax xor eax , eax call hexvar jmp hexvar test rbx , rbx je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar lea rbx , [ rip + hexvar ] jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi lea r13 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , ebp call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor ebp , ebp cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , ebp call hexvar jmp hexvar nop call hexvar mov rdi , qword ptr [ rip + hexvar ] mov ebp , eax test eax , eax je hexvar mov ebp , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] test ebp , ebp jne hexvar cmp rdi , r13 je hexvar mov ebp , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop word ptr cs : [ rax + rax ] shr eax , num add edx , num test al , num je hexvar cmp ebp , edx cmovl ebp , edx jmp hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rbx , rax test rsi , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rip + hexvar ] je hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar lea rbp , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax jne hexvar mov edi , hexvar call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov edx , hexvar mov rbx , rax mov rdi , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , rbp call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r9 , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov rbx , rax mov rdi , rax xor eax , eax mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rbx , rax test rsi , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , dword ptr [ rip + hexvar ] je hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , eax call hexvar test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar lea rbp , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov rdi , rbp xor eax , eax lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] add dword ptr [ rip + hexvar ] , num test eax , eax jne hexvar mov edi , hexvar call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov edx , hexvar mov rbx , rax mov rdi , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , rbp call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rax + hexvar ] call hexvar mov r9 , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov r8 , rbp mov rbx , rax mov rdi , rax xor eax , eax mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar mov rbp , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax test rbp , rbp je hexvar mov rsi , rbx mov rdi , rbp call hexvar test eax , eax je hexvar mov rdi , rbx xor edx , edx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13 , rax test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , r13 mov rdx , r13 mov rsi , rbx mov edi , r12d call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13 , qword ptr [ rip + hexvar ] mov rbx , rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
,
,
,
sub rsp , num mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num ret
,
push rbp push rbx sub rsp , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] add rax , num mov rsi , rsp xor edx , edx xor edi , edi mov qword ptr [ rip + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] cmp byte ptr [ rsp + hexvar ] , num lea rsi , [ rdx + hexvar ] je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar sub rsp , num mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] add rax , num mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num jmp hexvar nop dword ptr [ rax + rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rax , num mov esi , num mov qword ptr [ rip + hexvar ] , rax call hexvar add rsp , num jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar
,
,
push rbp push rbx sub rsp , num mov rdx , qword ptr [ rip + hexvar ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar cmp al , num jne hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movzx edx , byte ptr [ rax ] mov rbx , rax add rax , num cmp dl , hexvar je hexvar cmp dl , num je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar movzx eax , byte ptr [ rbx ] lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop dword ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num jmp hexvar nop dword ptr [ rax ] xor ebp , ebp xor ebx , ebx test esi , esi mov eax , esi sete dl movzx edx , dl cmovns eax , edx mov esi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] test esi , esi jns hexvar cmp al , hexvar jne hexvar lea rbx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rbx movzx eax , byte ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] call hexvar add rsp , num movsx esi , bpl mov rdi , rbx pop rbx pop rbp jmp hexvar
,
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
,
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rbp , rsp mov rdi , rbp call hexvar mov rbx , rax lea rax , [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx cmp byte ptr [ rcx ] , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov rdi , rbp call hexvar mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov rbx , rax cmp byte ptr [ rcx ] , hexvar jne hexvar add rcx , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rcx call hexvar mov rdx , rax jmp hexvar
,
,
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
sub rsp , num xor esi , esi call hexvar add rsp , num cdqe ret
,
,
,
add edi , edi lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
,
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar sub rsp , num mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num jmp hexvar nop dword ptr [ rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] add rax , num mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num jmp hexvar nop dword ptr [ rax + rax ] add rax , num xor edi , edi mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rax , num mov esi , num mov qword ptr [ rip + hexvar ] , rax call hexvar add rsp , num jmp hexvar
,
,
,
,
,
,
,
lea rdi , [ rip + hexvar ] jmp hexvar
sub rsp , hexvar mov rdi , rsp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar call hexvar add rsp , hexvar ret
,
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
,
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r15 push r14 mov r14 , r9 push r13 mov r13 , rdi push r12 mov r12d , r8d push rbp mov rbp , rdx lea rdx , [ rsi + num ] push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx mov rcx , rbp call hexvar cmp rax , qword ptr [ rbx + num ] mov r15 , rax mov eax , dword ptr [ rip + hexvar ] jae hexvar mov rcx , qword ptr [ rbx ] movsx ecx , byte ptr [ rcx + r15 ] cmp r12d , ecx je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret lea rsi , [ rax + hexvar ] mov rdi , r14 call hexvar jmp hexvar nop cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rax call hexvar test rax , rax jne hexvar nop word ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax ] cmp r12d , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rsi , rbp mov rdi , r14 call hexvar cmp r13 , r15 je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax + r15 - num ] , hexvar jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar test eax , eax je hexvar cmp r12d , hexvar sete cl test eax , eax je hexvar test cl , cl je hexvar add r15 , num jmp hexvar nop mov rdi , r14 mov esi , hexvar call hexvar mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 mov r13d , edi push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor esi , esi mov r12 , rax call hexvar mov rdi , rbp mov rsi , rax sub rsi , qword ptr [ rip + hexvar ] mov rbx , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rdi , rbp sub rdx , rsi call hexvar mov qword ptr [ rip + hexvar ] , rbx lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar xor esi , esi mov rcx , rbx mov rdx , rbp lea r8 , [ rip - hexvar ] mov edi , r13d call hexvar test rax , rax je hexvar mov esi , dword ptr [ rsp + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov rdi , r12 xor eax , eax call hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , rbx call hexvar mov rdi , rbx call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
push rbp lea r8 , [ rip + hexvar ] push rbx mov ebx , edi sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rdi , r8 je hexvar mov eax , dword ptr [ rdi + hexvar ] and eax , hexvar cmp eax , num je hexvar test ebx , ebx je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar test rsi , rsi je hexvar cmp edx , num jbe hexvar mov edi , ebx mov edx , edx call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , hexvar mov esi , ebx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test ebx , ebx jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , edx add rdx , rsi test rsi , rsi jne hexvar test ebx , ebx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi jne hexvar mov dword ptr [ rsp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ rsp + hexvar ] test eax , eax je hexvar mov esi , ecx mov edi , ebx call hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop add rsi , num cmp byte ptr [ rsi - num ] , num jne hexvar cmp rsi , rdx jne hexvar xor edx , edx xor esi , esi test ebx , ebx je hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , ecx cmp rdi , r8 je hexvar mov rbp , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rdi , rax mov rsi , rbp xor eax , eax call hexvar test ebx , ebx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] test edx , edx je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , byte ptr [ rsi ] mov edi , ebx mov edx , ecx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar mov edx , ecx xor esi , esi mov edi , ebx call hexvar jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
,
push r13 mov r13 , rsi push r12 push rbp mov rbp , rdi mov rdi , rsi push rbx sub rsp , num call hexvar mov rdi , rbp mov r12 , rax call hexvar mov rdx , qword ptr [ r12 + num ] mov rbx , rax test rdx , rdx je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar movdqu xmm0 , xmmword ptr [ rdx ] movups xmmword ptr [ rax ] , xmm0 movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r13 call hexvar mov rdi , rbp mov rbx , rax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdi , r13 movzx ebx , byte ptr [ rax + hexvar ] call hexvar mov rdi , rbp and ebx , num mov r12d , ebx movzx ebx , byte ptr [ rax + hexvar ] call hexvar and ebx , hexvar or ebx , r12d mov byte ptr [ rax + hexvar ] , bl add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdx , qword ptr [ r12 + num ] jmp hexvar
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rsi call hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
,
,
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rdi + num ] mov rbx , qword ptr [ rdi + hexvar ] add rbx , qword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp + num ] add rbx , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push rbp push rbx sub rsp , num nop word ptr cs : [ rax + rax ] call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rbx movzx ebp , byte ptr [ rax ] call hexvar mov rdi , rbx call hexvar mov dword ptr [ rax ] , num cmp bpl , hexvar je hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar add rsp , num pop rbx pop rbp jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
push rbp push rbx sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rsi , qword ptr [ rdi + num ] cmp rsi , qword ptr [ rip + hexvar ] mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] je hexvar mov rdx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rbp add qword ptr [ rip + hexvar ] , num call hexvar mov rbp , rax test byte ptr [ rbx ] , num jne hexvar or byte ptr [ rbp ] , hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] or byte ptr [ rax ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbx mov rbx , rdi sub rsp , hexvar test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rbx , rax mov rax , qword ptr [ rsi + num ] test byte ptr [ rsi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rsi call hexvar mov rsi , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi call hexvar mov rsi , qword ptr [ rbx + num ] mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar mov edx , num mov rdi , rbp call hexvar mov r9d , dword ptr [ rbx + hexvar ] cmp r9d , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , r12 mov edi , num pop rbx pop rbp pop r12 mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop mov rsi , rbp mov r8d , dword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov edx , num mov rdi , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] sub rsi , rax call hexvar or byte ptr [ rax ] , hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop word ptr cs : [ rax + rax ] mov edx , num mov rdi , rbp call hexvar jmp hexvar
push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi call hexvar mov rsi , qword ptr [ rbx + num ] mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar mov edx , num mov rdi , rbp call hexvar mov r9d , dword ptr [ rbx + hexvar ] cmp r9d , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , r12 mov edi , num pop rbx pop rbp pop r12 mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop mov rsi , rbp mov r8d , dword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov edx , num mov rdi , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] sub rsi , rax call hexvar or byte ptr [ rax ] , hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop word ptr cs : [ rax + rax ] mov edx , num mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov r12d , dword ptr [ rip + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar lea rdx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rsi + num ] mov rsi , rdx cmp al , hexvar jne hexvar lea rbx , [ rsi + num ] mov qword ptr [ rip + hexvar ] , rbx nop dword ptr [ rax + rax ] call hexvar cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rip + hexvar ] xor esi , esi lea rdi , [ rip + hexvar ] movzx edx , byte ptr [ rax ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl call hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , hexvar mov r13 , rax mov rsi , rax call hexvar mov esi , num mov rdi , r13 call hexvar mov rdi , rbx call hexvar mov edi , num lea r13d , [ rax + num ] call hexvar mov rsi , r13 mov edx , num mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num xor esi , esi mov rdi , rax call hexvar mov edi , num call hexvar mov edx , num mov esi , num mov rdi , rax call hexvar mov rdi , r13 call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax call hexvar xor edx , edx xor esi , esi mov edi , num call hexvar mov esi , r12d mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
,
,
push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi call hexvar mov rsi , qword ptr [ rbx + num ] mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar mov edx , num mov rdi , rbp call hexvar mov r9d , dword ptr [ rbx + hexvar ] cmp r9d , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , r12 mov edi , num pop rbx pop rbp pop r12 mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop mov rsi , rbp mov r8d , dword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov edx , num mov rdi , qword ptr [ rip + hexvar ] lea rax , [ rdi + hexvar ] sub rsi , rax call hexvar or byte ptr [ rax ] , hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop word ptr cs : [ rax + rax ] mov edx , num mov rdi , rbp call hexvar jmp hexvar
,
push r13 push r12 mov r12 , rdi movzx edi , sil push rbp mov ebp , edx push rbx mov ebx , esi sub rsp , num call hexvar cmp ebx , hexvar je hexvar mov r13d , eax test ebp , ebp jne hexvar and ebx , hexvar mov esi , r13d mov rdi , r12 cmp ebx , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr cs : [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov edi , ebx call hexvar jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
,
push r13 mov r13 , r8 push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8 , r13 mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num jmp hexvar
,
push rbx mov edi , num sub rsp , hexvar call hexvar mov rbx , rsp xor edi , edi mov edx , num mov rsi , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar call hexvar add rsp , hexvar pop rbx ret add rax , num xor edi , edi lea rsi , [ rsp + hexvar ] mov edx , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar sub rsp , num xor r9d , r9d xor ecx , ecx push num mov r8 , rax mov edx , num mov esi , num mov edi , num call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov byte ptr [ rax ] , dl pop rax pop rdx call hexvar add rsp , hexvar pop rbx ret cmp qword ptr [ rsp + hexvar ] , num jns hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
,
,
,
,
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] call hexvar mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax call rbx mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
,
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num jmp hexvar
,
,
push rbx mov rbx , rdi sub rsp , hexvar test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rbx , rax mov rax , qword ptr [ rsi + num ] test byte ptr [ rsi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rsi call hexvar mov rsi , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rdx , [ rbx + rcx ] not rcx and rdx , rcx mov rcx , qword ptr [ rip + hexvar ] mov rdi , rdx mov qword ptr [ rip + hexvar ] , rdx mov rbx , rcx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdx , rcx mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r13 push r12 push rbp mov rbp , rdi mov edi , hexvar push rbx lea r12 , [ rbp * num ] sub rsp , num call hexvar mov rcx , qword ptr [ rip + hexvar ] movsxd rsi , dword ptr [ rip + hexvar ] xor edx , edx lea r13 , [ rax + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov rbx , rax mov rdi , r13 call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rax , rdx sub rax , rcx cmp r12 , rax ja hexvar mov rdi , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov r9 , rdx lea rax , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rbx + hexvar ] and rax , rsi mov rsi , rax sub r9 , rcx mov qword ptr [ rbx + hexvar ] , rax sub rsi , rcx cmp rsi , r9 jbe hexvar mov qword ptr [ rbx + hexvar ] , rdx mov rax , rdx mov rdx , r12 xor esi , esi mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rdi call hexvar mov dword ptr [ rbx + num ] , ebp add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r13 mov rsi , r12 call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] add rcx , r12 mov qword ptr [ rbx + hexvar ] , rcx cmp rcx , rdi jne hexvar or byte ptr [ rbx + hexvar ] , num jmp hexvar
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov qword ptr [ rbp - hexvar ] , rsi mov word ptr [ rbp - hexvar ] , ax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , word ptr [ rbp - hexvar ] mov edi , eax call hexvar mov word ptr [ rbp - hexvar ] , ax movzx edx , word ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , dx nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2ss xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2ss xmm0 , rdx addss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rax + num ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jae hexvar movss xmm0 , dword ptr [ rbp - num ] cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar test rcx , rcx je hexvar mov eax , num test rdx , rdx jns hexvar mov eax , num and eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov r8 , rdx lea rdx , [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov eax , hexvar cdqe mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rsp + hexvar ] , rax jbe hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num jmp hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar cmp qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov eax , num add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov eax , hexvar cdqe cmp qword ptr [ rsp + hexvar ] , rax jae hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar mov eax , num add rsp , hexvar ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov rdx , rsi mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov rdx , rsi mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , hexvar jmp hexvar call hexvar mov eax , num leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rsi , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rsi mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar call hexvar mov esi , dword ptr [ rax ] jmp hexvar mov esi , num cmp dword ptr [ rbp + hexvar ] , num je hexvar mov eax , dword ptr [ rbp + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx lea rdx , [ rip + hexvar ] mov edi , eax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovbe rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovbe rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , num jmp hexvar lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rax , qword ptr [ rdx + rax ] mov rdi , rax call hexvar mov rsi , rax mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip ] mov rcx , qword ptr [ rdx + rax ] lea rax , [ rsp + hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rsp + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rip ] add rax , rdx lea rdx , [ rax + num ] mov ecx , dword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov r9d , ecx lea r8 , [ rip ] mov ecx , hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar add dword ptr [ rsp + hexvar ] , num cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
,
,
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] sub eax , num and eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar nop jmp hexvar nop jmp hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rbp + rax * num - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp + rax * num - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rax , qword ptr [ rbp + rax * num - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov rdx , rax mov esi , num mov rdi , rcx call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar lea rsi , [ rip ] lea rdi , [ rip ] call hexvar mov qword ptr [ rsp + hexvar ] , num jmp hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ rsp + hexvar ] jb hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar cmp qword ptr [ rsp + hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rdx jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar ret
,
,
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
,
,
,
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop word ptr [ rax + rax ] mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , hexvar mov byte ptr [ rdi + num ] , al mov rax , rsi shr rax , num mov byte ptr [ rdi + num ] , al mov byte ptr [ rdi ] , sil ret push rbx lea rsi , [ rip + hexvar ] mov ebx , edx xor edi , edi mov edx , num call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
,
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
push rbx test rsi , rsi mov rbx , rsi mov eax , num cmove rbx , rax test rdi , rdi je hexvar mov rsi , rbx call hexvar test rax , rax je hexvar pop rbx ret nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
,
,
,
,
,
,
,
,
push rbp mov edx , num mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi sub rsp , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx sub rsi , rbx call hexvar mov rsi , rbp lea rdi , [ rbx + rax ] call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
,
mov ecx , esi test esi , esi jne hexvar mov rax , rdx ret nop word ptr [ rax + rax ] mov rsi , rdi mov edi , ecx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , edi push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar test edi , edi jle hexvar mov esi , edi xor eax , eax lea rdi , [ rip + hexvar ] call hexvar cmp rbx , rbp jae hexvar and r12d , num jne hexvar mov rdi , rbx lea rsi , [ rsp + hexvar ] xor edx , edx mov rcx , rbp call hexvar mov edx , dword ptr [ rsp + hexvar ] lea rdi , [ rip + hexvar ] mov rsi , rax add rbx , rdx mov rdx , rax xor eax , eax call hexvar cmp rbx , rbp ja hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov r12 , rbp mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar sub r12 , rbx sub r12 , num call hexvar test r12 , r12 jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , rbp call hexvar mov rdi , rax xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov edi , r12d call hexvar mov rdi , rbx mov rsi , r12 call hexvar lea rbx , [ rbx + rax + num ] jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar
,
,
,
,
,
,
,
,
,
,
push rbx mov ecx , esi mov rbx , rdi and ecx , hexvar sub rsp , hexvar and esi , hexvar je hexvar mov rdx , rsp mov eax , hexvar xor r8d , r8d mov rdi , rdx test cl , num je hexvar mov rsi , rdi test r8d , r8d je hexvar mov byte ptr [ rdi ] , hexvar add rsi , num mov byte ptr [ rsi ] , hexvar lea rdi , [ rsi + num ] mov r8d , num mov byte ptr [ rsi + num ] , al add eax , num shr ecx , num cmp al , hexvar jne hexvar mov byte ptr [ rdi ] , num lea rsi , [ rip + hexvar ] xor eax , eax lea rdi , [ rip + hexvar ] call hexvar add rsp , hexvar mov rax , rbx pop rbx ret nop dword ptr [ rax ] mov r10 , rsp mov esi , ecx mov rdi , r10 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] xor eax , eax mov rdx , r10 call hexvar add rsp , hexvar mov rax , rbx pop rbx ret
push rbx and esi , hexvar mov rbx , rdi sub rsp , hexvar mov r8 , rsp mov rdi , r8 call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] xor eax , eax mov rdx , r8 call hexvar add rsp , hexvar mov rax , rbx pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov ebx , esi call hexvar test eax , eax je hexvar mov r8d , dword ptr [ rip + hexvar ] test r8d , r8d je hexvar mov rax , qword ptr [ rip + hexvar ] cmp ebx , dword ptr [ rax ] je hexvar lea rcx , [ rax + num ] xor edx , edx jmp hexvar nop dword ptr [ rax + rax ] mov rsi , rcx add rcx , num cmp dword ptr [ rcx - num ] , ebx je hexvar mov edx , edi lea edi , [ rdx + num ] cmp edi , r8d jne hexvar xor eax , eax pop rbx ret nop word ptr [ rax + rax ] mov ecx , edx mov edi , dword ptr [ rax + rcx * num ] test edi , edi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ rdx - num ] mov rcx , rsi mov esi , dword ptr [ rax + rsi * num ] test esi , esi je hexvar mov edx , ecx test edx , edx jne hexvar jmp hexvar nop dword ptr [ rax ] lea rax , [ rax + rdx * num ] pop rbx ret mov rax , rsi pop rbx ret
,
,
,
,
,
,
,
,
,
,
,
,
push r12 push rbp push rbx xor ebx , ebx call hexvar nop dword ptr [ rax + rax ] mov edi , ebx add ebx , num call hexvar cmp ebx , hexvar jne hexvar mov r12 , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num cmp eax , - num ja hexvar lea rdx , [ rax + rax * num ] lea rbx , [ r12 + hexvar ] lea rax , [ rax + rdx * num ] lea rbp , [ r12 + rax * num + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar add rbx , hexvar cmp rbx , rbp je hexvar mov edx , dword ptr [ rbx + hexvar ] test edx , edx jne hexvar mov rdi , qword ptr [ rbx ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] add rbx , hexvar call hexvar cmp rbx , rbp jne hexvar mov rdi , r12 call hexvar mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , num pop rbx pop rbp pop r12 ret
mov r9 , qword ptr [ rsi ] cmp r9 , rdx jbe hexvar mov eax , num ret nop push r14 mov r14 , rdx push r13 mov r13 , rdi mov rdi , r9 push r12 mov r12 , rsi push rbp mov rbp , r8 push rbx mov rbx , rcx mov rcx , rdx xor edx , edx sub rsp , hexvar lea rsi , [ rsp + hexvar ] call hexvar mov edx , dword ptr [ rsp + hexvar ] add rdx , qword ptr [ r12 ] mov qword ptr [ r12 ] , rdx cmp rdx , r14 ja hexvar add rax , rbx mov qword ptr [ r13 ] , rax cmp rax , rbp jb hexvar jmp hexvar nop dword ptr [ rax ] sub edx , hexvar cmp dl , hexvar ja hexvar add rax , num cmp rbp , rax je hexvar movzx edx , byte ptr [ rax ] test dl , dl jne hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop word ptr [ rax + rax ] add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
,
sub rsp , num mov edx , esi mov rsi , rdi xor edi , edi call hexvar lea rdi , [ rip + hexvar ] add rsp , num mov rsi , rax xor eax , eax jmp hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx xor r8d , r8d pop rbx xor ecx , ecx mov rdx , rax pop rbp jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
,
,
,
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 lea rax , [ rip - hexvar ] lea r13 , [ rdi + num ] push r12 mov r12 , rsi mov esi , num push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , r13 call hexvar mov rdi , rbx mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar mov rdi , r13 mov esi , num mov qword ptr [ r12 ] , rax call hexvar mov qword ptr [ rbp ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
push r13 xor eax , eax mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdi lea rdi , [ rip + hexvar ] push rbx mov rbx , rdx sub rsp , num call hexvar mov esi , num mov rdi , rbx call hexvar mov edi , hexvar call hexvar lea rax , [ r12 + hexvar ] cmp rax , rbx jbe hexvar mov esi , ebx lea rdi , [ rip + hexvar ] xor eax , eax sub esi , r12d sub esi , hexvar call hexvar mov edi , hexvar call hexvar test rbp , rbp je hexvar mov rax , rbx mov edx , dword ptr [ rip + hexvar ] sub rax , r12 lea rdi , [ rbp + rax ] test edx , edx jne hexvar lea rax , [ rbp + rax + num ] cmp r13 , rax jb hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num call rax mov esi , num mov rdi , rax call hexvar cmp dword ptr [ rip + hexvar ] , num sbb rax , rax and eax , num lea rax , [ rax + rbx + num ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] lea rax , [ rbp + rax + num ] cmp r13 , rax jb hexvar mov rax , qword ptr [ rip + hexvar ] mov esi , num jmp hexvar lea rdi , [ rip + hexvar ] xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov edi , hexvar call hexvar test rbp , rbp jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , num lea rdi , [ rip + hexvar ] sbb esi , esi mov rdx , rax xor eax , eax and esi , num add esi , num call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , num lea rdi , [ rip + hexvar ] sbb esi , esi mov rdx , rax xor eax , eax and esi , num add esi , num call hexvar mov rax , - num jmp hexvar
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , word ptr [ rdi ] ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , num shl rdx , hexvar or rax , rdx movzx edx , byte ptr [ rdi ] or rax , rdx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rdi ] ret nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rdi + num ] mov edx , dword ptr [ rdi ] shl rax , hexvar or rax , rdx ret nop movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx ret nop dword ptr [ rax ] movzx eax , byte ptr [ rdi + num ] movzx edx , byte ptr [ rdi + num ] shl rax , hexvar shl rdx , hexvar or rax , rdx mov edx , dword ptr [ rdi ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rdx , hexvar or rax , rdx ret push rbx mov edx , num mov ebx , esi xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov esi , ebx mov rdi , rax xor eax , eax call hexvar call hexvar
,
,
,
,
,
,
,
,
push r15 mov r15 , rdi push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp push rbx sub rsp , num call hexvar cmp byte ptr [ r13 ] , hexvar je hexvar cmp r15 , rax je hexvar sub rax , r15 lea r14 , [ rax + r12 ] mov rbx , rax lea rdi , [ r14 + num ] cmp rax , rdi ja hexvar cmp r12 , rdi ja hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , rbx mov rsi , r15 mov rdi , rax call hexvar lea rdi , [ rbp + rbx ] mov rdx , r12 mov rsi , r13 call hexvar mov byte ptr [ rbp + r14 ] , num add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdi , r12 xor ebp , ebp add rdi , num je hexvar call hexvar mov rbp , rax test rax , rax je hexvar mov rdx , r12 mov rsi , r13 mov rdi , rax call hexvar mov byte ptr [ rbp + r12 ] , num jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebp , ebp call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
push rbp push rbx mov rbx , rdi xor edi , edi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar call hexvar sub rax , rbp mov r9 , rax mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] mov r8 , rbx lea rcx , [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] cmp byte ptr [ rdx ] , num cmove rcx , rax xor eax , eax call hexvar mov edi , num call hexvar call hexvar lea rdx , [ rip + hexvar ] sub rax , rdx mov r9 , rax jmp hexvar
push r12 xor eax , eax push rbp push rbx mov ebx , dword ptr [ rdi + hexvar ] cmp ebx , esi ja hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , esi jb hexvar lea eax , [ rsi + num ] mov dword ptr [ rdi + hexvar ] , eax test eax , eax je hexvar mov r12d , esi mov rbp , rdi cmp eax , hexvar ja hexvar mov esi , eax mov rdi , qword ptr [ rdi + hexvar ] add rsi , rsi call hexvar mov esi , dword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp + hexvar ] , rax shl rsi , num call hexvar mov rcx , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp + hexvar ] , rax test rcx , rcx je hexvar cmp ebx , dword ptr [ rbp + hexvar ] jae hexvar nop word ptr [ rax + rax ] mov edx , ebx mov esi , hexvar add ebx , num mov word ptr [ rcx + rdx * num ] , si mov dword ptr [ rax + rdx * num ] , num cmp dword ptr [ rbp + hexvar ] , ebx ja hexvar mov eax , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov esi , r12d mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rbp + hexvar ] , num pop rbx mov eax , hexvar pop rbp pop r12 ret nop dword ptr [ rax ] mov ebx , dword ptr [ rbp + hexvar ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov esi , ebx jmp hexvar
mov rax , - num xor edx , edx div rsi cmp rax , rdi jbe hexvar jmp hexvar push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edi , num call hexvar
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
test rdi , rdi push rbx mov eax , num mov rbx , rdi cmove rbx , rax mov rdi , rbx call hexvar test rax , rax je hexvar pop rbx ret mov rdi , rbx call hexvar
,
push r12 push rbp push rbx test rdi , rdi je hexvar cmp qword ptr [ rdi ] , num mov rbp , rdi je hexvar mov eax , num nop dword ptr [ rax + rax ] mov ecx , eax add rax , num cmp qword ptr [ rbp + rax * num - num ] , num jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar mov rdi , qword ptr [ rbp ] mov r12 , rax test rdi , rdi je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar mov qword ptr [ r12 + rbx ] , rax add rbx , num mov rdi , qword ptr [ rbp + rbx ] test rdi , rdi jne hexvar add rbx , r12 mov qword ptr [ rbx ] , num mov rax , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edi , num jmp hexvar nop word ptr [ rax + rax ] mov rbx , rax jmp hexvar xor r12d , r12d jmp hexvar
,
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rip ] mov qword ptr [ rsp ] , rax mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + hexvar ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rsp ] mov rdi , rax call hexvar mov rdx , rax mov rcx , qword ptr [ rsp ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov r9d , num lea r8 , [ rip ] mov ecx , num mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rip ] mov qword ptr [ rsp ] , rax mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , hexvar mov byte ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + hexvar ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rsp ] mov rdi , rax call hexvar mov rdx , rax mov rcx , qword ptr [ rsp ] lea rax , [ rsp + hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar lea rdx , [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov r9d , num lea r8 , [ rip ] mov ecx , num mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12 , rdi mov edi , hexvar push rbp mov ebp , esi push rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , ebp lea edi , [ rbp + num ] mov rbx , rax movsxd rdi , edi call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov rsi , r12 mov rdi , rbx call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret lea rdi , [ rip + hexvar ] call hexvar
push rbx mov rbx , rdi call hexvar mov rdi , rbx pop rbx mov esi , eax jmp hexvar
,
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
push r13 push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
push r12 push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx test rbp , rbp je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rbp + rbx * num ] mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r12 ] , num test rbx , rbx je hexvar sub rbx , num mov rax , qword ptr [ rbp + rbx * num ] mov qword ptr [ rip + hexvar ] , rbx test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rdx mov byte ptr [ rip + hexvar ] , al pop rbx pop rbp pop r12 ret
mov rax , qword ptr [ rip + hexvar ] push r12 mov r12 , rdi push rbp push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rbp , [ rax + rdx * num ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rdx , qword ptr [ rbp ] pop rbx pop rbp pop r12 mov eax , dword ptr [ rdx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret nop dword ptr [ rax ] call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] lea rbp , [ rbx + rax * num ] call hexvar test rbx , rbx mov qword ptr [ rbp ] , rax cmovne rbx , rax jmp hexvar
mov eax , dword ptr [ rip + hexvar ] push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx mov ebx , edx cmp eax , num ja hexvar mov ecx , eax lea rdx , [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov qword ptr [ rdx + rcx * num ] , r12 lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rcx * num ] , esi movzx edx , byte ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] shr dl , num and edx , num mov dword ptr [ rsi + rcx * num ] , edx mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] lea rsi , [ rip + hexvar ] and ebx , num mov rdi , rbp add eax , num mov qword ptr [ rsi + rcx * num ] , rdx movzx edx , byte ptr [ rip + hexvar ] shl ebx , num mov esi , hexvar mov qword ptr [ rip + hexvar ] , rbp and edx , hexvar mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rip + hexvar ] , num or edx , ebx mov byte ptr [ rip + hexvar ] , dl call hexvar pop rbx pop rbp mov rdi , rax pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar
push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rip + hexvar ] lea rdx , [ rbx + num ] mov byte ptr [ rbx ] , al test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rax + rcx * num ] movsxd rax , dword ptr [ rip + hexvar ] add rax , qword ptr [ rcx + num ] cmp rbx , rax jae hexvar mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rbx + num ] movzx eax , byte ptr [ rbx ] mov byte ptr [ rbx ] , num mov byte ptr [ rip + hexvar ] , dl add rsp , hexvar pop rbx pop rbp ret nop mov qword ptr [ rip + hexvar ] , rdx mov rbp , qword ptr [ rip + hexvar ] call hexvar mov edx , eax xor eax , eax cmp edx , num je hexvar cmp edx , num je hexvar test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] jmp hexvar nop sub rbx , rbp movsxd rbx , ebx add rbx , qword ptr [ rip + hexvar ] lea rdx , [ rbx + num ] jmp hexvar
sub rsp , num nop dword ptr [ rax ] call hexvar cmp eax , hexvar je hexvar cmp eax , - num je hexvar cmp eax , hexvar jne hexvar add dword ptr [ rip + hexvar ] , num call hexvar cmp eax , hexvar jne hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , - num jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar add rsp , num ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov rbx , rdi mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov ecx , num xor edx , edx xor esi , esi pop rbx lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rsi , rbx pop rbx mov rdi , rax xor eax , eax jmp hexvar
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
,
,
,
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
,
,
,
,
,
,
,
push r13 mov edx , hexvar push r12 mov r12 , rdi push rbp push rbx mov rbx , rsi mov rdi , rbx sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov r13 , rax mov rax , qword ptr [ rsp + num ] cmp byte ptr [ rax ] , num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rbp , [ r12 + num ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ rbx + hexvar ] , r13 jmp hexvar nop mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx mov rdi , r13 call hexvar mov rdx , rbx mov rdi , r12 mov rsi , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
push r12 push rbp lea rbp , [ rip + hexvar ] push rbx mov ebx , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , r12 je hexvar ja hexvar cmp ebx , num jle hexvar mov edi , num sub ebx , num je hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar movzx eax , byte ptr [ rbp ] and eax , num cmp al , num je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] je hexvar lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rax ] , num jmp hexvar nop dword ptr [ rax ] mov qword ptr [ rax + hexvar ] , r12 pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar pop rbx pop rbp mov rdi , rax pop r12 xor eax , eax jmp hexvar
test rdi , rdi je hexvar push rbp lea rbp , [ rip - hexvar ] push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop xor edx , edx mov rsi , rbp mov rdi , rbx call hexvar jmp hexvar nop ret
test rdi , rdi je hexvar push rbp lea rbp , [ rip - hexvar ] push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop xor edx , edx mov rsi , rbp mov rdi , rbx call hexvar jmp hexvar nop ret
push r12 push rbp push rbx sub rsp , hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar test edi , edi jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num mov r12d , hexvar lea ebp , [ rax - num ] test eax , eax je hexvar nop word ptr [ rax + rax ] mov eax , r12d jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , num mov edi , num mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar xor esi , esi mov rdi , rbx mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar sub ebp , num add dword ptr [ rip + hexvar ] , num cmp ebp , - num jne hexvar mov edi , num call hexvar call hexvar mov esi , num xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
mov esi , num jmp hexvar
,
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] sub rsp , num lea rdi , [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar lea rdi , [ rip - hexvar ] add rsp , num jmp hexvar
,
,
,
push r12 push rbp push rbx sub rsp , hexvar cmp dword ptr [ rip + hexvar ] , num jbe hexvar test edi , edi jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov dword ptr [ rip + hexvar ] , num mov r12d , hexvar lea ebp , [ rax - num ] test eax , eax je hexvar nop word ptr [ rax + rax ] mov eax , r12d jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , num mov edi , num mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar xor esi , esi mov rdi , rbx mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar sub ebp , num add dword ptr [ rip + hexvar ] , num cmp ebp , - num jne hexvar mov edi , num call hexvar call hexvar mov esi , num xor edi , edi call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num xor esi , esi xor edi , edi mov dword ptr [ rip + hexvar ] , num call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar movzx r10d , byte ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] and r10d , num nop mov edx , dword ptr [ rax + hexvar ] test edx , edx js hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov ecx , dword ptr [ rdx + hexvar ] test ecx , hexvar jne hexvar mov rsi , qword ptr [ rdx + hexvar ] test rsi , rsi je hexvar cmp qword ptr [ rsi + hexvar ] , rdx je hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar add rsp , num ret nop word ptr cs : [ rax + rax ] cmp qword ptr [ r8 + hexvar ] , rdx jne hexvar mov rdi , qword ptr [ rdx + hexvar ] test rdi , rdi jne hexvar movzx edi , byte ptr [ rax + hexvar ] test dil , hexvar jne hexvar or edi , num mov byte ptr [ rax + hexvar ] , dil or ch , hexvar mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rsi test rsi , rsi je hexvar mov qword ptr [ rsi + hexvar ] , rdx sub dword ptr [ r8 + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] mov r9d , dword ptr [ rdi + hexvar ] test r9d , hexvar jne hexvar and r9d , hexvar jne hexvar test r10b , r10b jne hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi jne hexvar jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rdx jmp hexvar nop dword ptr [ rax ] mov qword ptr [ r8 + hexvar ] , rsi jmp hexvar
,
,
,
,
,
,
,
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar ret nop jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num ja hexvar push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi test rdi , rdi je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , rbp mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov ecx , num mov rsi , rdx mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] ret nop dword ptr [ rax ] mov rax , qword ptr [ rbx + hexvar ] mov ecx , dword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num je hexvar nop dword ptr [ rax + rax ] test edx , edx je hexvar cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num nop dword ptr [ rax ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] cmp edx , num jne hexvar cmp ecx , num jne hexvar mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar
test rdi , rdi je hexvar push r12 lea r12 , [ rip - hexvar ] push rbp mov rbp , rsi push rbx mov rbx , rdi jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ rbx + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rbp call hexvar test byte ptr [ rbp + hexvar ] , num jne hexvar pop rbx pop rbp pop r12 ret ret
,
push rbp xor eax , eax mov rbp , rdi mov edi , hexvar push rbx sub rsp , num or esi , dword ptr [ rip + hexvar ] setne al mov dword ptr [ rip + hexvar ] , eax call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx call hexvar cmp qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + num ] , rax je hexvar add rsp , num mov rdi , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] add rsp , num pop rbx pop rbp ret
push rbp mov esi , num mov rbp , rdi push rbx sub rsp , num call hexvar mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , num pop rbx pop rbp ret
,
push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , num call hexvar lea rdi , [ rax + num ] call hexvar mov rdi , rbp mov rbx , rax call hexvar lea rdi , [ rax + num ] call hexvar movzx edx , byte ptr [ r13 ] mov r12 , rax test dl , dl je hexvar lea rdi , [ r13 + num ] mov rcx , rbx lea rax , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] add rcx , num add rdi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar movzx edx , byte ptr [ rbp ] mov byte ptr [ rcx ] , num lea rdi , [ rbp + num ] mov rcx , r12 test dl , dl je hexvar lea rax , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] add rcx , num add rdi , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov byte ptr [ rcx ] , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar movzx eax , byte ptr [ rbx ] cmp al , byte ptr [ r12 ] jne hexvar test al , al je hexvar mov edx , num jmp hexvar nop word ptr [ rax + rax ] add rdx , num test cl , cl je hexvar mov ebp , edx movzx ecx , byte ptr [ rbx + rdx ] cmp cl , byte ptr [ r12 + rdx ] je hexvar mov rdi , rbx call hexvar mov rdi , r12 call hexvar add rsp , num mov eax , ebp pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea ebp , [ rbp + rbp * num ] add ebp , ebp jmp hexvar mov rcx , rbx jmp hexvar nop dword ptr [ rax + rax ] xor ebp , ebp jmp hexvar
,
,
push r15 push r14 push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp mov rbp , rdi push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] test r14 , r14 je hexvar movsx esi , byte ptr [ rip + hexvar ] test sil , sil je hexvar mov rdi , r14 call hexvar mov r15 , rax test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] mov rsi , r15 mov rdi , r14 call hexvar test eax , eax je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx mov rdi , r14 call hexvar test eax , eax jne hexvar mov rcx , r13 mov rdx , r12 mov rsi , rbx mov rdi , rbp call hexvar jmp hexvar nop mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbx mov rcx , r13 mov rdx , r12 mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdi , r14 call hexvar test rax , rax je hexvar add rsp , num mov rcx , r13 mov rdx , r12 mov rdi , rbp pop rbx mov rsi , rax pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar
push r12 lea r12 , [ rip + hexvar ] mov ecx , hexvar push rbp mov ebp , esi push rbx mov rsi , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rdi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbx test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , - num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov dword ptr [ rdx + hexvar ] , eax pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov edx , ebp call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + hexvar ] mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rbp , qword ptr [ rax ] call hexvar mov rdx , r12 mov rdi , rax mov rsi , rbp xor eax , eax call hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar jmp hexvar
push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx ] lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test al , hexvar je hexvar mov rdi , qword ptr [ rbx + hexvar ] xor edx , edx xor esi , esi call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar add rsp , num xor esi , esi mov rdi , rax pop rbx pop rbp jmp hexvar
,
,
,
mov eax , num test r8d , r8d jne hexvar test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , dword ptr [ rip + hexvar ] test esi , esi je hexvar mov esi , dword ptr [ rdx + hexvar ] xor esi , dword ptr [ rcx + hexvar ] and esi , hexvar jne hexvar push rbp mov rax , rdx xor esi , esi xor edx , edx push rbx mov rbx , rcx sub rsp , num mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbx ] xor edx , edx xor esi , esi mov rbp , rax call hexvar test rbp , rbp je hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp + hexvar ] , rax setne al add rsp , num movzx eax , al pop rbx pop rbp ret nop xor eax , eax ret nop dword ptr [ rax + rax ] add rsp , num xor eax , eax pop rbx pop rbp ret
push r13 mov r13 , rdx mov rax , rdi push r12 mov r12d , ecx push rbp mov rbp , rsi mov rsi , rax push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , r12d mov rdi , rbp mov rbx , rax mov r12 , rsp call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , r13 mov rbp , rax call hexvar mov rcx , rbp xor edx , edx mov rsi , rbx mov rdi , r12 call hexvar mov rcx , qword ptr [ rsp ] test rcx , rcx je hexvar test r13 , r13 je hexvar lea rsi , [ rbp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdx , qword ptr [ rbp + hexvar ] test rdx , rdx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax jne hexvar mov qword ptr [ rdx ] , rcx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov qword ptr [ rbp + hexvar ] , rcx jmp hexvar
,
,
,
sub rsp , num mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov r8 , qword ptr [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov ecx , hexvar lea rax , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , num xor edx , edx xor edi , edi mov esi , num mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , num xor esi , esi lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rcx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax + hexvar ] , rcx lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
test rsi , rsi je hexvar push r12 mov r12 , rdi push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rsi mov rdi , rbx call r12 cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop ret
test rdi , rdi je hexvar push rbp lea rbp , [ rip - hexvar ] push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rbx + num ] cmp eax , num je hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop xor edx , edx mov rsi , rbp mov rdi , rbx call hexvar jmp hexvar nop ret
,
,
,
,
push r12 mov r12 , rdx push rbp mov rbp , rdi push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] test rsi , rsi je hexvar call hexvar mov rsi , qword ptr [ rbx ] lea rdi , [ rbp + hexvar ] mov rcx , r12 xor edx , edx call hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar mov rdx , r12 mov rdi , rbp call hexvar mov rdi , rbx pop rbx pop rbp pop r12 jmp hexvar
push r15 mov r15 , rcx push r14 push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rdx lea rcx , [ rsp + hexvar ] lea rdx , [ rip - hexvar ] mov rsi , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ r13 + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbp + num ] mov rsi , qword ptr [ r14 ] call hexvar test eax , eax jne hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 je hexvar cmp rbx , r14 jne hexvar mov r8 , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] mov r9 , r15 mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov r8 , qword ptr [ rsp ] mov r9 , r15 mov rcx , rbp mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rsp ] mov rcx , r15 mov rsi , r13 mov rdi , r12 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 mov r15 , rcx push r14 push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rdx lea rcx , [ rsp + hexvar ] lea rdx , [ rip - hexvar ] mov rsi , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num call hexvar mov eax , dword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ r13 + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbp + num ] mov rsi , qword ptr [ r14 ] call hexvar test eax , eax jne hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 je hexvar cmp rbx , r14 jne hexvar mov r8 , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] mov r9 , r15 mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov r14 , qword ptr [ r14 + hexvar ] test r14 , r14 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov r8 , qword ptr [ rsp ] mov r9 , r15 mov rcx , rbp mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rsp ] mov rcx , r15 mov rsi , r13 mov rdi , r12 call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
,
push rbp mov rbp , rsi push rbx mov rbx , rdi mov edi , hexvar sub rsp , num call hexvar mov rdx , qword ptr [ rbx + num ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + num ] , edx mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rbp add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num call hexvar mov rdx , qword ptr [ rax ] mov qword ptr [ rdx ] , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx + num ] , rbx mov qword ptr [ rdx + hexvar ] , rbp mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
push r13 push r12 mov r12 , rdi push rbp mov rbp , rsi push rbx sub rsp , num mov rax , qword ptr [ rdi ] mov rdx , qword ptr [ rsi ] mov rdi , qword ptr [ rax + num ] mov rbx , qword ptr [ rdx + num ] lea rax , [ rip + hexvar ] test rdi , rdi cmove rdi , rax test rbx , rbx cmove rbx , rax call hexvar mov rdi , rbx mov r13d , eax call hexvar mov edx , num cmp r13d , eax jl hexvar jg hexvar cmp r12 , rbp jb hexvar seta dl movzx edx , dl add rsp , num mov eax , edx pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] add rsp , num mov edx , hexvar pop rbx mov eax , edx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r15 mov r15 , rdi mov edi , hexvar push r14 mov r14 , r8 push r13 mov r13 , r9 push r12 mov r12d , edx push rbp push rbx mov ebx , ecx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rdi , qword ptr [ rsp + num ] lea rdx , [ rip + hexvar ] xor esi , esi mov qword ptr [ rax ] , num mov rbp , rax mov qword ptr [ rax + num ] , r15 call hexvar mov dword ptr [ rbp + hexvar ] , r12d cdqe mov dword ptr [ rbp + hexvar ] , ebx mov qword ptr [ rbp + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , r14 mov qword ptr [ rbp + hexvar ] , r13 cmp rax , num je hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar lea rbx , [ rip + hexvar ] mov qword ptr [ rbx ] , rbp add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop or r12d , ebx je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num lea rbx , [ rip + hexvar ] je hexvar nop mov rbx , qword ptr [ rbx ] mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar xor esi , esi mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rbx ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx ] test rax , rax jne hexvar jmp hexvar lea rbx , [ rip + hexvar ] mov rbx , qword ptr [ rbx ] mov rax , qword ptr [ rbx ] test rax , rax je hexvar cmp qword ptr [ rax ] , num mov rbx , rax jne hexvar jmp hexvar mov rbx , rax jmp hexvar
,
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
,
sub rsp , num xor edx , edx call hexvar add rsp , num mov rdi , rax jmp hexvar
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
,
,
push r13 mov rdx , rsi xor ecx , ecx lea rsi , [ rip + hexvar ] push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rax + hexvar ] call hexvar mov rdi , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbx , rax movzx eax , byte ptr [ rbp ] test al , al je hexvar mov rdx , rbp mov rcx , rbx lea rdi , [ rip + hexvar ] nop dword ptr [ rax + rax ] movzx esi , al test byte ptr [ rdi + rsi * num ] , hexvar jne hexvar cmp al , hexvar jne hexvar mov byte ptr [ rcx ] , al add rcx , num add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov byte ptr [ rcx ] , num mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar xor edx , edx mov rdi , r12 mov rsi , rax call hexvar mov rdi , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rsi , rbp mov edi , hexvar mov r13 , rax call hexvar mov rdx , r13 mov edi , hexvar mov rsi , rax call hexvar mov rdi , r12 xor edx , edx mov rsi , rax call hexvar mov rdi , rax call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop mov rcx , rbx jmp hexvar
,
,
,
push r13 mov edx , hexvar push r12 mov r12 , rdi push rbp push rbx mov rbx , rsi mov rdi , rbx sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov r13 , rax mov rax , qword ptr [ rsp + num ] cmp byte ptr [ rax ] , num jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rbp , [ r12 + num ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ rbx + hexvar ] , r13 jmp hexvar nop mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rip + hexvar ] , rbx mov rdi , r13 call hexvar mov rdx , rbx mov rdi , r12 mov rsi , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar
,
,
cmp qword ptr [ rdi + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] push r12 push rbp mov rbp , rdi push rbx movzx eax , byte ptr [ rdi + hexvar ] test al , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rcx , r12 lea rdx , [ rip + hexvar ] mov rsi , rbp call hexvar test eax , eax je hexvar and byte ptr [ rbp + hexvar ] , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] test al , num je hexvar mov r12 , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar cmp byte ptr [ rbx ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar or byte ptr [ rbp + hexvar ] , num pop rbx or byte ptr [ rip + hexvar ] , num pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] call hexvar test eax , eax je hexvar mov r12 , qword ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
push r12 mov r12 , rdi push rbp push rbx cmp byte ptr [ rdi ] , hexvar je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rbp , [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] add rbp , num mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , rbx pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar pop rbx lea rdi , [ rip + hexvar ] pop rbp xor eax , eax pop r12 jmp hexvar nop dword ptr [ rax + rax ] cmp byte ptr [ rdi + num ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , hexvar jne hexvar add r12 , num jmp hexvar
,
,
,
,
,
,
,
movzx eax , byte ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar or qword ptr [ rip + hexvar ] , hexvar movabs rax , hexvar movabs rdx , hexvar and rax , qword ptr [ rip + hexvar ] cmp rax , rdx je hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] test eax , eax jg hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax ] sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num jmp hexvar
,
,
,
,
,
,
,
,
push r15 mov r15 , rcx push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar movzx eax , byte ptr [ rsi + hexvar ] mov qword ptr [ rsp + num ] , rdx test al , num jne hexvar mov rdi , qword ptr [ rsi + hexvar ] test al , num je hexvar cmp byte ptr [ rdi ] , hexvar je hexvar mov rsi , rbp call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov rbx , qword ptr [ rip + hexvar ] lea r12 , [ rip + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] xor ecx , ecx mov rsi , r12 xor eax , eax call hexvar mov rsi , rbp mov r14 , rax mov rdi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbp + hexvar ] test al , hexvar je hexvar movzx edx , byte ptr [ rip + hexvar ] and edx , num cmp dl , num je hexvar mov rdx , rbp mov rsi , rbx mov rdi , r13 call hexvar test eax , eax jne hexvar movzx eax , byte ptr [ rbp + hexvar ] and eax , num mov rdx , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbx + num ] cmp al , num jne hexvar sub rsp , num mov rcx , rdx mov rsi , r12 xor eax , eax push num mov rdx , qword ptr [ rsp + hexvar ] mov r9 , r15 mov r8 , r13 call hexvar mov rsi , rbp mov r14 , rax pop rax pop rdx mov rdi , r14 call hexvar test eax , eax je hexvar mov qword ptr [ rbp + hexvar ] , r14 mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] xor edx , edx xor eax , eax call hexvar mov rsi , rbp mov rdi , rax mov rbx , rax call hexvar test eax , eax je hexvar mov qword ptr [ rbp + hexvar ] , rbx mov eax , num jmp hexvar mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push r13 mov r13 , rdx mov rax , rdi push r12 mov r12d , ecx push rbp mov rbp , rsi mov rsi , rax push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax + hexvar ] , r12d mov rdi , rbp mov rbx , rax mov r12 , rsp call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , r13 mov rbp , rax call hexvar mov rcx , rbp xor edx , edx mov rsi , rbx mov rdi , r12 call hexvar mov rcx , qword ptr [ rsp ] test rcx , rcx je hexvar test r13 , r13 je hexvar lea rsi , [ rbp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rdx , qword ptr [ rbp + hexvar ] test rdx , rdx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax jne hexvar mov qword ptr [ rdx ] , rcx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov qword ptr [ rbp + hexvar ] , rcx jmp hexvar
sub rsp , num lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar xor esi , esi add rsp , num mov rdi , rax xor eax , eax jmp hexvar
sub rsp , num xor esi , esi lea rdi , [ rip + hexvar ] call hexvar or byte ptr [ rip + hexvar ] , hexvar movabs rax , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num or qword ptr [ rip + hexvar ] , rax add rsp , num ret
,
,
,
,
cmp qword ptr [ rdi + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] push r12 push rbp mov rbp , rdi push rbx movzx eax , byte ptr [ rdi + hexvar ] test al , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rcx , r12 lea rdx , [ rip + hexvar ] mov rsi , rbp call hexvar test eax , eax je hexvar and byte ptr [ rbp + hexvar ] , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] movzx eax , byte ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] test al , num je hexvar mov r12 , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar cmp byte ptr [ rbx ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar or byte ptr [ rbp + hexvar ] , num pop rbx or byte ptr [ rip + hexvar ] , num pop rbp pop r12 ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] call hexvar test eax , eax je hexvar mov r12 , qword ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
cmp qword ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov rdi , rbx call hexvar xor esi , esi mov rdi , rax call hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] test r13 , r13 je hexvar mov rdi , r13 call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + hexvar ] mov r12 , qword ptr [ rax ] mov qword ptr [ rsp + num ] , rax test r12 , r12 jne hexvar jmp hexvar nop dword ptr [ rax ] add qword ptr [ rsp + num ] , num mov rax , qword ptr [ rsp + num ] mov r12 , qword ptr [ rax ] test r12 , r12 je hexvar mov eax , dword ptr [ r12 + hexvar ] test eax , hexvar jne hexvar test eax , hexvar je hexvar mov rdx , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov rbp , qword ptr [ rdx ] xor r14d , r14d test ah , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov r15 , qword ptr [ rbx + num ] test r15 , r15 jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov r15 , qword ptr [ r15 ] test r15 , r15 je hexvar mov rdi , qword ptr [ r15 + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ r12 + hexvar ] mov r8 , rbx mov rcx , r13 xor esi , esi mov rdi , r14 call hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret mov r14 , qword ptr [ r12 + num ] jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rsi , r13 mov rdi , rax xor eax , eax call hexvar jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] sub rsp , num lea rdi , [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar lea rdi , [ rip - hexvar ] add rsp , num jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar ret nop dword ptr [ rax + rax ] sub rsp , num lea rdi , [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar lea rdi , [ rip - hexvar ] add rsp , num jmp hexvar
,
,
test rsi , rsi je hexvar push r13 mov r13 , r8 push r12 push rbp mov rbp , rcx push rbx mov rbx , r9 sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] mov r12 , qword ptr [ rsi + num ] test rdi , rdi je hexvar xor ecx , ecx xor edx , edx mov rsi , r12 call hexvar test rax , rax je hexvar lea rax , [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] cmp r13 , rax je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rax xor eax , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov rcx , rbx mov rdx , r13 mov rsi , rbp mov rdi , r12 call hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov esi , r9d mov rdi , rcx jmp hexvar nop word ptr [ rax + rax ] mov eax , num ret
push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ecx , ecx mov edx , num mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar cmp rbp , qword ptr [ rbx + num ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + num ] , rbp je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax test rax , rax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ r12 + hexvar ] , rbx and byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + num ] , rbp lea rax , [ rip + hexvar ] cmp r13 , rax je hexvar test byte ptr [ r13 + hexvar ] , hexvar jne hexvar or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num call hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num ret nop dword ptr [ rax ] add rsp , num jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r13 push r12 lea r12 , [ rip + hexvar ] push rbp lea rbp , [ rip + hexvar ] push rbx mov rbx , rdi sub rsp , num cmp dword ptr [ rbx + hexvar ] , num ja hexvar mov eax , dword ptr [ rbx + hexvar ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop xor r9d , r9d mov rdx , qword ptr [ rbx + hexvar ] mov ecx , num mov rdi , r12 mov rsi , rdx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jbe hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov r9d , num jmp hexvar nop dword ptr [ rax + rax ] mov r8d , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov ecx , r9d lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov r13 , qword ptr [ rbx + hexvar ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax mov rsi , r13 xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
,
,
sub rsp , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
,
,
,
,
cmp dword ptr [ rdi + num ] , num je hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
push r12 push rbp push rbx mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar mov r12 , rdi lea rbp , [ rip + hexvar ] nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx + num ] , hexvar ja hexvar mov eax , dword ptr [ rbx + num ] movsxd rax , dword ptr [ rbp + rax * num ] add rax , rbp jmp rax nop word ptr [ rax + rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret nop mov rax , qword ptr [ r12 + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jne hexvar mov rax , qword ptr [ r12 + num ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ r12 ] mov qword ptr [ rbx ] , rax mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar jmp hexvar nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar
,
,
sub rsp , num mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
,
,
push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx sub rsp , hexvar mov rbx , rsp mov rdi , rbx call hexvar mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx jae hexvar add dword ptr [ rdi + hexvar ] , num cmp eax , hexvar jbe hexvar mov esi , hexvar mov ebp , esi sub ebp , eax mov r13d , eax mov rdx , rbp lea rsi , [ rip + hexvar ] lea rdi , [ rbx + r13 + hexvar ] call hexvar mov edx , dword ptr [ rbx + hexvar ] lea rsi , [ rbp + r13 ] lea rdi , [ rbx + hexvar ] lea eax , [ rdx * num ] shr edx , hexvar mov dword ptr [ rbx + rsi + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] shl eax , num or eax , edx mov rdx , rbx mov dword ptr [ rbx + rsi + hexvar ] , eax add rsi , num call hexvar add rsp , num mov rsi , r12 mov rdi , rbx pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] mov esi , hexvar mov ebp , esi sub ebp , eax jmp hexvar
push r13 mov r13 , rsi push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx sub rsp , hexvar mov rbx , rsp mov rdi , rbx call hexvar mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
,
,
push r15 mov r15 , rsi push r14 push r13 mov r13d , hexvar push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar mov r14 , rsp lea r12 , [ rsp + hexvar ] mov rdi , r14 call hexvar xor ebx , ebx jmp hexvar nop dword ptr [ rax ] mov rdi , rbp test rax , rax je hexvar call hexvar test eax , eax jne hexvar mov rdx , r13 lea rdi , [ r12 + rbx ] mov rcx , rbp mov esi , num sub rdx , rbx call hexvar add rbx , rax cmp rbx , hexvar jne hexvar mov rdx , r14 mov esi , hexvar mov rdi , r12 call hexvar jmp hexvar nop call hexvar mov edx , eax mov eax , num test edx , edx jne hexvar test rbx , rbx jne hexvar mov rsi , r15 mov rdi , r14 call hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , r14 mov rsi , rbx mov rdi , r12 call hexvar jmp hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov eax , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rbx + hexvar ] cmp eax , hexvar mov esi , eax sbb r8 , r8 and r8 , hexvar sub r8 , - hexvar cmp eax , hexvar sbb rdi , rdi and rdi , hexvar add rdi , hexvar cmp eax , hexvar sbb rdx , rdx and rdx , hexvar add rdx , hexvar add esi , dword ptr [ rbx + hexvar ] mov dword ptr [ rbx + hexvar ] , esi jae hexvar add ecx , num mov dword ptr [ rbx + hexvar ] , ecx mov r9d , esi shl ecx , num shr r9d , hexvar or ecx , r9d bswap ecx mov dword ptr [ rbx + rdx * num + hexvar ] , ecx lea ecx , [ rsi * num ] mov edx , esi shl edx , hexvar mov r9d , ecx shl esi , hexvar shr r9d , hexvar and edx , hexvar shr ecx , num or edx , r9d and ecx , hexvar lea r9 , [ rbx + hexvar ] or edx , esi lea rsi , [ rip + hexvar ] or edx , ecx mov dword ptr [ rbx + rdi * num + hexvar ] , edx mov rdi , r8 lea rdx , [ r9 + rax ] sub rdi , rax lea rcx , [ rdi - num ] cmp rcx , num jae hexvar test cl , num jne hexvar test rcx , rcx je hexvar movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al test cl , num je hexvar movzx eax , word ptr [ rsi + rcx - num ] mov word ptr [ rdx + rcx - num ] , ax jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rdx + num ] and rdi , hexvar mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rsi + rcx - num ] mov qword ptr [ rdx + rcx - num ] , rax sub rdx , rdi add rcx , rdx sub rsi , rdx shr rcx , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] mov rdx , rbx mov rsi , r8 mov rdi , r9 call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rsi + rcx - num ] mov dword ptr [ rdx + rcx - num ] , eax jmp hexvar
push r15 mov r15 , rsi push r14 push r13 mov r13d , hexvar push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar mov r14 , rsp lea r12 , [ rsp + hexvar ] mov rdi , r14 call hexvar xor ebx , ebx jmp hexvar nop dword ptr [ rax ] mov rdi , rbp test rax , rax je hexvar call hexvar test eax , eax jne hexvar mov rdx , r13 lea rdi , [ r12 + rbx ] mov rcx , rbp mov esi , num sub rdx , rbx call hexvar add rbx , rax cmp rbx , hexvar jne hexvar mov rdx , r14 mov esi , hexvar mov rdi , r12 call hexvar jmp hexvar nop call hexvar mov edx , eax mov eax , num test edx , edx jne hexvar test rbx , rbx jne hexvar mov rsi , r15 mov rdi , r14 call hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rdx , r14 mov rsi , rbx mov rdi , r12 call hexvar jmp hexvar
,
,
,
,
,
push r14 xor eax , eax push r13 push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , rdi sub r12 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rdi + num ] add rsi , r12 setb al add rsi , qword ptr [ rdi + hexvar ] setb dl test rax , rax jne hexvar movzx edx , dl test rdx , rdx je hexvar lea rax , [ rip + hexvar ] call qword ptr [ rax ] mov qword ptr [ rbx + num ] , num mov qword ptr [ num ] , r13 ud2 nop mov rax , r12 shr rax , num cmp qword ptr [ rdi ] , rsi lea rbp , [ rsi + rax + hexvar ] cmovae rsi , qword ptr [ rdi ] cmp rsi , rbp cmovae rbp , rsi mov rsi , rbp call hexvar mov r14 , rax test rax , rax je hexvar lea rsi , [ rax + rbp ] mov qword ptr [ rbx + num ] , rax mov rdx , r12 mov qword ptr [ rax + num ] , r13 mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rax ] , rsi mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] lea rbp , [ r14 + rax + hexvar ] not rax and rbp , rax mov rdi , rbp call hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] lea rdx , [ r13 + rax + hexvar ] not rax and rax , rdx cmp qword ptr [ rbx + hexvar ] , rax je hexvar add r12 , rbp mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , r12 and byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rax , qword ptr [ r13 + num ] mov rsi , r13 mov rdi , rbx mov qword ptr [ r14 + num ] , rax call hexvar jmp hexvar
,
,
mov rcx , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rax , rcx sub rax , rdi cmp rbx , rax ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , rcx lea rdi , [ rsi + rdx ] not rdx and rdi , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rdi mov qword ptr [ rip + hexvar ] , rdi sub rsi , rdx sub rbx , rdx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rcx mov rdi , rcx mov qword ptr [ rip + hexvar ] , rdi pop rbx ret mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rsi , [ rdi + rbx ] cmp rsi , rax jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
,
sub rsp , num mov rcx , qword ptr [ rip + hexvar ] xor edx , edx mov r8 , qword ptr [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov ecx , hexvar lea rax , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip - hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , num xor edx , edx xor edi , edi mov esi , num mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , num xor esi , esi lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rcx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rax + hexvar ] , rcx lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
or byte ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 mov qword ptr [ rdi + hexvar ] , r9 jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
,
,
,
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov r12 , rax lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar call hexvar call hexvar call hexvar
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num imul rax , rdx mov qword ptr [ rbp - hexvar ] , rax call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar call hexvar test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] add rax , num mov rdi , rax call hexvar test rax , rax sete al pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
,
,
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rsi , rax mov edi , num call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax setne al mov byte ptr [ rbp - hexvar ] , al call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax movzx edx , byte ptr [ rbp - hexvar ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar mov r12 , rax lea rax , [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax mov edi , hexvar call hexvar call hexvar
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov byte ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - hexvar ] push rsi mov r9 , r8 mov r8 , rdi mov esi , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] and eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] movzx eax , ax mov rsi , rcx mov edi , eax call hexvar add qword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] mov word ptr [ rbp - hexvar ] , ax movzx eax , word ptr [ rbp - hexvar ] movzx eax , ax mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbx mov rax , qword ptr [ rdi ] mov rbx , rdi mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rip + hexvar ] , eax test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar
push rbx mov edi , hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax test eax , eax jne hexvar mov qword ptr [ rip + hexvar ] , num mov rax , rbx pop rbx ret call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx ret
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar xor edi , edi add rsp , num jmp hexvar
,
,
,
,
,
push rbp mov ebp , edi push rbx sub rsp , num mov edi , dword ptr [ rip + hexvar ] call hexvar test ebp , ebp js hexvar lea ebx , [ rbp - num ] lea rbp , [ rip + hexvar ] nop dword ptr [ rax ] mov rdi , rbp sub ebx , num call hexvar mov qword ptr [ rip + hexvar ] , rax cmp ebx , - num jne hexvar add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp lea rsi , [ rip + hexvar ] push rbx sub rsp , num call hexvar mov rbp , rax test rax , rax je hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , hexvar mov rdi , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax + rax ] mov rsi , qword ptr [ rbx ] mov edx , hexvar mov rdi , rbp call hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov edi , hexvar mov rsi , rbp call hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] ret nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar add rsp , num mov rsi , rbx mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r13 mov r13 , rdi xor edi , edi push r12 mov r12d , edx push rbp mov rbp , rsi push rbx sub rsp , num call hexvar test eax , eax je hexvar mov ebx , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add eax , ebx cmp eax , hexvar jg hexvar cmp r12d , hexvar je hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx cmp r12d , hexvar je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov rsi , r13 mov edi , hexvar call hexvar add dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop mov rsi , r13 mov edi , hexvar call hexvar mov rsi , rbp mov rdi , r13 add dword ptr [ rip + hexvar ] , num call hexvar add dword ptr [ rip + hexvar ] , ebx add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov rcx , r13 mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , num cmp r12d , hexvar jne hexvar mov rsi , rbp mov rdi , r13 call hexvar add dword ptr [ rip + hexvar ] , ebx jmp hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
,
push rbx mov ebx , dword ptr [ rdi + hexvar ] call hexvar sub eax , ebx pop rbx ret
,
push rbp mov ebp , edi push rbx sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rsi mov rsi , - num mov byte ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp + hexvar ] , num test eax , eax je hexvar call hexvar mov ebx , eax mov rdi , rsp call hexvar sub rsp , num movsxd rsi , ebx movsxd r9 , ebp push num mov r8 , rax mov ecx , num mov rdx , rsi mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret nop word ptr [ rax + rax ] call hexvar mov ebx , eax jmp hexvar
,
push r12 push rbp mov rbp , rsi push rbx mov ebx , edi call hexvar movsxd rdi , eax mov r12 , rdi call hexvar mov ecx , r12d mov rsi , rbp mov edi , ebx mov rdx , rax pop rbx pop rbp pop r12 jmp hexvar
push rbp mov ebp , edi push rbx sub rsp , hexvar lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rsi call hexvar cmp ebp , hexvar je hexvar lea eax , [ rbp + num ] xor ebx , ebx cmp eax , hexvar ja hexvar mov rdi , qword ptr [ rsp + num ] cmp rdi , hexvar ja hexvar imul edx , edi , hexvar lea eax , [ rax + rdx + hexvar ] cmp eax , hexvar jbe hexvar sub eax , hexvar cmp eax , hexvar jbe hexvar xor esi , esi call hexvar lea eax , [ rax + rbx + num ] add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] movsxd rdi , ebp mov esi , num call hexvar lea ebx , [ rax + num ] mov eax , num jmp hexvar nop mov rdi , qword ptr [ rsp + num ] mov eax , num cmp rdi , hexvar je hexvar xor esi , esi call hexvar add rsp , hexvar add eax , num pop rbx pop rbp ret nop dword ptr [ rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret nop word ptr [ rax + rax ] add rsp , hexvar lea eax , [ rbx + num ] pop rbx pop rbp ret
,
,
,
mov ecx , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi mov qword ptr [ rip + hexvar ] , rdi test ecx , ecx je hexvar call hexvar or dword ptr [ rax ] , num mov edx , dword ptr [ rip + hexvar ] mov rdi , rbx test edx , edx je hexvar call hexvar or dword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] call hexvar and dword ptr [ rax ] , hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar and dword ptr [ rax ] , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar cmp byte ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ rip + hexvar ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov rdi , rbx call hexvar mov rdi , rbx mov dword ptr [ rip + hexvar ] , num or dword ptr [ rax ] , num pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar cmp byte ptr [ rax + num ] , hexvar jne hexvar jmp hexvar
,
,
,
mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar ret nop dword ptr [ rax + rax ] push rbx mov rbx , rdi sub rsp , hexvar call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax ] test byte ptr [ rax + hexvar ] , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test edx , edx jne hexvar cmp eax , num jne hexvar lea rsi , [ rsp + hexvar ] mov rdi , rsi mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax ] cmp eax , num je hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] movdqa xmm1 , xmmword ptr [ rip + hexvar ] lea rsi , [ rsp + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov rdi , rbx or dword ptr [ rsp + hexvar ] , num call hexvar and dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx ret
test edi , edi jne hexvar ret nop dword ptr [ rax ] push r13 xor edx , edx push r12 push rbp movsxd rbp , edi push rbx sub rsp , num mov esi , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov r12 , rax test rax , rax je hexvar call hexvar mov r13 , rax mov rax , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp rax , r13 jne hexvar mov rdi , qword ptr [ rbx + num ] lea rsi , [ rbp + r13 ] call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push r12 mov edx , num lea rsi , [ rip + hexvar ] push rbp push rbx mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx call hexvar mov dword ptr [ rax + num ] , hexvar mov rbx , rax lea r12 , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , eax call hexvar call hexvar mov rbp , rax test rax , - hexvar jne hexvar test al , hexvar jne hexvar and eax , num cmp rax , num jg hexvar cmp rax , num je hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar movzx eax , byte ptr [ rbx + hexvar ] cmp al , num jne hexvar mov rax , rbp and eax , hexvar cmp rax , hexvar je hexvar nop dword ptr [ rax + rax ] mov dword ptr [ rbx + hexvar ] , ebp cmp rbp , hexvar je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar call hexvar xor edx , edx mov rsi , r12 xor edi , edi call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] cmp al , num je hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbp , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbp mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbp mov rdi , rbx call hexvar mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbp , rax call hexvar cmp rbp , rax jne hexvar jmp hexvar nop add rsp , num pop rbx pop rbp ret
push r12 mov r12 , rdi push rbp push rbx call hexvar mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] add ebx , num mov rbp , rax mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rcx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rdi , rsi sub rbx , rsi cmp rdi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , rcx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
,
,
,
,
sub rsp , hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar lea rax , [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rax mov qword ptr [ rsp + hexvar ] , num mov rdi , rsp call hexvar xor esi , esi mov rdi , rax call hexvar add rsp , hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax jmp hexvar
,
,
push r13 push r12 mov r12d , edx push rbp mov rbp , rdi movzx edi , sil push rbx mov ebx , esi sub rsp , hexvar call hexvar cmp ebx , hexvar je hexvar mov r13d , eax test r12d , r12d jne hexvar and ebx , hexvar cmp ebx , hexvar je hexvar mov esi , r13d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] movdqu xmm0 , xmmword ptr [ rbp ] movdqu xmm1 , xmmword ptr [ rbp + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 mov byte ptr [ rsp + hexvar ] , hexvar call hexvar mov rdi , rsp mov esi , r13d mov qword ptr [ rsp + num ] , rax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov edi , ebx call hexvar jmp hexvar
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] cmp rax , rdi je hexvar cmp dword ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov ebp , r12d nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp rbx , rax je hexvar test rbx , rbx je hexvar add ebp , dword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] add ebp , eax mov rax , qword ptr [ rip + hexvar ] cmp rbx , rax jne hexvar call hexvar add ebp , eax cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp ebp , r12d jb hexvar mov eax , ebp pop rbx pop rbp sub eax , r12d pop r12 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add ebp , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , r13d call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor r13d , r13d cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13d , eax test eax , eax je hexvar cmp rdi , r12 je hexvar cmp dword ptr [ rdi + hexvar ] , num mov r13d , num cmovle r13d , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop shr eax , num add edx , num test al , num je hexvar cmp r13d , edx cmovl r13d , edx jmp hexvar nop word ptr [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor r13d , r13d jmp hexvar ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push rbx xor esi , esi mov rbx , rdi call hexvar mov edi , eax call hexvar mov rsi , rbx xor edx , edx pop rbx mov rdi , rax jmp hexvar
push r15 mov r15d , edi mov rdi , rsi push r14 mov r14d , ecx push r13 mov r13 , r8 push r12 mov r12 , r9 push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov esi , ebx mov rdx , qword ptr [ rsp + num ] mov rbp , qword ptr [ rax + hexvar ] lea rcx , [ rbp + rbx ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rdi + hexvar ] , rdx mov dword ptr [ rdi + hexvar ] , r15d mov dword ptr [ rdi + hexvar ] , r14d mov qword ptr [ rdi + hexvar ] , r13 mov qword ptr [ rdi + hexvar ] , r12 mov qword ptr [ rdi + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] lea rdi , [ r12 + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ r12 + hexvar ] , rax call hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r12 mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov r12 , qword ptr [ rbx + num ] cmp r12 , rdx jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] lea rax , [ r12 + hexvar ] sub rsi , rax mov rax , rsi sub rax , rdi mov qword ptr [ rdx + hexvar ] , rax mov eax , dword ptr [ rdx + hexvar ] test eax , eax je hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] cmp rdx , qword ptr [ rbx + hexvar ] je hexvar mov rcx , qword ptr [ rbx + hexvar ] lea rax , [ rdx + rcx ] not rcx mov rdx , qword ptr [ rbx + hexvar ] and rax , rcx mov rcx , qword ptr [ rbx + hexvar ] mov rsi , rax mov qword ptr [ rbx + hexvar ] , rax mov r8 , rcx sub rsi , rdx sub r8 , rdx cmp rsi , r8 ja hexvar mov qword ptr [ rbx + hexvar ] , rax call hexvar lea rdi , [ rax + hexvar ] mov rbp , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbx + num ] , rax mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] cmp rax , qword ptr [ rdx + num ] jne hexvar mov qword ptr [ rax + hexvar ] , num pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov qword ptr [ rbx + hexvar ] , rcx mov rax , rcx jmp hexvar nop dword ptr [ rax ] or byte ptr [ rbx + hexvar ] , num jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
,
mov rsi , qword ptr [ rdi ] movzx eax , byte ptr [ rsi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num cmp al , hexvar jne hexvar movzx eax , byte ptr [ rsi + num ] add rsi , num lea rcx , [ rip + hexvar ] test byte ptr [ rcx + rax * num ] , hexvar je hexvar lea rdx , [ rip + hexvar ] test byte ptr [ rdx + rax ] , num je hexvar push rbp push rbx mov rbx , rsi sub rsp , num nop dword ptr [ rax ] add rbx , num movzx edx , byte ptr [ rbx ] test byte ptr [ rcx + rdx * num ] , hexvar jne hexvar cmp dl , hexvar je hexvar mov rbp , rdi mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] sub rdx , rsi call hexvar test rax , rax je hexvar mov qword ptr [ rbp ] , rbx add rsp , num pop rbx pop rbp ret nop xor eax , eax ret
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov rdi , qword ptr [ rdx + hexvar ] mov rbp , rsi mov rsi , r12 mov rbx , rdx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbx ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov qword ptr [ rax ] , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] mov r13d , dword ptr [ rbx + num ] mov rax , qword ptr [ rbx ] mov edx , r13d test r13b , hexvar je hexvar mov ecx , r13d add edx , num mov edi , num mov qword ptr [ rax + rcx * num ] , rbp mov dword ptr [ rbx + num ] , edx call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , r12 mov dword ptr [ rax ] , r13d add rsp , num mov rdx , rax pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax + rax ] lea esi , [ r13 + hexvar ] mov rdi , rax shl rsi , num call hexvar mov edx , dword ptr [ rbx + num ] mov qword ptr [ rbx ] , rax jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
sub rsp , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar lea rdx , [ rip + hexvar ] mov ecx , hexvar pxor xmm0 , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rdi , rdx xor eax , eax rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 movaps xmmword ptr [ rip + hexvar ] , xmm0 add rsp , num ret
mov rdi , qword ptr [ rip + hexvar ] jmp hexvar
,
,
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , num call hexvar add rax , rax lea rdi , [ rax + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rax ] , hexvar add rsp , num ret
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
sub rsp , num call hexvar xor edi , edi mov esi , eax call hexvar add rsp , num jmp hexvar
xor edx , edx jmp hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
,
,
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
sub rsp , num mov rsi , qword ptr [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push rbx mov rbx , rdi mov rdi , rsi call hexvar mov rdi , rbx pop rbx mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov rdi , rbx mov rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] movaps xmmword ptr [ rip + hexvar ] , xmm0 mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov byte ptr [ rip + hexvar ] , al call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp mov rbp , rdi mov edi , hexvar push rbx sub rsp , num call hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , rbp mov rax , qword ptr [ rip + hexvar ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] mov byte ptr [ rbx + hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rax call hexvar mov qword ptr [ rip + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
,
,
,
,
push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov edi , dword ptr [ rbx + hexvar ] test edi , edi je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , rax xor eax , eax mov esi , dword ptr [ rcx + num ] mov rdi , qword ptr [ rcx ] call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp byte ptr [ rcx + rdx ] , num jne hexvar add rax , num nop dword ptr [ rax + rax ] mov rdx , rax mov qword ptr [ rip + hexvar ] , rax add rax , num movzx edx , byte ptr [ rdx ] cmp byte ptr [ rcx + rdx ] , num je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rbx + hexvar ] call hexvar xor edx , edx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rax + hexvar ] test esi , esi sete dl or edx , dword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , edx test byte ptr [ rip + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov ecx , dword ptr [ rcx + hexvar ] test ecx , ecx jne hexvar test edx , edx jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] nop word ptr [ rax + rax ] mov dword ptr [ rax + hexvar ] , num jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
push rbp mov rbp , rdx push rbx sub rsp , hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rsp + hexvar ] , esi test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx call hexvar test rbx , rbx je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi test ecx , ecx jne hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8 , rbp mov rdx , rbx mov rcx , rax lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r9 , rbp mov rdx , rbx mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax xor eax , eax lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov esi , dword ptr [ rip + hexvar ] mov rbx , rax test esi , esi je hexvar jmp hexvar
,
,
push r12 mov r12 , rdi push rbp push rbx call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rbp , rax test rbx , rbx je hexvar xor eax , eax lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] movzx edx , byte ptr [ r12 + rax ] movzx edx , byte ptr [ rcx + rdx ] mov byte ptr [ rbp + rax ] , dl add rax , num cmp rbx , rax jne hexvar add rbx , rbp mov byte ptr [ rbx ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp xor edx , edx call hexvar mov rdi , rbx call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar pop rbx mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rbx , rax jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
,
sub rsp , hexvar mov rdi , rsp call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num mov edi , num call hexvar call hexvar call hexvar add rsp , hexvar ret nop dword ptr [ rax + rax ] mov dword ptr [ rip + hexvar ] , num xor edi , edi call hexvar call hexvar call hexvar add rsp , hexvar ret
push rbx mov ebx , edi call hexvar mov edi , ebx pop rbx jmp hexvar
,
,
,
,
,
sub rsp , num lea rsi , [ rip - hexvar ] mov edi , hexvar call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num add rsp , num jmp hexvar
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , r13d call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor r13d , r13d cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13d , eax test eax , eax je hexvar cmp rdi , r12 je hexvar cmp dword ptr [ rdi + hexvar ] , num mov r13d , num cmovle r13d , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop shr eax , num add edx , num test al , num je hexvar cmp r13d , edx cmovl r13d , edx jmp hexvar nop word ptr [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor r13d , r13d jmp hexvar ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea r9 , [ rsp + num ] mov r8 , r14 mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rbp + hexvar ] call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push r14 mov r14 , rdi push r13 mov r13d , r8d push r12 mov r12 , rcx push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rsi ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] test dl , hexvar jne hexvar and dh , num je hexvar lea rdx , [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , rdx je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbp ] mov rsi , rbx lea r9 , [ rsp + num ] mov r8 , r14 mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rbp + hexvar ] call hexvar mov ebx , eax cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov ecx , ebx mov edx , r13d mov rsi , r12 mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov esi , r13d mov rdi , r12 mov rdx , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
sub rsp , num xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rbx , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov esi , hexvar mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov rdi , rbx mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
,
push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , num cmp dword ptr [ rip + hexvar ] , hexvar je hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar test byte ptr [ rip + hexvar ] , num je hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov esi , num xor edi , edi xor eax , eax call hexvar mov rbp , - hexvar xor ebx , ebx mov edx , eax lea rcx , [ rip + hexvar ] xor r13d , r13d cmp dword ptr [ rcx + rdx * num ] , num sete r13b test r12d , r12d je hexvar mov esi , eax mov r8d , hexvar mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar mov edx , hexvar xor esi , esi mov edi , r13d call hexvar mov rdx , qword ptr [ rip + hexvar ] and edx , hexvar or rdx , rbp or rdx , hexvar mov qword ptr [ rip + hexvar ] , rdx test byte ptr [ rip + hexvar ] , num je hexvar lea eax , [ rbx + rbx ] and ebx , hexvar and edx , hexvar and eax , hexvar or eax , ebx or rdx , rax mov qword ptr [ rip + hexvar ] , rdx add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar mov rbp , - hexvar call hexvar mov edx , hexvar mov esi , num mov edi , num mov ebx , eax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov esi , eax mov r8d , hexvar mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar mov edx , hexvar xor esi , esi mov edi , r13d call hexvar mov rdx , qword ptr [ rip + hexvar ] and edx , hexvar or rdx , rbp jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] lea r12 , [ rsp + hexvar ] mov ebp , esi mov rbx , rdi mov esi , hexvar lea rax , [ rsp + hexvar ] lea rcx , [ rsp + num ] mov rdi , r12 mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , r12 mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] push rbx mov ebx , dword ptr [ rip + hexvar ] mov rcx , rdx and ecx , hexvar cmp rcx , hexvar je hexvar shl ebx , hexvar or ebx , dword ptr [ rip + hexvar ] shl eax , hexvar or rbx , rdx or rbx , rax mov qword ptr [ rip + hexvar ] , rbx pop rbx ret nop dword ptr [ rax ] mov edx , num cmp ebx , eax je hexvar cmp dword ptr [ rip + hexvar ] , ebx je hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rdx , - num je hexvar test dh , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar and dh , hexvar jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi call hexvar pop rbx mov qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] cmp qword ptr [ rip + hexvar ] , - num je hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar mov rsi , rax lea rdi , [ rip + hexvar ] xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] jmp hexvar
push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar lea rax , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbx mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , num mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar pop rbx ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , r13d call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor r13d , r13d cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13d , eax test eax , eax je hexvar cmp rdi , r12 je hexvar cmp dword ptr [ rdi + hexvar ] , num mov r13d , num cmovle r13d , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop shr eax , num add edx , num test al , num je hexvar cmp r13d , edx cmovl r13d , edx jmp hexvar nop word ptr [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor r13d , r13d jmp hexvar ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
,
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push rbp lea rdx , [ rip + hexvar ] mov rbp , rsi xor eax , eax push rbx lea rsi , [ rip + hexvar ] sub rsp , hexvar mov ecx , dword ptr [ rip + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx add dword ptr [ rip + hexvar ] , num call hexvar xor eax , eax lea rdi , [ rsp + num ] mov r8 , rbp mov rcx , rbx mov edx , hexvar lea rsi , [ rip + hexvar ] call hexvar cmp eax , - num je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar lea rdx , [ rip + hexvar ] mov edi , hexvar lea rsi , [ rip + hexvar ] call hexvar call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp ret call hexvar mov edi , dword ptr [ rax ] call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rbp , rax call hexvar movsxd rdx , dword ptr [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] lea rdi , [ rdx + rax + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar xor eax , eax lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rsp + hexvar ] add eax , num cmp eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jge hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , rbx mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov rsi , rbp mov byte ptr [ rax ] , hexvar lea rdi , [ rax + num ] call hexvar mov rsi , r12 mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rbx call hexvar mov rdi , rbp call hexvar mov rdi , rbp call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
,
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + num ] call hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar call hexvar mov rbx , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + num ] , hexvar mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rdx + num ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + num ] , rbx lea rbp , [ rsp + num ] nop word ptr [ rax + rax ] mov edi , hexvar call hexvar mov esi , num lea rdi , [ rax + num ] mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rbx mov rbp , rbx lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx ] , num call hexvar mov rdx , qword ptr [ rsp + num ] sub qword ptr [ rip + hexvar ] , num mov dword ptr [ rax + num ] , hexvar mov qword ptr [ rax + hexvar ] , rdx add rsp , hexvar pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax call hexvar cmp rbx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar
,
sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar call hexvar add rsp , hexvar ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
,
,
push rbp mov ebp , edi push rbx sub rsp , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rip + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rdi , rbx add rax , num mov esi , ebp mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar call hexvar add rsp , num mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret
,
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
,
,
,
,
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
sub rsp , num mov esi , num call hexvar add rsp , num cdqe ret
,
,
,
add edi , edi lea rsi , [ rip - hexvar ] jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
push rbp mov rbp , rdx push rbx mov rbx , rsi sub rsp , num test edi , edi jne hexvar mov edx , num cmp rbp , num jbe hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret mov edx , num cmp rbp , num ja hexvar xor edx , edx cmp rbp , num seta dl jmp hexvar nop word ptr cs : [ rax + rax ] sub edi , num call hexvar cmp rax , - num je hexvar mov edx , eax jmp hexvar nop word ptr [ rax + rax ] xor eax , eax jmp hexvar
,
,
,
,
,
push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] cmp al , hexvar je hexvar call hexvar lea rdi , [ rsp + hexvar ] mov rbp , rax call hexvar mov rbx , rax test rax , rax je hexvar call hexvar test rbp , rbp jle hexvar movsxd rax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num cmp rax , rbp jle hexvar mov rax , rbp shl rax , num add rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov esi , ebp mov rdi , rbx call hexvar add rsp , hexvar mov rax , rbx pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] xor edi , edi xor ebx , ebx call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi xor ebx , ebx call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax call hexvar add rsp , num jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , num call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax je hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov ecx , dword ptr [ rip + hexvar ] mov ebx , num mov ebp , eax shl ebx , cl cmp ebx , eax jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , ebx mov esi , ebp mov rdi , rax xor eax , eax call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov esi , eax call hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
sub rsp , hexvar mov rdi , rsp call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar add rsp , hexvar ret
,
push r12 push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rsi , rbx mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rdi , rax call hexvar xor edx , edx lea rsi , [ rip + hexvar ] mov rbp , rax mov rdi , rax xor eax , eax call hexvar mov edi , hexvar mov r12 , rax mov rsi , rax call hexvar mov rdi , r12 call hexvar mov rdi , rbp call hexvar jmp hexvar
,
,
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp mov rbp , rdi push rbx mov ebx , esi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] cmp byte ptr [ rdi - num ] , hexvar je hexvar cmp qword ptr [ rip + hexvar ] , rdi ja hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov edx , ebx xor esi , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbp mov rdx , rax mov rbx , rax sub rdx , rsi call hexvar lea rax , [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax movsx eax , byte ptr [ rbx ] add rsp , num pop rbx pop rbp ret nop word ptr cs : [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop xor eax , eax jmp hexvar
,
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
,
push r12 mov r12 , rsi mov rsi , rdx push rbp mov rbp , rdx push rbx mov rbx , rdi call hexvar mov rdi , qword ptr [ rbx + num ] mov rdx , rbp add rdi , qword ptr [ rbx ] mov rsi , r12 call hexvar add qword ptr [ rbx + num ] , rbp pop rbx pop rbp pop r12 ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jg hexvar mov rbx , rdi add eax , num mov rdi , rsi mov ebp , edx mov dword ptr [ rip + hexvar ] , eax call hexvar mov rsi , qword ptr [ rbx + num ] mov qword ptr [ rip + hexvar ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar je hexvar add rsi , num lea rdi , [ rip + hexvar ] call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebp call hexvar jmp hexvar nop lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rip + hexvar ] , ebp mov rsi , rbx lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , edx mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num mov qword ptr [ rip + hexvar ] , rsi mov rax , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbx + num ] lea rdi , [ rip - hexvar ] add rsi , qword ptr [ rbx ] call hexvar add qword ptr [ rbx + num ] , rax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rdi , rbp call hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar
push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rsi sub rsp , hexvar test rdi , rdi js hexvar mov rbp , rsp mov r13 , rdi mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rsp + num ] lea r12 , [ rsp + hexvar ] lea rbx , [ r13 - num ] mov rdi , r12 imul rsi , r13 call hexvar test r13 , r13 je hexvar nop dword ptr [ rax + rax ] mov rsi , rbp mov rdi , r12 sub rbx , num call hexvar cmp rbx , - num jne hexvar mov rdi , rbp call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edx , num mov rdi , r12 call hexvar mov rdi , r12 call hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] mov rbp , rsp call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , rbp call hexvar mov rdx , rbp mov rsi , r12 mov rdi , rbx lea rcx , [ rip - hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , r12 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea r12 , [ rsp + hexvar ] xor esi , esi mov rdi , r12 call hexvar jmp hexvar
,
,
mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar jmp hexvar nop dword ptr [ rax ] ret nop dword ptr [ rax ] jmp hexvar
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov rbp , rdi lea r12 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] xor esi , esi mov edi , r13d call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov esi , dword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar call hexvar test eax , eax je hexvar mov dword ptr [ rip + hexvar ] , num xor r13d , r13d cmp qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] je hexvar test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ rdi + hexvar ] test eax , eax jne hexvar call hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar jmp hexvar nop word ptr [ rax + rax ] call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r13d , eax test eax , eax je hexvar cmp rdi , r12 je hexvar cmp dword ptr [ rdi + hexvar ] , num mov r13d , num cmovle r13d , dword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] xor edx , edx test al , num jne hexvar nop shr eax , num add edx , num test al , num je hexvar cmp r13d , edx cmovl r13d , edx jmp hexvar nop word ptr [ rax + rax ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] xor r13d , r13d jmp hexvar ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
push r15 push r14 push r13 mov r13 , rdi push r12 push rbp mov rbp , rsi push rbx sub rsp , hexvar call hexvar xor esi , esi mov rdi , rbp mov r15d , dword ptr [ rip + hexvar ] mov r14 , rax mov r12d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax call hexvar mov rbx , rax mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax test eax , eax je hexvar test r14d , r14d jne hexvar mov rdi , qword ptr [ rsp ] mov esi , r15d call hexvar add rsp , hexvar mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop word ptr [ rax + rax ] mov edi , num call hexvar mov edx , hexvar mov rsi , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov edx , num cmp qword ptr [ rbx ] , rbp jne hexvar mov rdi , rbp mov dword ptr [ rsp + hexvar ] , edx call hexvar mov edx , dword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax jmp hexvar nop word ptr [ rax + rax ] lea ebp , [ r14 + num ] mov dword ptr [ rsp + hexvar ] , edx mov rdi , rbp call hexvar mov rsi , r13 mov rdi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rsp + hexvar ] add qword ptr [ rax + hexvar ] , rbp mov r12d , edx jmp hexvar
push rbp mov ebp , esi mov esi , num push rbx sub rsp , num call hexvar mov esi , ebp mov rdi , rax mov rbx , rax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov r12d , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num je hexvar mov rdi , rbx call hexvar mov esi , r12d mov rdi , qword ptr [ rax + num ] mov rbp , rax movzx r13d , byte ptr [ rax + hexvar ] call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar or r13d , hexvar mov rdi , rbx mov byte ptr [ rbp + hexvar ] , r13b call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test byte ptr [ rax + hexvar ] , num je hexvar nop movzx eax , byte ptr [ rbp + hexvar ] and eax , hexvar or eax , num mov byte ptr [ rbp + hexvar ] , al jmp hexvar
,
sub rsp , num call hexvar mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num ret
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
,
,
,
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
movzx eax , byte ptr [ rdi ] test al , num jne hexvar or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar ret mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar sub rsp , num call hexvar mov rdi , rax movzx eax , byte ptr [ rax ] or byte ptr [ rdi + num ] , num test al , hexvar jne hexvar add rsp , num ret nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] movzx eax , byte ptr [ rdi ] jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
,
,
push rbp push rbx mov rbx , rdi sub rsp , hexvar movzx eax , byte ptr [ rdi + hexvar ] cmp al , num je hexvar cmp al , num je hexvar lea rsi , [ rip + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rsi , qword ptr [ rip + hexvar ] xor edx , edx lea rcx , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov rbp , rax call hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx ] , rax add rsp , hexvar mov rax , rbp pop rbx pop rbp ret nop dword ptr [ rax ] cmp qword ptr [ rdi + hexvar ] , num mov edx , num lea rsi , [ rip + hexvar ] jle hexvar xor edi , edi mov rbx , rsp call hexvar mov rdi , rax xor eax , eax call hexvar movzx eax , word ptr [ rsp + hexvar ] mov rdi , rbx mov qword ptr [ rsp + hexvar ] , num and ax , hexvar or eax , num mov word ptr [ rsp + hexvar ] , ax call hexvar movzx eax , byte ptr [ rsp + hexvar ] lea rsi , [ rip + hexvar ] cmp al , num jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov rbp , qword ptr [ rdi ] add rsp , hexvar pop rbx mov rax , rbp pop rbp ret nop dword ptr [ rax ] mov rdi , rbp call hexvar jmp hexvar
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rbp push rbx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num mov rdi , rbx call hexvar mov rdi , rbx mov rbp , rax call hexvar test eax , eax je hexvar test rbp , rbp jne hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov rdx , qword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax pop rbx xor eax , eax pop rbp jmp hexvar nop dword ptr [ rax + rax ] add rsp , num pop rbx pop rbp ret ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
,
,
push rbx nop dword ptr [ rax ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rax movzx ebx , byte ptr [ rdx ] call hexvar cmp bl , hexvar je hexvar pop rbx jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar pop rbx jmp hexvar
push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] test r12 , r12 je hexvar mov rbx , qword ptr [ r12 + hexvar ] test rbx , rbx je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdi mov rdi , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp call hexvar mov rbx , rax mov rdi , rbx call hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rbx mov rax , rbx pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] cmp rbp , rax je hexvar cmp rax , rdx je hexvar mov rax , qword ptr [ rbp + hexvar ] lea rcx , [ rip + hexvar ] xor edx , edx mov rsi , rbp mov rdi , qword ptr [ rax + num ] call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar or dword ptr [ rax + hexvar ] , hexvar jmp hexvar nop dword ptr [ rax ] cmp rax , rdx jne hexvar mov rsi , rbp mov rdi , rbx call hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax jne hexvar nop dword ptr [ rax + rax ] add rbp , num movzx eax , byte ptr [ rbp ] cmp byte ptr [ rdx + rax ] , num mov r12 , rax je hexvar mov byte ptr [ rbp ] , num lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar je hexvar mov rdi , rbx call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp dl , hexvar jne hexvar lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rax + num ] cmp byte ptr [ r13 + rdx ] , num mov rdi , rbx jne hexvar call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor r12d , r12d xor ebp , ebp jmp hexvar nop word ptr [ rax + rax ] add rsp , num movsx esi , r12b mov rdi , rbp pop rbx pop rbp pop r12 pop r13 jmp hexvar
,
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
,
,
mov eax , dword ptr [ rdi + hexvar ] sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar xor esi , esi cmp qword ptr [ rdi + hexvar ] , num mov rdi , rax sete sil jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr cs : [ rax + rax ] xor eax , eax ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar lea r12 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rbx cmp qword ptr [ rax + hexvar ] , num je hexvar call hexvar mov esi , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rbp , rax test rax , rax je hexvar cmp byte ptr [ rax + num ] , hexvar je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx mov rdx , r12 lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax ] call hexvar test eax , eax je hexvar jmp hexvar nop cmp byte ptr [ rax + num ] , hexvar jne hexvar lea r13 , [ rax + num ] mov rdi , r13 call hexvar lea rdi , [ rbp + num ] mov rsi , r13 lea rdx , [ rax + num ] call hexvar jmp hexvar
,
,
push rbx mov rsi , qword ptr [ rip + hexvar ] mov rbx , rdi call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx pop rbx jmp hexvar
,
,
,
,
,
mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] jmp hexvar
,
,
mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbp , qword ptr [ rax ] test rbp , rbp je hexvar lea r13 , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov rdi , r12 call hexvar cmp rax , qword ptr [ rbx ] jae hexvar mov rbp , qword ptr [ rbp + hexvar ] test rbp , rbp je hexvar mov r12 , qword ptr [ rbp + hexvar ] mov rbx , qword ptr [ rbp + hexvar ] test r12 , r12 je hexvar test rbx , rbx jne hexvar mov rbp , rbx test rbp , rbp jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar cmp rax , qword ptr [ rbx ] je hexvar jmp hexvar nop mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rbx ] mov rbx , rax cmp rdx , qword ptr [ rax ] jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , r13 lea rsi , [ rip + hexvar ] mov rdi , r12 call hexvar jmp hexvar nop cmp qword ptr [ rbx + hexvar ] , num jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop word ptr cs : [ rax + rax ] ret lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push r12 push rbp push rbx mov rbx , rsi xor esi , esi call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] mov rbp , rax call hexvar mov rdi , rbp mov r12 , rax call hexvar mov qword ptr [ rbx ] , r12 mov rdi , rbx mov esi , num mov qword ptr [ rbx + num ] , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , - num call hexvar pop rbx mov eax , num pop rbp pop r12 ret nop dword ptr [ rax ] call hexvar mov rbp , rax call hexvar mov r12 , rax jmp hexvar
push r12 mov r12d , esi push rbp mov rbp , rdi push rbx sub rsp , hexvar cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar mov rdi , rbp call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar test r12d , r12d je hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test r12d , r12d je hexvar js hexvar mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov esi , num call hexvar mov rbx , rax jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar call hexvar sub qword ptr [ rip + hexvar ] , num add rsp , hexvar pop rbx pop rbp pop r12 ret nop mov rbx , rsp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar xor edx , edx mov rsi , rbx mov rdi , rax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , rbp call hexvar mov rbx , rax test byte ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , rbx mov qword ptr [ rax + hexvar ] , rbx mov rsi , rax mov qword ptr [ rax + hexvar ] , rdx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar jmp hexvar
sub rsp , num mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
,
sub rsp , num mov rdx , qword ptr [ rdi + num ] test byte ptr [ rdi ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rdx je hexvar call hexvar mov rdx , qword ptr [ rax + num ] mov rdi , rax mov eax , dword ptr [ rdx + hexvar ] test al , hexvar jne hexvar test ah , num jne hexvar mov rcx , qword ptr [ rip + hexvar ] test byte ptr [ rdi ] , num jne hexvar cmp qword ptr [ rdx + hexvar ] , rcx je hexvar and al , hexvar or eax , num mov dword ptr [ rdx + hexvar ] , eax add rsp , num ret nop dword ptr [ rax ] cmp rdx , rcx jne hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rcx + num ] cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar mov rdx , rcx mov rsi , qword ptr [ rdx + num ] lea rdi , [ rip + hexvar ] xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] jmp hexvar nop word ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar add rsp , num mov rdi , rax xor eax , eax jmp hexvar
push rbx xor esi , esi mov rbx , rdi sub rsp , hexvar call hexvar test rax , rax je hexvar add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , rbx call hexvar mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax jne hexvar add rsp , hexvar mov rdi , rbx lea rcx , [ rip + hexvar ] xor edx , edx lea rsi , [ rip + hexvar ] pop rbx jmp hexvar
push r14 push r13 push r12 mov r12 , rsi push rbp mov rbp , rcx push rbx mov rbx , rdx add qword ptr [ rip + hexvar ] , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r14 , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax sub rcx , rdx cmp rcx , hexvar jbe hexvar mov r13 , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rax lea rdx , [ rcx + rsi ] not rsi mov rcx , qword ptr [ rip + hexvar ] and rdx , rsi mov rsi , rdx sub rdi , rcx mov qword ptr [ rip + hexvar ] , rdx sub rsi , rcx cmp rsi , rdi jbe hexvar mov qword ptr [ rip + hexvar ] , rax mov rdx , rax mov qword ptr [ r13 + hexvar ] , rbp mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , r14 and edx , hexvar mov qword ptr [ r13 + num ] , r12 or edx , num mov qword ptr [ r13 + hexvar ] , rbx mov byte ptr [ r13 ] , dl mov rdx , r13 call hexvar pop rbx mov rax , r13 pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rdx + hexvar ] cmp rcx , r13 jne hexvar or byte ptr [ rip + hexvar ] , num jmp hexvar
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar jmp hexvar nop jmp hexvar
,
,
,
,
,
push r15 push r14 push r13 mov r13d , edx push r12 mov r12 , rsi mov esi , num push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rip + hexvar ] mov r15d , dword ptr [ rip + hexvar ] mov rdi , rbp call hexvar test r13d , r13d jne hexvar mov rdi , rbx call hexvar cmp rax , rbp je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar sub rsp , num mov r9 , r12 mov r8 , rbx push num xor ecx , ecx mov edx , num mov esi , num mov edi , num call hexvar mov rdi , rbx mov byte ptr [ rax ] , num call hexvar mov rsi , rbp mov rdi , rbx mov qword ptr [ rax + hexvar ] , r12 call hexvar add rsp , hexvar mov esi , r15d mov rdi , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 jmp hexvar nop dword ptr [ rax + rax ] mov esi , r13d mov rdi , rbp call hexvar xor edx , edx xor esi , esi mov edi , r13d call hexvar mov rdi , rbx call hexvar cmp rax , rbp jne hexvar mov rdi , rbx call hexvar mov qword ptr [ rax + hexvar ] , num jmp hexvar
,
push rbx mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar mov eax , num shl rax , cl test eax , hexvar jne hexvar test al , hexvar je hexvar mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test byte ptr [ rax ] , num je hexvar call hexvar test byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] nop dword ptr [ rax ] call hexvar test byte ptr [ rax ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] nop dword ptr [ rax ] lea edx , [ rax - hexvar ] cmp edx , hexvar ja hexvar mov eax , hexvar bt rax , rdx jae hexvar xor eax , eax pop rbx ret nop word ptr [ rax + rax ] lea edx , [ rax - hexvar ] cmp edx , num jbe hexvar lea edx , [ rax - hexvar ] cmp edx , hexvar jbe hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar test byte ptr [ rax + hexvar ] , num je hexvar mov eax , num pop rbx ret nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test byte ptr [ rax + hexvar ] , num je hexvar jmp hexvar
,
lea eax , [ rdx - num ] mov r9d , num cmp eax , num ja hexvar lea r8 , [ rip + hexvar ] mov r9d , dword ptr [ r8 + rax * num ] xor r8d , r8d jmp hexvar
push r13 push r12 mov r12d , esi push rbp mov rbp , rdi push rbx movsx ebx , dx sub rsp , hexvar movzx eax , byte ptr [ rcx + hexvar ] cmp al , num je hexvar ja hexvar cmp al , num jne hexvar test r8d , r8d jne hexvar mov edx , ebx mov esi , r12d mov rdi , rbp call hexvar mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] sub eax , hexvar cmp al , num jbe hexvar mov rdi , rcx mov dword ptr [ rsp + num ] , r9d mov dword ptr [ rsp ] , r8d call hexvar sub rsp , num mov edx , ebx mov esi , r12d mov r9d , dword ptr [ rsp + hexvar ] mov rcx , rax mov rdi , rbp push r9 mov r8d , dword ptr [ rsp + hexvar ] mov r9d , r8d xor r8d , r8d call hexvar pop rdx pop rcx jmp hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rcx + hexvar ] lea r13 , [ rsp + hexvar ] xor eax , eax mov dword ptr [ rsp + hexvar ] , r9d lea rsi , [ rip + hexvar ] mov rdi , r13 mov dword ptr [ rsp + num ] , r8d mov qword ptr [ rsp ] , rcx call hexvar mov rdi , r13 call hexvar lea rsi , [ rip + hexvar ] mov r13 , rax mov rdi , rax call hexvar lea rsi , [ rip + hexvar ] mov rdi , r13 call hexvar mov rcx , qword ptr [ rsp ] mov rdi , r13 mov rsi , qword ptr [ rcx + hexvar ] call hexvar mov rcx , qword ptr [ rsp ] mov r9d , dword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + num ] mov byte ptr [ rcx + hexvar ] , num mov qword ptr [ rcx ] , r13 mov qword ptr [ rcx + hexvar ] , num jmp hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rbp + num ] test byte ptr [ rbp ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rbp call hexvar mov rbp , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rsi , rbp mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rbp , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov r12d , hexvar jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num je hexvar mov rdi , rbx call hexvar mov esi , r12d mov rdi , qword ptr [ rax + num ] mov rbp , rax movzx r13d , byte ptr [ rax + hexvar ] call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar jbe hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov rdi , rbx call hexvar test byte ptr [ rax ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] and eax , hexvar cmp eax , hexvar ja hexvar or r13d , hexvar mov rdi , rbx mov byte ptr [ rbp + hexvar ] , r13b call hexvar mov rbx , rax test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test byte ptr [ rax + hexvar ] , num je hexvar nop movzx eax , byte ptr [ rbp + hexvar ] and eax , hexvar or eax , num mov byte ptr [ rbp + hexvar ] , al jmp hexvar
,
push rbp push rbx mov rbx , rdi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num je hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] xor edx , edx mov esi , hexvar mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] or dword ptr [ rax + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] call hexvar cmp eax , num je hexvar mov edi , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop word ptr [ rax + rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
,
,
push r13 mov r13d , r8d push r12 mov r12 , rdi mov rdi , rcx push rbp mov ebp , esi push rbx mov rbx , rdx mov edx , esi xor esi , esi sub rsp , num call hexvar add rsp , num mov r8d , r13d mov edx , ebp mov rcx , rax lea rax , [ rbx + hexvar ] mov rdi , rbx pop rbx mov rsi , rcx pop rbp mov rcx , r12 pop r12 sub rsi , rax pop r13 jmp hexvar
,
,
,
,
,
,
push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar jne hexvar lea rcx , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rcx movzx eax , byte ptr [ rdx + num ] mov rdx , rcx lea rcx , [ rip + hexvar ] movzx esi , al test byte ptr [ rcx + rsi ] , num jne hexvar cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rdx + num ] test byte ptr [ rcx + rax ] , num je hexvar lea rdi , [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + num ] mov byte ptr [ rsp + hexvar ] , num mov ebx , eax call hexvar movsx edi , bl cdqe mov qword ptr [ rsp + hexvar ] , rax call hexvar movzx eax , byte ptr [ rsp + hexvar ] cmp al , num je hexvar cmp al , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] test eax , eax js hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar xor eax , eax pop rbx ret nop dword ptr [ rax ] lea rsi , [ rsp + hexvar ] xor edx , edx xor edi , edi call hexvar jmp hexvar
,
,
push rbp mov ebp , esi push rbx mov rbx , rdi sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] and byte ptr [ rip + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] lea esi , [ rcx + rbp ] cmp esi , edx jle hexvar add edx , num mov dword ptr [ rip + hexvar ] , edx movsxd rsi , edx test rax , rax je hexvar mov rdi , rax call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax add ecx , num movsxd rdx , ecx mov byte ptr [ rax + rdx - num ] , bl shr rbx , num add rdx , num cmp ebp , num je hexvar mov byte ptr [ rax + rdx - num ] , bl mov ecx , edx mov dword ptr [ rip + hexvar ] , ecx add rsp , num pop rbx pop rbp ret nop dword ptr [ rax + rax ] mov qword ptr [ rip + hexvar ] , num call hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , rsi call hexvar mov ecx , dword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar
push rbx sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar mov ebx , eax cmp eax , - num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar add rax , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , - num je hexvar call hexvar mov eax , ebx and eax , hexvar cmp eax , hexvar je hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov edi , ebx mov esi , num or dil , hexvar movsxd rdi , edi call hexvar movsxd rax , dword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebx or byte ptr [ rip + hexvar ] , num sub rcx , rax mov qword ptr [ rip + hexvar ] , rcx add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop mov dword ptr [ rsp + hexvar ] , num jmp hexvar
,
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rax + hexvar ] mov rbx , rsi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , edi mov rdi , rax mov dword ptr [ rax + hexvar ] , ecx mov qword ptr [ rax + hexvar ] , r8 mov qword ptr [ rax + hexvar ] , r9 mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rbp , qword ptr [ rip + hexvar ] lea rdi , [ rbp + hexvar ] call hexvar mov rdi , rbx mov qword ptr [ rbp + hexvar ] , rax call hexvar mov rax , r12 pop rbx pop rbp pop r12 ret
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] push r12 push rbp push rbx mov r12 , qword ptr [ rdi + hexvar ] cmp rax , rdi je hexvar cmp dword ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov ebp , r12d nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx + hexvar ] cmp rbx , rax je hexvar test rbx , rbx je hexvar add ebp , dword ptr [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] add ebp , eax mov rax , qword ptr [ rip + hexvar ] cmp rbx , rax jne hexvar call hexvar add ebp , eax cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp ebp , r12d jb hexvar mov eax , ebp pop rbx pop rbp sub eax , r12d pop r12 ret nop dword ptr [ rax ] pop rbx xor eax , eax pop rbp pop r12 ret nop word ptr [ rax + rax ] mov rdi , rbx call hexvar add ebp , eax jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
push rbp mov edx , num mov rbp , rsi shr rsi , hexvar push rbx mov rbx , rdi sub rsp , num call hexvar add rsp , num lea rdi , [ rbx + num ] mov rsi , rbp pop rbx mov edx , num pop rbp jmp hexvar
,
,
,
,
,
,
,
movabs rcx , hexvar push rbp mov ebp , edi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rax + hexvar ] , edi mov edi , num mov dword ptr [ rax + hexvar ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] xor edx , edx mov edi , ebp mov rbx , qword ptr [ rax + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movabs rdx , hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rdx add rsp , num pop rbx pop rbp ret
,
push r12 mov r12d , hexvar push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar je hexvar xor r12d , r12d cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax cmp byte ptr [ rdx + num ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov edi , num mov rbp , rsp mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , num call hexvar mov rsi , rbp mov edx , num xor edi , edi call hexvar mov edi , num call hexvar mov rsi , r12 mov edx , num mov rdi , rax mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp mov r9d , hexvar mov r8d , num mov edx , num lea rax , [ rdi + hexvar ] sub rbx , rax mov rsi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
xor edi , edi jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov edx , hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov edx , hexvar mov ecx , hexvar mov edi , num mov ebx , eax xor eax , eax mov esi , ebx call hexvar shr rax , hexvar mov rdx , rax cmp rax , hexvar jne hexvar cmp ebx , num je hexvar lea rax , [ rip + hexvar ] xor edi , edi mov esi , num cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar nop mov qword ptr [ rip + hexvar ] , hexvar pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
xor edi , edi jmp hexvar
push rbp mov ecx , hexvar mov edx , hexvar mov ebp , edi push rbx mov r9d , hexvar mov r8d , hexvar xor eax , eax mov esi , hexvar mov edi , hexvar sub rsp , num push hexvar push hexvar call hexvar pop rdx pop rcx cmp eax , hexvar je hexvar mov ebx , eax mov esi , eax mov ecx , hexvar xor eax , eax mov edx , hexvar mov edi , num call hexvar test eax , eax je hexvar mov qword ptr [ rip + hexvar ] , num xor edx , edx mov esi , num add rsp , num mov edi , ebp pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax jne hexvar xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov qword ptr [ rip + hexvar ] , num mov edx , num mov esi , num jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov edx , num xor edi , edi mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret mov qword ptr [ rip + hexvar ] , num xor edx , edx xor esi , esi add rsp , num mov edi , ebp pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] xor eax , eax mov ecx , hexvar mov edx , hexvar mov esi , ebx mov edi , num call hexvar test eax , eax je hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov qword ptr [ rip + hexvar ] , num mov edx , num xor esi , esi jmp hexvar
,
,
,
,
,
,
,
,
,
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar shr rax , hexvar cmp eax , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov r8d , eax mov ecx , eax xor esi , esi xor edi , edi sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
,
,
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar shr rax , hexvar cmp eax , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop word ptr [ rax + rax ] mov r8d , eax mov ecx , eax mov esi , num mov edi , num sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop dword ptr [ rax ] and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
mov edx , hexvar sub rsp , num mov ecx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar jle hexvar mov rdi , rax shr rdi , hexvar mov rcx , rdi cmp edi , edx jae hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax + rax ] xor esi , esi mov r8d , edi cmp eax , num mov edi , num sete sil sub r8d , edx add rsp , num xor edx , edx jmp hexvar nop and byte ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar add rsp , num jmp hexvar
,
,
sub rsp , num call hexvar add rsp , num jmp hexvar
,
,
push rbx lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax mov edx , hexvar test byte ptr [ rip + hexvar ] , num je hexvar mov esi , num mov edi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov r8d , hexvar xor eax , eax mov esi , ebx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rdi , rax and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] mov esi , dword ptr [ rdx + rcx * num + num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rsi xor esi , esi cmp dword ptr [ rdx + rbx * num ] , num sete sil pop rbx jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov edx , hexvar test byte ptr [ rip + hexvar ] , num jne hexvar xor edi , edi mov esi , num xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov edi , num mov ebx , eax mov r8d , hexvar xor eax , eax mov esi , ebx call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num shr rax , hexvar and ecx , hexvar lea rcx , [ rcx + rcx * num ] mov ecx , dword ptr [ rdx + rcx * num ] mov rdx , rax lea rax , [ rip + hexvar ] cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil xor esi , esi mov qword ptr [ rip + hexvar ] , rcx jmp hexvar
,
,
,
,
,
,
xor edx , edx mov esi , hexvar mov edi , num jmp hexvar
,
,
,
,
,
sub rsp , num mov ecx , hexvar mov edx , hexvar xor eax , eax mov esi , hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov dword ptr [ rip + hexvar ] , num and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rcx * num ] mov edx , ecx or ecx , hexvar or edx , hexvar cmp eax , num cmove rcx , rdx shr rax , hexvar xor edi , edi mov rdx , rax mov qword ptr [ rip + hexvar ] , rcx add rsp , num jmp hexvar
push rbx xor edi , edi mov edx , hexvar mov esi , num xor eax , eax call hexvar mov edx , hexvar mov edi , num mov r8d , hexvar mov ebx , eax mov ecx , hexvar xor eax , eax mov esi , ebx call hexvar mov edx , hexvar mov esi , num shr rax , hexvar cmp eax , hexvar mov eax , hexvar cmove edx , eax lea rax , [ rip + hexvar ] xor edi , edi cmp dword ptr [ rax + rbx * num ] , num pop rbx sete dil jmp hexvar
,
,
,
,
,
,
,
,
,
mov rax , qword ptr [ rip + hexvar ] and eax , hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp rax , num je hexvar lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] push rbx mov ebx , edi cmp rax , num je hexvar lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar je hexvar pop rbx ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar cmp ebx , hexvar jne hexvar pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
xor edi , edi jmp hexvar
,
,
,
,
,
,
test byte ptr [ rip + hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] and qword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rip + hexvar ] , eax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
sub rsp , num mov eax , dword ptr [ rip + hexvar ] test byte ptr [ rip + hexvar ] , num mov edx , eax cmovne edx , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar shl eax , num shl edx , hexvar or rax , qword ptr [ rip + hexvar ] or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar mov dword ptr [ rip + hexvar ] , hexvar and eax , hexvar or rax , hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar movzx eax , word ptr [ rip + hexvar ] and ax , hexvar cmp ax , hexvar je hexvar mov edi , num add rsp , num jmp hexvar nop word ptr [ rax + rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop dword ptr [ rax ] test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret nop test byte ptr [ rip + hexvar ] , hexvar jne hexvar jmp hexvar nop mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov ecx , hexvar xor edx , edx mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov r8d , hexvar mov esi , eax mov ebx , eax mov edi , num xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar mov edx , dword ptr [ rdx + rcx * num + num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , hexvar pop rbx or qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] mov edx , dword ptr [ rdx + rcx * num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar cmp ebx , hexvar jne hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbx mov ecx , hexvar xor edx , edx mov esi , hexvar mov edi , hexvar xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov r8d , hexvar mov esi , eax mov ebx , eax mov edi , num xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , rax and edx , hexvar lea rcx , [ rdx + rdx * num ] lea rdx , [ rip + hexvar ] cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar mov edx , dword ptr [ rdx + rcx * num + num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , hexvar pop rbx or qword ptr [ rip + hexvar ] , rax ret nop word ptr [ rax + rax ] mov edx , dword ptr [ rdx + rcx * num ] and eax , hexvar mov dword ptr [ rip + hexvar ] , num or rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar cmp ebx , hexvar jne hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
xor edi , edi jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or rax , qword ptr [ rip + hexvar ] shl edx , hexvar or rax , rdx lea edx , [ rcx - num ] shl edx , hexvar movsxd rdx , edx or rax , rdx mov qword ptr [ rip + hexvar ] , rax test byte ptr [ rip + hexvar ] , num jne hexvar ret nop dword ptr [ rax ] mov edi , num jmp hexvar
sub rsp , num mov edi , dword ptr [ rip + hexvar ] xor esi , esi call hexvar mov edi , hexvar add rsp , num jmp hexvar
sub rsp , num mov eax , dword ptr [ rip + hexvar ] mov r8d , edi test eax , eax jne hexvar test dil , num je hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar shl eax , hexvar cdqe or qword ptr [ rip + hexvar ] , rax nop dword ptr [ rax + rax ] test r8b , num jne hexvar and r8d , num jne hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar xor edi , edi mov edx , num mov rsi , rax call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 mov r12d , hexvar push rbp push rbx sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rdx ] cmp al , hexvar je hexvar xor r12d , r12d cmp al , hexvar jne hexvar lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax cmp byte ptr [ rdx + num ] , hexvar je hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov edi , num mov rbp , rsp mov qword ptr [ rip + hexvar ] , rax call hexvar mov edi , num call hexvar mov rsi , rbp mov edx , num xor edi , edi call hexvar mov edi , num call hexvar mov rsi , r12 mov edx , num mov rdi , rax mov rbx , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , rbp mov r9d , hexvar mov r8d , num mov edx , num lea rax , [ rdi + hexvar ] sub rbx , rax mov rsi , rbx call hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar
,
,
,
,
,
push rbx sub rsp , hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar mov ebx , eax cmp eax , - num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rax ] cmp dl , hexvar jne hexvar lea rcx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rcx movzx edx , byte ptr [ rax + num ] mov rax , rcx cmp dl , hexvar jne hexvar add rax , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , - num je hexvar call hexvar mov eax , ebx and eax , hexvar cmp eax , hexvar je hexvar cmp dword ptr [ rip + hexvar ] , hexvar jne hexvar mov edi , ebx mov esi , num or dil , hexvar movsxd rdi , edi call hexvar movsxd rax , dword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebx or byte ptr [ rip + hexvar ] , num sub rcx , rax mov qword ptr [ rip + hexvar ] , rcx add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rax xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rax xor eax , eax call hexvar add rsp , hexvar pop rbx ret nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov rsi , rax xor eax , eax call hexvar call hexvar add rsp , hexvar pop rbx ret nop mov dword ptr [ rsp + hexvar ] , num jmp hexvar
push r12 push rbp mov ebp , esi push rbx mov rbx , rdi mov r12 , qword ptr [ rdi ] call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test byte ptr [ rdx ] , num jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp edx , ebp je hexvar mov ecx , ebp mov rdx , rax mov rsi , r12 mov rdi , rbx call hexvar cmp eax , - num je hexvar pop rbx pop rbp pop r12 ret nop word ptr cs : [ rax + rax ] pop rbx mov eax , dword ptr [ rax + num ] pop rbp pop r12 ret mov eax , hexvar jmp hexvar nop mov qword ptr [ rbx ] , r12 jmp hexvar
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar xor ebp , ebp lea r13 , [ rip + hexvar ] nop dword ptr [ rax ] mov rdx , qword ptr [ r13 ] mov eax , ebp mov rcx , qword ptr [ rdx + rax * num ] test rcx , rcx je hexvar mov rax , rcx mov ebx , num nop dword ptr [ rax + rax ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] and edx , num mov rax , qword ptr [ rax + hexvar ] cmp edx , num sbb rdx , rdx and rdx , hexvar lea rbx , [ rdx + rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] xor esi , esi add ebp , num mov r12 , qword ptr [ rax + hexvar ] mov rdi , r12 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , r12 call hexvar mov rdi , rbx call hexvar mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax call hexvar cmp dword ptr [ rip + hexvar ] , ebp ja hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 jmp hexvar nop word ptr [ rax + rax ] mov ebx , num jmp hexvar
,
mov rdi , qword ptr [ rip + hexvar ] xor edx , edx lea rsi , [ rip - hexvar ] jmp hexvar
,
,
push rbp mov rbp , rsi push rbx mov rbx , rdi sub rsp , num test byte ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rdi + num ] , rax je hexvar call hexvar mov rbx , rax mov rax , qword ptr [ rbp + num ] test byte ptr [ rbp ] , num je hexvar cmp qword ptr [ rip + hexvar ] , rax je hexvar mov rdi , rbp call hexvar mov rbp , rax mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] mov rsi , rbp mov rdi , rbx and eax , hexvar or dword ptr [ rdx + hexvar ] , eax call hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rbp , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ rbp + num ] jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rdi + hexvar ] jmp hexvar
,
,
,
,
push rbp push rbx sub rsp , hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax jne hexvar nop word ptr [ rax + rax ] add rbx , num movzx eax , byte ptr [ rbx ] cmp byte ptr [ rdx + rax ] , num mov rbp , rax je hexvar mov byte ptr [ rbx ] , num mov rdi , rsp call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar xor esi , esi lea rdi , [ rip + hexvar ] call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax + rax ] xor ebp , ebp xor ebx , ebx jmp hexvar nop word ptr cs : [ rax + rax ] movsx esi , bpl mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
,
,
,
,
,
,
,
push rbp push rbx sub rsp , num call hexvar mov edx , num xor edi , edi sub rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rbx , rax mov rbp , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] movabs rdx , hexvar mov rsi , rax mov rax , rbx imul rdx mov rax , rbx sar rax , hexvar sar rdx , hexvar mov rcx , rdx mov rdx , rbp sub rcx , rax imul rax , rcx , hexvar sub rbx , rax xor eax , eax mov r8 , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num pop rbx pop rbp jmp hexvar
push r13 mov r13 , - hexvar push r12 mov r12d , hexvar push rbp push rbx mov rbx , rdi sub rsp , num test rdx , rdx je hexvar lea r12 , [ rdx - num ] neg rdx mov r13 , rdx test rsi , rsi mov eax , hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , rbx cmove rsi , rax mov qword ptr [ rbx ] , rsi call hexvar mov rbp , rax test rax , rax je hexvar lea rax , [ rbp + r12 + hexvar ] mov qword ptr [ rbx + num ] , rbp and rax , r13 mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx ] add rax , rbp mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num mov qword ptr [ rbp + num ] , num and byte ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] lea rax , [ rip + hexvar ] call qword ptr [ rax ] jmp hexvar
,
,
push rbp push rbx sub rsp , num test rdi , rdi je hexvar mov rbp , rdi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rbx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] sub rax , rdi cmp rbx , rax ja hexvar mov rdx , rbx mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] add rbx , qword ptr [ rip + hexvar ] cmp rbx , rdi je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rbx + rdx ] not rdx and rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov rsi , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rdx sub rsi , rcx sub rbx , rcx cmp rsi , rbx jbe hexvar mov qword ptr [ rip + hexvar ] , rdx mov rax , rdx mov qword ptr [ rip + hexvar ] , rax call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar movzx edx , byte ptr [ rax ] test dl , dl je hexvar mov rcx , rax lea rsi , [ rip + hexvar ] nop movzx edx , byte ptr [ rsi + rdx ] add rcx , num mov byte ptr [ rcx - num ] , dl movzx edx , byte ptr [ rcx ] test dl , dl jne hexvar add rsp , num pop rbx pop rbp ret nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] or byte ptr [ rip + hexvar ] , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
,
push rbp push rbx sub rsp , num call hexvar lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar lea rax , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rax call hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov r8 , rbp mov rcx , rbx call hexvar mov r8 , rbp mov rcx , rbx xor edx , edx movsxd rsi , dword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] nop dword ptr [ rax ] add rdx , num mov byte ptr [ rcx + rax ] , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rdi + hexvar ] , rcx mov qword ptr [ rdi + hexvar ] , r8 jmp hexvar
push rbp mov rbp , rdi push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] movsxd rax , dword ptr [ rbx + num ] lea edx , [ rax + num ] cmp eax , hexvar jg hexvar mov dword ptr [ rbx + num ] , edx mov qword ptr [ rbx + rax * num + hexvar ] , rbp xor eax , eax add rsp , num pop rbx pop rbp ret nop word ptr [ rax + rax ] mov edi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov edx , num mov rbx , rax mov dword ptr [ rax + num ] , num mov qword ptr [ rip + hexvar ] , rax xor eax , eax jmp hexvar nop dword ptr [ rax ] lea rcx , [ rip - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , hexvar jmp hexvar
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdx , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdx , rax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edx , num jmp hexvar mov edx , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] call rax mov rax , - num leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar cmp dword ptr [ rbp - num ] , num setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov r8d , num mov ecx , num lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar movsx esi , byte ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8d , esi mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax sete al movzx eax , al xor eax , edx test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] test eax , eax jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax sete al movzx eax , al xor eax , edx test eax , eax setne al leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test al , al je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov ecx , num mov edx , num mov rsi , rax call hexvar test eax , eax sete al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar movzx eax , al test eax , eax setne al leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdx , [ rip - hexvar ] jmp hexvar lea rdx , [ rip - hexvar ] mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdx , [ rip - hexvar ] jmp hexvar lea rdx , [ rip - hexvar ] mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdx , [ rip - hexvar ] jmp hexvar lea rdx , [ rip - hexvar ] mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rdx , [ rip - hexvar ] jmp hexvar lea rdx , [ rip - hexvar ] mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip - hexvar ] jmp hexvar lea rax , [ rip - hexvar ] lea r8 , [ rip - hexvar ] mov rcx , rdx mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
,
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax je hexvar mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num mov esi , num mov edi , num call hexvar test eax , eax je hexvar mov byte ptr [ rbp - num ] , num nop cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov eax , num leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2ss xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2ss xmm0 , rdx addss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rax + num ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar mov eax , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , xmmword ptr [ rip + hexvar ] jae hexvar movss xmm0 , dword ptr [ rbp - num ] cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 cvttss2si rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar test rcx , rcx je hexvar mov eax , num test rdx , rdx jns hexvar mov eax , num and eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov qword ptr [ rbp - num ] , hexvar or qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , - num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 divsd xmm1 , xmm0 movapd xmm0 , xmm1 mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar movabs rdi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar movabs rdi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , - num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , - num jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov r8 , rbx mov rcx , rdx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rdx , - num mov rsi , rcx mov edi , eax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov r8 , - num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - hexvar ] , al jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movsx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , - num mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , - num mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rcx + hexvar ] mov rcx , rdx mov rdx , rax call hexvar test eax , eax jns hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx nop leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdi , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp mov edi , hexvar call hexvar pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov ecx , num mov rax , qword ptr [ rbp - num ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num test rax , rax jns hexvar mov ecx , num mov rax , rcx and eax , num test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar movzx edx , byte ptr [ rbp - hexvar ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - hexvar ] , al jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop r12 pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov byte ptr [ rbp - hexvar ] , al lea rax , [ rip + hexvar ] mov r8d , dword ptr [ rax ] movsx edx , byte ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r9d , r8d mov r8 , rdi mov edi , eax call hexvar call hexvar
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar or dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax setne al mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp byte ptr [ rbp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , num mov esi , num mov edi , eax call hexvar cmp rax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov esi , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov esi , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsi mov rsi , rdx mov rdx , rsi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , eax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al sete al test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , num cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax movzx eax , byte ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + num ] test al , al sete al test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar cmp qword ptr [ rbp - hexvar ] , hexvar cmovae rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num setne al mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rdx mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8 , rax lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , hexvar and eax , hexvar or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , num and eax , hexvar or eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , num call hexvar xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , num test al , al jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar cmp dword ptr [ rbp - num ] , - hexvar je hexvar call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , edx mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , ecx mov dword ptr [ rax + rcx * num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num and eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rbp - num ] add rdx , num mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rdx mov rdi , rax call hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , hexvar and eax , hexvar or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] shl eax , num and eax , hexvar or eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov edx , edx add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , num mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov edi , eax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r15 push r14 mov r14d , edx push r13 push r12 mov r12 , rdi mov edi , num push rbp push rbx mov rbx , rsi sub rsp , hexvar mov r13 , rsp mov rdx , r13 call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r14d , r14d jne hexvar mov rdi , r12 call hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] mov rsi , r13 mov rdi , rbx call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r15 , rax call hexvar mov rdx , r15 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar test r14d , r14d je hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov edi , dword ptr [ rax ] call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] mov r13 , rax call hexvar mov rdx , r13 mov rsi , rbx mov rdi , rax xor eax , eax call hexvar mov rdi , r12 call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar mov edx , dword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx and esi , hexvar call hexvar jmp hexvar
,
,
,
,
push r15 lea r15 , [ rsi + hexvar ] push r14 push r13 mov r13 , rcx push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi add rdi , hexvar lea rax , [ rbx + hexvar ] mov rsi , rax sub rsp , hexvar mov r8 , qword ptr [ rcx + hexvar ] mov rcx , rdx mov rdx , r15 mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ r13 + hexvar ] test rax , rax je hexvar mov r14 , qword ptr [ rax ] test r14 , r14 jne hexvar jmp hexvar nop dword ptr [ rax ] mov r14 , qword ptr [ r14 ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax jne hexvar nop dword ptr [ rax ] xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num je hexvar mov r14 , qword ptr [ r13 + hexvar ] test r14 , r14 je hexvar mov rcx , r14 mov rdx , rbp mov rsi , r12 mov rdi , rbx call hexvar test eax , eax je hexvar mov r14 , qword ptr [ r14 ] test r14 , r14 jne hexvar mov r8 , qword ptr [ r13 + hexvar ] mov rsi , qword ptr [ rsp + num ] mov rcx , rbp mov rdx , r15 mov rdi , qword ptr [ rsp ] call hexvar test eax , eax je hexvar cmp qword ptr [ r13 + hexvar ] , num je hexvar mov rsi , qword ptr [ r13 + hexvar ] mov rdi , rbp call qword ptr [ r12 + hexvar ] test eax , eax setne al movzx eax , al jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ r13 + num ] , num mov eax , num jne hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
test rsi , rsi je hexvar sub rsp , num xor edx , edx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar xor eax , eax add rsp , num ret nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] add rsp , num ret nop dword ptr [ rax ] xor eax , eax ret
,
,
,
test rsi , rsi je hexvar push rbp lea eax , [ rdx - num ] mov rbp , rdi push rbx mov rbx , rsi sub rsp , num cmp eax , num ja hexvar xor esi , esi mov edi , edx call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbx mov rdi , rbp mov rdx , rax pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdx , rax xor eax , eax call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret nop dword ptr [ rax ] xor eax , eax ret
,
,
,
,
,
,
,
push r12 push rbp mov rbp , rdi push rbx mov eax , dword ptr [ rsi + hexvar ] mov rbx , rsi test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov r12d , num test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov edx , dword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rbp test edx , edx cmove edx , r12d call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] pop rbx mov eax , num pop rbp pop r12 ret nop word ptr [ rax + rax ] lea rsi , [ rsi + hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r12 push rbp mov rbp , rdi push rbx mov eax , dword ptr [ rsi + hexvar ] mov rbx , rsi test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] mov r12d , num test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov edx , dword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + num ] mov rdi , rbp test edx , edx cmove edx , r12d call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar pop rbx xor eax , eax pop rbp pop r12 ret nop dword ptr [ rax ] pop rbx mov eax , num pop rbp pop r12 ret nop word ptr [ rax + rax ] lea rsi , [ rsi + hexvar ] call hexvar test eax , eax je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num jmp hexvar
,
,
,
,
,
,
push r15 mov eax , num mov r15 , rdi push r14 mov r14 , rsi push r13 mov r13 , r8 push r12 mov r12 , rcx push rbp push rbx mov rbx , rdx sub rsp , hexvar test rbx , rbx mov rbp , qword ptr [ rsi ] lea rdx , [ rsp + num ] cmove rdx , rax call hexvar test eax , eax jne hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ r14 ] mov rsi , rbp mov rdi , r15 sub rdx , rbp call hexvar test eax , eax je hexvar mov eax , num test rbx , rbx je hexvar mov rsi , qword ptr [ rsp + num ] test rsi , rsi je hexvar mov edx , dword ptr [ r12 ] mov ecx , dword ptr [ r13 ] mov rax , qword ptr [ rbx ] lea r8d , [ rdx + num ] cmp r8d , ecx jae hexvar mov qword ptr [ rax + rdx * num ] , rsi mov eax , num mov dword ptr [ r12 ] , r8d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret nop dword ptr [ rax ] add ecx , hexvar mov rdi , rax mov dword ptr [ r13 ] , ecx lea rsi , [ rcx * num ] call hexvar mov edx , dword ptr [ r12 ] mov rsi , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rax lea r8d , [ rdx + num ] jmp hexvar
,
,
,
,
,
,
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov dword ptr [ rsi ] , num mov rbp , qword ptr [ rdi ] xor eax , eax cmp rbp , rdx jae hexvar cmp byte ptr [ rbp ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret mov r12 , rdi mov rbx , rsi call hexvar xor edx , edx mov rsi , r12 mov rdi , rbp mov dword ptr [ rax ] , num mov r13 , rax call hexvar cmp rax , - num jne hexvar mov edx , dword ptr [ r13 ] test edx , edx je hexvar test rbx , rbx je hexvar mov dword ptr [ rbx ] , num xor eax , eax jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdi , rbp mov rsi , rax call hexvar xor eax , eax jmp hexvar
push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi ] cmp byte ptr [ rbp ] , hexvar je hexvar mov dword ptr [ rsi ] , num xor esi , esi call hexvar mov dword ptr [ r12 + num ] , eax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop lea rax , [ rbp + num ] xor esi , esi mov qword ptr [ rdi ] , rax call hexvar mov dword ptr [ r12 ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num xor esi , esi mov rdx , r13 mov rdi , rbx mov qword ptr [ rbx ] , rax call hexvar mov dword ptr [ r12 + num ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbp call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
push r13 mov r13 , rdx push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi ] cmp byte ptr [ rbp ] , hexvar je hexvar mov dword ptr [ rsi ] , num xor esi , esi call hexvar mov dword ptr [ r12 + num ] , eax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop lea rax , [ rbp + num ] xor esi , esi mov qword ptr [ rdi ] , rax call hexvar mov dword ptr [ r12 ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num xor esi , esi mov rdx , r13 mov rdi , rbx mov qword ptr [ rbx ] , rax call hexvar mov dword ptr [ r12 + num ] , eax mov rax , qword ptr [ rbx ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret nop word ptr [ rax + rax ] mov rdi , rbp call hexvar add rsp , num xor eax , eax pop rbx pop rbp pop r12 pop r13 ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push r14 mov r14d , ecx push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , r8d test edx , edx jne hexvar mov byte ptr [ rsp + hexvar ] , num xor r12d , r12d xor ebp , ebp lea r13 , [ rsp + hexvar ] cmp r14d , num mov ecx , dword ptr [ rsp + hexvar ] mov rdi , r13 sbb edx , edx and edx , num add edx , hexvar mov esi , dword ptr [ rdi ] add rdi , num lea eax , [ rsi - hexvar ] not esi and eax , esi and eax , hexvar je hexvar mov esi , eax shr esi , hexvar test eax , hexvar cmove eax , esi lea rsi , [ rdi + num ] cmove rdi , rsi mov esi , eax add sil , al lea rsi , [ rip + hexvar ] sbb rdi , num xor eax , eax call hexvar mov r8d , dword ptr [ rsp + hexvar ] mov ecx , r12d mov rdx , rbp lea rdi , [ rbx + hexvar ] mov rsi , r13 call hexvar test eax , eax je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop lea r8 , [ rsp + hexvar ] xor ecx , ecx call hexvar mov rbp , rax test rax , rax jns hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] lea r13 , [ rsp + hexvar ] mov rdx , rax xor eax , eax mov r12d , num lea rsi , [ rip + hexvar ] mov rdi , r13 call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
,
,
,
lea eax , [ rsi - num ] mov edx , esi mov rsi , - hexvar cmp eax , num ja hexvar lea rcx , [ rip + hexvar ] mov rsi , qword ptr [ rcx + rax * num ] jmp hexvar
,
,
push r14 push r13 mov r13 , rsi push r12 mov r12 , rdx push rbp mov rbp , rcx push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov r14 , rax call hexvar lea rax , [ rsp + hexvar ] mov rsi , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar test r13 , r13 je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] test r12 , r12 je hexvar mov rcx , qword ptr [ r12 ] test rcx , rcx je hexvar mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rbx lea rsi , [ rip + hexvar ] xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] test rbp , rbp je hexvar mov rcx , rdi mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rdx , [ rsp + num ] mov rsi , rbp call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , r14 lea rsi , [ rip + hexvar ] xor eax , eax call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax ] mov rdi , r13 call hexvar mov rbx , rax jmp hexvar
,
,
,
,
sub rsp , num call hexvar add rsp , num mov rdi , rax jmp hexvar
,
,
push r12 mov edx , num mov r12 , qword ptr [ rip + hexvar ] push rbp mov ebp , esi lea rsi , [ rip + hexvar ] push rbx mov rbx , rdi xor edi , edi call hexvar mov rdx , r12 mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov edx , num xor edi , edi lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , rax xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test ebp , ebp je hexvar mov edi , ebp call hexvar xor edi , edi mov edx , num lea rsi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] mov rdi , rbx mov rsi , rax xor eax , eax call hexvar jmp hexvar
,
,
test rdi , rdi je hexvar push rbp mov rsi , rdi push rbx mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar add rsp , hexvar pop rbx pop rbp ret nop dword ptr [ rax ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , dword ptr [ rax ] cmp edi , num je hexvar call hexvar mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi mov rbp , rax call hexvar mov rdx , rbp mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar add rsp , hexvar mov rax , - num pop rbx pop rbp ret nop dword ptr [ rax ] mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar mov rax , - num ret mov edx , num lea rsi , [ rip + hexvar ] jmp hexvar
push rbp xor edx , edx mov rbp , rsi push rbx mov rbx , rdi sub rsp , hexvar lea rsi , [ rsp + num ] call hexvar mov rdx , qword ptr [ rsp + num ] cmp byte ptr [ rdx ] , num jne hexvar add rsp , hexvar pop rbx pop rbp ret mov edx , num lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax xor eax , eax call hexvar
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 lea rax , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov dword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov edi , num call hexvar
,
,
sub rsp , num call hexvar mov edi , num call hexvar
,
push r14 push r13 push r12 mov r12d , ecx push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test edx , edx je hexvar mov rax , qword ptr [ rbx + num ] lea rsi , [ rsp + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test r12d , r12d je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret nop mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rsi , [ rip + hexvar ] mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] lea rdi , [ rsp + num ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax je hexvar lea r14 , [ rsp + hexvar ] lea rcx , [ rax + hexvar ] lea rdx , [ rax + num ] lea rsi , [ rip + hexvar ] mov rdi , r14 xor eax , eax call hexvar mov edi , dword ptr [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov rsi , r13 call hexvar mov byte ptr [ rsp + hexvar ] , num mov ecx , dword ptr [ rsp + hexvar ] xor eax , eax sub rsp , num lea rdx , [ r13 + num ] lea rsi , [ rip + hexvar ] mov rdi , rbp push r14 mov r9 , qword ptr [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] call hexvar pop rax pop rdx jmp hexvar nop word ptr cs : [ rax + rax ] xor edi , edi mov edx , num lea r14 , [ rsp + hexvar ] lea rsi , [ rip + hexvar ] call hexvar mov rdi , r14 mov rsi , rax xor eax , eax call hexvar jmp hexvar
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num lea rdx , [ rip - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ rax ] neg eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar leave ret
,
