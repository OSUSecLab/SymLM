,
,
,
,
,
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
,
,
,
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
,
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop pop rbp ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movsx edx , ax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov esi , ecx mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] leave ret
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar nop leave ret
,
,
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
,
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
,
