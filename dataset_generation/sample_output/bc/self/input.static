push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea rsi , [ rip - hexvar ] mov edi , num call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov byte ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] sub rsp , num lea rdx , [ rip + hexvar ] push rdx lea rdx , [ rip + hexvar ] push rdx lea rdx , [ rip + hexvar ] push rdx lea r9 , [ rip + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add rsp , hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax nop pop rbp ret
push rbp mov rbp , rsp call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , num pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe mov qword ptr [ rip + hexvar ] , rax leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] sub rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rax , num mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edi , eax call hexvar test eax , eax jle hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num cmp rax , qword ptr [ rbp - num ] je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num lea rbx , [ rdx + rcx ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] sub rdx , rax mov rax , rdx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp push r12 push rbx mov dword ptr [ rbp - hexvar ] , edi mov r12 , qword ptr [ rip + hexvar ] mov ebx , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] test ax , ax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov qword ptr [ rip + hexvar ] , r12 jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar movzx eax , bl mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov ebx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , bl add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , bl add eax , edx mov eax , eax lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar sete al movzx ebx , al test ebx , ebx jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r13 push r12 push rbx mov ebx , dword ptr [ rip + hexvar ] mov r12 , qword ptr [ rip + hexvar ] jmp hexvar movzx eax , byte ptr [ r12 ] test al , al je hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] jmp hexvar mov eax , num mov r13d , eax movsxd rax , ebx lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] test ax , ax je hexvar mov dword ptr [ rip + hexvar ] , ebx mov qword ptr [ rip + hexvar ] , r12 jmp hexvar movsxd rax , ebx lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx ebx , ax cmp ebx , hexvar jle hexvar movzx eax , r13b mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov r13d , eax movsxd rax , ebx lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , r13b add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde cmp ebx , eax jne hexvar movsxd rax , ebx lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , r13b add eax , edx mov eax , eax lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx ebx , ax add r12 , num mov rax , qword ptr [ rip + hexvar ] cmp r12 , rax jb hexvar mov eax , ebx pop rbx pop r12 pop r13 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , hexvar jmp hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov ecx , eax mov rax , rcx shl rax , num sub rax , rcx shl rax , num add rax , rdx mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , ecx mov eax , eax add rax , rsi movzx eax , byte ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] movzx eax , al add eax , esi sub eax , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movzx eax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] neg eax cdqe jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov eax , eax mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov ecx , eax mov rax , rcx shl rax , num sub rax , rcx shl rax , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] shr rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar nop leave ret
push rbp mov rbp , rsp mov edi , num call hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx edx , word ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax + num ] movsx edx , ax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , edx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov esi , ecx mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar mov rcx , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov qword ptr [ rax + rdx * num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov dword ptr [ rbp - hexvar ] , eax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov ecx , num mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov esi , eax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar test al , al je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num lea rbx , [ rax + rdx ] mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbx ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax sub dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rcx , ecx shl rcx , num add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , num mov dword ptr [ rip + hexvar ] , num call hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbx ] , rax mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , num call hexvar nop add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov ecx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov edx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov ecx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov edx , edx shl rdx , num add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar movabs rsi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rip + hexvar ] , num mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rip + hexvar ] , num mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar mov edi , hexvar call hexvar mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar call hexvar mov dword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov edi , hexvar call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe add rax , rcx mov byte ptr [ rax ] , sil mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push rbp mov rbp , rsp lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx add rax , rax mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movzx eax , al add rax , rcx mov qword ptr [ rbp - hexvar ] , rax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , hexvar call rax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , hexvar call rax sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe movzx eax , byte ptr [ rbp + rax - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov edi , edx call rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , ecx mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jg hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] sub edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
