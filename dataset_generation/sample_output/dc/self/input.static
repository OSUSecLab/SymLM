push rbp mov rbp , rsp sub rsp , hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov eax , edi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rdx mov rdx , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rdx mov rdx , rcx mov rcx , rax mov rbx , rdx mov eax , ecx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov r9d , edi mov rax , rsi mov rsi , r9 mov rdi , r10 mov rdi , rax mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , ecx mov rdi , rax call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] test ax , ax jns hexvar mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax mov eax , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rsi , [ rip - hexvar ] mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi and dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] movzx eax , al cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov r8d , num mov ecx , num mov edi , esi mov rsi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov ecx , edi mov rax , rsi mov rbx , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rbx mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] sar eax , hexvar mov edx , eax xor edx , dword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop jmp hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi and dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rcx + rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , esi mov rcx , rdx mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx and dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi and dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov edi , edx mov rsi , rax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov qword ptr [ rax + num ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , esi mov rcx , rdx mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov qword ptr [ rbp - num ] , rax and dword ptr [ rbp - hexvar ] , hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , num nop leave ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov edi , edx mov rsi , rax call hexvar mov rcx , rdx mov rdx , rcx jmp hexvar mov edi , num call hexvar mov rcx , rdx mov rdx , rcx mov rcx , rax mov rbx , rdx mov eax , ecx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar call hexvar mov dword ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar call hexvar mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov dword ptr [ rip + hexvar ] , hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov eax , ecx pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , num lea rdx , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp call hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rax , [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] add rdx , num mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov eax , ecx mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rbp - num ] , - num cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , edi mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , edi mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar mov eax , num leave ret
push rbp mov rbp , rsp nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov eax , ecx add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov eax , ecx pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov edi , num call hexvar nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num add rax , rdx add rax , rax mov rcx , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movzx eax , al add rax , rcx mov qword ptr [ rbp - hexvar ] , rax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp qword ptr [ rbp - hexvar ] , hexvar jle hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] neg rax pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , hexvar call rax mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , hexvar call rax sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe movzx eax , byte ptr [ rbp + rax - hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov edi , edx call rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , ecx mov rcx , rdx mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num sete al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov edx , num mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jg hexvar nop pop rbp ret
push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num mov esi , num mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] sub edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx cdqe mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
